// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from protos/client.proto</summary>
public static partial class ClientReflection {

  #region Descriptor
  /// <summary>File descriptor for protos/client.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNwcm90b3MvY2xpZW50LnByb3RvIisKCFBvc2l0aW9uEgkKAXgYASABKAIS",
          "CQoBeRgCIAEoAhIJCgF6GAMgASgCIisKCFJvdGF0aW9uEgkKAXgYASABKAIS",
          "CQoBeRgCIAEoAhIJCgF6GAMgASgCIkQKCE1vdmVJbmZvEhsKCHBvc2l0aW9u",
          "GAEgASgLMgkuUG9zaXRpb24SGwoIcm90YXRpb24YAiABKAsyCS5Sb3RhdGlv",
          "biJJCgpQbGF5ZXJJbmZvEg4KBnVzZXJJZBgBIAEoCRIbCghtb3ZlSW5mbxgC",
          "IAEoCzIJLk1vdmVJbmZvEg4KBmlzSG9zdBgDIAEoCCJaCg5QbGF5ZXJNb3Zl",
          "SW5mbxIOCgZ1c2VySWQYASABKAkSGwoIcG9zaXRpb24YAiABKAsyCS5Qb3Np",
          "dGlvbhIbCghyb3RhdGlvbhgDIAEoCzIJLlJvdGF0aW9uIkoKD1BsYXllclN0",
          "YXRlSW5mbxIOCgZ1c2VySWQYASABKAkSJwoOY2hhcmFjdGVyU3RhdGUYAiAB",
          "KA4yDy5DaGFyYWN0ZXJTdGF0ZSJOCglHaG9zdEluZm8SDwoHZ2hvc3RJZBgB",
          "IAEoDRITCgtnaG9zdFR5cGVJZBgCIAEoDRIbCghtb3ZlSW5mbxgDIAEoCzIJ",
          "Lk1vdmVJbmZvIloKDUdob3N0TW92ZUluZm8SDwoHZ2hvc3RJZBgBIAEoDRIb",
          "Cghwb3NpdGlvbhgCIAEoCzIJLlBvc2l0aW9uEhsKCHJvdGF0aW9uGAMgASgL",
          "MgkuUm90YXRpb24iSgoOR2hvc3RTdGF0ZUluZm8SDwoHZ2hvc3RJZBgBIAEo",
          "DRInCg5jaGFyYWN0ZXJTdGF0ZRgCIAEoDjIPLkNoYXJhY3RlclN0YXRlIksK",
          "CEl0ZW1JbmZvEg4KBml0ZW1JZBgBIAEoDRISCgppdGVtVHlwZUlkGAIgASgN",
          "EhsKCHBvc2l0aW9uGAMgASgLMgkuUG9zaXRpb24iQAoLUHJvZmlsZUluZm8S",
          "DgoGdXNlcklkGAEgASgJEhAKCG5pY2tuYW1lGAIgASgJEg8KB2xldmVsSWQY",
          "AyABKA0iXAoIUm9vbUluZm8SFQoNZ2FtZVNlc3Npb25JZBgBIAEoCRIQCghy",
          "b29tTmFtZRgCIAEoCRIWCg5udW1iZXJPZlBsYXllchgDIAEoDRIPCgdsYXRl",
          "bmN5GAQgASgNIkAKFUMyU19QbGF5ZXJNb3ZlUmVxdWVzdBInCg5wbGF5ZXJN",
          "b3ZlSW5mbxgBIAEoCzIPLlBsYXllck1vdmVJbmZvIkYKGlMyQ19QbGF5ZXJN",
          "b3ZlTm90aWZpY2F0aW9uEigKD3BsYXllck1vdmVJbmZvcxgBIAMoCzIPLlBs",
          "YXllck1vdmVJbmZvIj4KFEMyU19HaG9zdE1vdmVSZXF1ZXN0EiYKDmdob3N0",
          "TW92ZUluZm9zGAEgAygLMg4uR2hvc3RNb3ZlSW5mbyJDChlTMkNfR2hvc3RN",
          "b3ZlTm90aWZpY2F0aW9uEiYKDmdob3N0TW92ZUluZm9zGAEgAygLMg4uR2hv",
          "c3RNb3ZlSW5mbyIkCg9TMkNfUGluZ1JlcXVlc3QSEQoJdGltZXN0YW1wGAEg",
          "ASgEIiUKEEMyU19QaW5nUmVzcG9uc2USEQoJdGltZXN0YW1wGAEgASgEIkkK",
          "HEMyU19QbGF5ZXJTdGF0ZUNoYW5nZVJlcXVlc3QSKQoPcGxheWVyU3RhdGVJ",
          "bmZvGAEgASgLMhAuUGxheWVyU3RhdGVJbmZvIk4KIVMyQ19QbGF5ZXJTdGF0",
          "ZUNoYW5nZU5vdGlmaWNhdGlvbhIpCg9wbGF5ZXJTdGF0ZUluZm8YASABKAsy",
          "EC5QbGF5ZXJTdGF0ZUluZm8iRgobQzJTX0dob3N0U3RhdGVDaGFuZ2VSZXF1",
          "ZXN0EicKDmdob3N0U3RhdGVJbmZvGAEgASgLMg8uR2hvc3RTdGF0ZUluZm8i",
          "SwogUzJDX0dob3N0U3RhdGVDaGFuZ2VOb3RpZmljYXRpb24SJwoOZ2hvc3RT",
          "dGF0ZUluZm8YASABKAsyDy5HaG9zdFN0YXRlSW5mbyIuChVDMlNfSXRlbUNo",
          "YW5nZVJlcXVlc3QSFQoNaW52ZW50b3J5U2xvdBgBIAEoDSI8ChpTMkNfSXRl",
          "bUNoYW5nZU5vdGlmaWNhdGlvbhIOCgZ1c2VySWQYASABKAkSDgoGaXRlbUlk",
          "GAIgASgNIjwKGUMyU19QbGF5ZXJBdHRhY2tlZFJlcXVlc3QSDgoGdXNlcklk",
          "GAEgASgJEg8KB2dob3N0SWQYAiABKA0iFwoVQzJTX0xpZmVVcGRhdGVSZXF1",
          "ZXN0IjoKFlMyQ19QbGF5ZXJMaWZlUmVzcG9uc2USDAoEbGlmZRgBIAEoDRIS",
          "Cgppc0F0dGFja2VkGAIgASgIImcKHEMyU19HaG9zdFNwZWNpYWxTdGF0ZVJl",
          "cXVlc3QSDwoHZ2hvc3RJZBgBIAEoDRIoCgxzcGVjaWFsU3RhdGUYAiABKA4y",
          "Ei5HaG9zdFNwZWNpYWxTdGF0ZRIMCgRpc09uGAMgASgIImwKIVMyQ19HaG9z",
          "dFNwZWNpYWxTdGF0ZU5vdGlmaWNhdGlvbhIPCgdnaG9zdElkGAEgASgNEigK",
          "DHNwZWNpYWxTdGF0ZRgCIAEoDjISLkdob3N0U3BlY2lhbFN0YXRlEgwKBGlz",
          "T24YAyABKAgiOwoYQzJTX0dob3N0QXR0YWNrZWRSZXF1ZXN0Eg8KB2dob3N0",
          "SWQYASABKA0SDgoGdXNlcklkGAIgASgJIiwKFUMyU19HaG9zdFNwYXduUmVx",
          "dWVzdBITCgtnaG9zdFR5cGVJZBgBIAEoDSI7ChpTMkNfR2hvc3RTcGF3bk5v",
          "dGlmaWNhdGlvbhIdCglnaG9zdEluZm8YASABKAsyCi5HaG9zdEluZm8iLwob",
          "UzJDX0dob3N0RGVsZXRlTm90aWZpY2F0aW9uEhAKCGdob3N0SWRzGAEgAygN",
          "IjsKEkMyU19JdGVtR2V0UmVxdWVzdBIOCgZpdGVtSWQYASABKA0SFQoNaW52",
          "ZW50b3J5U2xvdBgCIAEoDSI8ChNTMkNfSXRlbUdldFJlc3BvbnNlEg4KBml0",
          "ZW1JZBgBIAEoDRIVCg1pbnZlbnRvcnlTbG90GAIgASgNIjkKF1MyQ19JdGVt",
          "R2V0Tm90aWZpY2F0aW9uEg4KBml0ZW1JZBgBIAEoDRIOCgZ1c2VySWQYAiAB",
          "KAkiKwoSQzJTX0l0ZW1Vc2VSZXF1ZXN0EhUKDWludmVudG9yeVNsb3QYASAB",
          "KA0iPAoTUzJDX0l0ZW1Vc2VSZXNwb25zZRIOCgZpdGVtSWQYASABKA0SFQoN",
          "aW52ZW50b3J5U2xvdBgCIAEoDSI5ChdTMkNfSXRlbVVzZU5vdGlmaWNhdGlv",
          "bhIOCgZ1c2VySWQYASABKAkSDgoGaXRlbUlkGAIgASgNIkwKFkMyU19JdGVt",
          "RGlzY2FyZFJlcXVlc3QSGwoIaXRlbUluZm8YASABKAsyCS5JdGVtSW5mbxIV",
          "Cg1pbnZlbnRvcnlTbG90GAIgASgNIjAKF1MyQ19JdGVtRGlzY2FyZFJlc3Bv",
          "bnNlEhUKDWludmVudG9yeVNsb3QYASABKA0iPQobUzJDX0l0ZW1EaXNjYXJk",
          "Tm90aWZpY2F0aW9uEg4KBnVzZXJJZBgBIAEoCRIOCgZpdGVtSWQYAiABKA0i",
          "JwoVQzJTX0l0ZW1EaXN1c2VSZXF1ZXN0Eg4KBml0ZW1JZBgBIAEoDSI8ChpT",
          "MkNfSXRlbURpc3VzZU5vdGlmaWNhdGlvbhIOCgZ1c2VySWQYASABKAkSDgoG",
          "aXRlbUlkGAIgASgNIi0KGlMyQ19JdGVtRGVsZXRlTm90aWZpY2F0aW9uEg8K",
          "B2l0ZW1JZHMYASADKA0iLQoXQzJTX0l0ZW1QdXJjaGFzZVJlcXVlc3QSEgoK",
          "aXRlbVR5cGVJZBgBIAEoDSJPChxTMkNfSXRlbVB1cmNoYXNlTm90aWZpY2F0",
          "aW9uEhsKCGl0ZW1JbmZvGAEgASgLMgkuSXRlbUluZm8SEgoKc291bENyZWRp",
          "dBgCIAEoDSJDChhTMkNfSXRlbVB1cmNoYXNlUmVzcG9uc2USJwoOZ2xvYmFs",
          "RmFpbENvZGUYASABKA4yDy5HbG9iYWxGYWlsQ29kZSIrChVDMlNfSXRlbUNy",
          "ZWF0ZVJlcXVlc3QSEgoKaXRlbVR5cGVJZBgBIAEoDSI5ChpTMkNfSXRlbUNy",
          "ZWF0ZU5vdGlmaWNhdGlvbhIbCghpdGVtSW5mbxgBIAEoCzIJLkl0ZW1JbmZv",
          "IkYKFUMyU19Eb29yVG9nZ2xlUmVxdWVzdBIOCgZkb29ySWQYASABKA0SHQoJ",
          "ZG9vclN0YXRlGAIgASgOMgouRG9vclN0YXRlIksKGlMyQ19Eb29yVG9nZ2xl",
          "Tm90aWZpY2F0aW9uEg4KBmRvb3JJZBgBIAEoDRIdCglkb29yU3RhdGUYAiAB",
          "KA4yCi5Eb29yU3RhdGUiKAoWQzJTX0V4dHJhY3RTb3VsUmVxdWVzdBIOCgZ1",
          "c2VySWQYASABKAkiMQobUzJDX0V4dHJhY3RTb3VsTm90aWZpY2F0aW9uEhIK",
          "CnNvdWxDcmVkaXQYASABKA0iGwoZQzJTX0Rpc2Nvbm5lY3RSb29tUmVxdWVz",
          "dCIyCiBTMkNfRGlzY29ubmVjdFBsYXllck5vdGlmaWNhdGlvbhIOCgZ1c2Vy",
          "SWQYASABKAkiGgoYUzJDX0tpY2tSb29tTm90aWZpY2F0aW9uIiIKIFMyQ19C",
          "bG9ja0ludGVyYWN0aW9uTm90aWZpY2F0aW9uIjYKHVMyQ19SZW1haW5pbmdU",
          "aW1lTm90aWZpY2F0aW9uEhUKDXJlbWFpbmluZ1RpbWUYASABKA0iMwobQzJT",
          "X0RpZmZpY3VsdHlTZWxlY3RSZXF1ZXN0EhQKDGRpZmZpY3VsdHlJZBgBIAEo",
          "DSI4CiBTMkNfRGlmZmljdWx0eVNlbGVjdE5vdGlmaWNhdGlvbhIUCgxkaWZm",
          "aWN1bHR5SWQYASABKA0iLgoVQzJTX1N0YXJ0U3RhZ2VSZXF1ZXN0EhUKDWdh",
          "bWVTZXNzaW9uSWQYASABKAkilAEKGlMyQ19TdGFydFN0YWdlTm90aWZpY2F0",
          "aW9uEicKDmdsb2JhbEZhaWxDb2RlGAEgASgOMg8uR2xvYmFsRmFpbENvZGUS",
          "DwoHbWVzc2FnZRgCIAEoCRIcCglpdGVtSW5mb3MYAyADKAsyCS5JdGVtSW5m",
          "bxIeCgpnaG9zdEluZm9zGAQgAygLMgouR2hvc3RJbmZvIo0BChhTMkNfU3Rh",
          "Z2VFbmROb3RpZmljYXRpb24SFAoMcmVtYWluaW5nRGF5GAEgASgNEiAKDXN0",
          "YXJ0UG9zaXRpb24YAiABKAsyCS5Qb3NpdGlvbhISCgpzb3VsQ3JlZGl0GAMg",
          "ASgNEhIKCmFsaXZlQ291bnQYBCABKA0SEQoJZGllZENvdW50GAUgASgNIlUK",
          "HVMyQ19TdWJtaXNzaW9uRW5kTm90aWZpY2F0aW9uEg4KBnJlc3VsdBgBIAEo",
          "CBILCgNkYXkYAiABKAkSFwoPc3VibWlzc2lvblZhbHVlGAMgASgNIjgKGEMy",
          "U19SZWdpc3RBY2NvdW50UmVxdWVzdBIKCgJpZBgBIAEoCRIQCghwYXNzd29y",
          "ZBgCIAEoCSJVChlTMkNfUmVnaXN0QWNjb3VudFJlc3BvbnNlEicKDmdsb2Jh",
          "bEZhaWxDb2RlGAEgASgOMg8uR2xvYmFsRmFpbENvZGUSDwoHbWVzc2FnZRgC",
          "IAEoCSIwChBDMlNfTG9naW5SZXF1ZXN0EgoKAmlkGAEgASgJEhAKCHBhc3N3",
          "b3JkGAIgASgJIlsKEVMyQ19Mb2dpblJlc3BvbnNlEicKDmdsb2JhbEZhaWxD",
          "b2RlGAEgASgOMg8uR2xvYmFsRmFpbENvZGUSDgoGdXNlcklkGAIgASgJEg0K",
          "BXRva2VuGAMgASgJIj0KGUMyU19DaGFuZ2VOaWNrbmFtZVJlcXVlc3QSDgoG",
          "dXNlcklkGAEgASgJEhAKCG5pY2tuYW1lGAIgASgJIlYKGlMyQ19DaGFuZ2VO",
          "aWNrbmFtZVJlc3BvbnNlEicKDmdsb2JhbEZhaWxDb2RlGAEgASgOMg8uR2xv",
          "YmFsRmFpbENvZGUSDwoHbWVzc2FnZRgCIAEoCSInChVDMlNfRW50ZXJMb2Ji",
          "eVJlcXVlc3QSDgoGdXNlcklkGAEgASgJIkEKFlMyQ19FbnRlckxvYmJ5UmVz",
          "cG9uc2USJwoOZ2xvYmFsRmFpbENvZGUYASABKA4yDy5HbG9iYWxGYWlsQ29k",
          "ZSIsChpDMlNfV2FpdGluZ1Jvb21MaXN0UmVxdWVzdBIOCgZ1c2VySWQYASAB",
          "KAkiZAobUzJDX1dhaXRpbmdSb29tTGlzdFJlc3BvbnNlEhwKCXJvb21JbmZv",
          "cxgBIAMoCzIJLlJvb21JbmZvEicKDmdsb2JhbEZhaWxDb2RlGAIgASgOMg8u",
          "R2xvYmFsRmFpbENvZGUiNgoVQzJTX0NyZWF0ZVJvb21SZXF1ZXN0Eg4KBnVz",
          "ZXJJZBgBIAEoCRINCgV0b2tlbhgCIAEoCSJ9ChZTMkNfQ3JlYXRlUm9vbVJl",
          "c3BvbnNlEicKDmdsb2JhbEZhaWxDb2RlGAEgASgOMg8uR2xvYmFsRmFpbENv",
          "ZGUSDwoHbWVzc2FnZRgCIAEoCRIVCg1nYW1lU2Vzc2lvbklkGAMgASgJEhIK",
          "Cmludml0ZUNvZGUYBCABKAkiSAoTQzJTX0pvaW5Sb29tUmVxdWVzdBIOCgZ1",
          "c2VySWQYASABKAkSEgoKaW52aXRlQ29kZRgCIAEoCRINCgV0b2tlbhgDIAEo",
          "CSJXCiJDMlNfSm9pblJvb21CeUdhbWVTZXNzaW9uSWRSZXF1ZXN0Eg4KBnVz",
          "ZXJJZBgBIAEoCRISCgppbnZpdGVDb2RlGAIgASgJEg0KBXRva2VuGAMgASgJ",
          "IokBChRTMkNfSm9pblJvb21SZXNwb25zZRInCg5nbG9iYWxGYWlsQ29kZRgB",
          "IAEoDjIPLkdsb2JhbEZhaWxDb2RlEg8KB21lc3NhZ2UYAiABKAkSFQoNZ2Ft",
          "ZVNlc3Npb25JZBgDIAEoCRIgCgtwbGF5ZXJJbmZvcxgEIAMoCzILLlBsYXll",
          "ckluZm8iKgoYUzJDX0pvaW5Sb29tTm90aWZpY2F0aW9uEg4KBnVzZXJJZBgB",
          "IAEoCSLQIAoKR2FtZVBhY2tldBIzChFwbGF5ZXJNb3ZlUmVxdWVzdBgBIAEo",
          "CzIWLkMyU19QbGF5ZXJNb3ZlUmVxdWVzdEgAEj0KFnBsYXllck1vdmVOb3Rp",
          "ZmljYXRpb24YAiABKAsyGy5TMkNfUGxheWVyTW92ZU5vdGlmaWNhdGlvbkgA",
          "EjEKEGdob3N0TW92ZVJlcXVlc3QYAyABKAsyFS5DMlNfR2hvc3RNb3ZlUmVx",
          "dWVzdEgAEjsKFWdob3N0TW92ZU5vdGlmaWNhdGlvbhgEIAEoCzIaLlMyQ19H",
          "aG9zdE1vdmVOb3RpZmljYXRpb25IABInCgtwaW5nUmVxdWVzdBgFIAEoCzIQ",
          "LlMyQ19QaW5nUmVxdWVzdEgAEikKDHBpbmdSZXNwb25zZRgGIAEoCzIRLkMy",
          "U19QaW5nUmVzcG9uc2VIABJBChhwbGF5ZXJTdGF0ZUNoYW5nZVJlcXVlc3QY",
          "ByABKAsyHS5DMlNfUGxheWVyU3RhdGVDaGFuZ2VSZXF1ZXN0SAASSwodcGxh",
          "eWVyU3RhdGVDaGFuZ2VOb3RpZmljYXRpb24YCCABKAsyIi5TMkNfUGxheWVy",
          "U3RhdGVDaGFuZ2VOb3RpZmljYXRpb25IABI/ChdnaG9zdFN0YXRlQ2hhbmdl",
          "UmVxdWVzdBgJIAEoCzIcLkMyU19HaG9zdFN0YXRlQ2hhbmdlUmVxdWVzdEgA",
          "EkkKHGdob3N0U3RhdGVDaGFuZ2VOb3RpZmljYXRpb24YCiABKAsyIS5TMkNf",
          "R2hvc3RTdGF0ZUNoYW5nZU5vdGlmaWNhdGlvbkgAEjMKEWl0ZW1DaGFuZ2VS",
          "ZXF1ZXN0GAsgASgLMhYuQzJTX0l0ZW1DaGFuZ2VSZXF1ZXN0SAASPQoWaXRl",
          "bUNoYW5nZU5vdGlmaWNhdGlvbhgMIAEoCzIbLlMyQ19JdGVtQ2hhbmdlTm90",
          "aWZpY2F0aW9uSAASOwoVcGxheWVyQXR0YWNrZWRSZXF1ZXN0GGUgASgLMhou",
          "QzJTX1BsYXllckF0dGFja2VkUmVxdWVzdEgAEjUKEnBsYXllckxpZmVSZXNw",
          "b25zZRhmIAEoCzIXLlMyQ19QbGF5ZXJMaWZlUmVzcG9uc2VIABIzChFsaWZl",
          "VXBkYXRlUmVxdWVzdBhnIAEoCzIWLkMyU19MaWZlVXBkYXRlUmVxdWVzdEgA",
          "EkIKGGdob3N0U3BlY2lhbFN0YXRlUmVxdWVzdBjJASABKAsyHS5DMlNfR2hv",
          "c3RTcGVjaWFsU3RhdGVSZXF1ZXN0SAASTAodZ2hvc3RTcGVjaWFsU3RhdGVO",
          "b3RpZmljYXRpb24YygEgASgLMiIuUzJDX0dob3N0U3BlY2lhbFN0YXRlTm90",
          "aWZpY2F0aW9uSAASOgoUZ2hvc3RBdHRhY2tlZFJlcXVlc3QYywEgASgLMhku",
          "QzJTX0dob3N0QXR0YWNrZWRSZXF1ZXN0SAASNAoRZ2hvc3RTcGF3blJlcXVl",
          "c3QYzAEgASgLMhYuQzJTX0dob3N0U3Bhd25SZXF1ZXN0SAASPgoWZ2hvc3RT",
          "cGF3bk5vdGlmaWNhdGlvbhjNASABKAsyGy5TMkNfR2hvc3RTcGF3bk5vdGlm",
          "aWNhdGlvbkgAEkAKF2dob3N0RGVsZXRlTm90aWZpY2F0aW9uGM4BIAEoCzIc",
          "LlMyQ19HaG9zdERlbGV0ZU5vdGlmaWNhdGlvbkgAEi4KDml0ZW1HZXRSZXF1",
          "ZXN0GK0CIAEoCzITLkMyU19JdGVtR2V0UmVxdWVzdEgAEjAKD2l0ZW1HZXRS",
          "ZXNwb25zZRiuAiABKAsyFC5TMkNfSXRlbUdldFJlc3BvbnNlSAASOAoTaXRl",
          "bUdldE5vdGlmaWNhdGlvbhivAiABKAsyGC5TMkNfSXRlbUdldE5vdGlmaWNh",
          "dGlvbkgAEi4KDml0ZW1Vc2VSZXF1ZXN0GLACIAEoCzITLkMyU19JdGVtVXNl",
          "UmVxdWVzdEgAEjAKD2l0ZW1Vc2VSZXNwb25zZRixAiABKAsyFC5TMkNfSXRl",
          "bVVzZVJlc3BvbnNlSAASOAoTaXRlbVVzZU5vdGlmaWNhdGlvbhiyAiABKAsy",
          "GC5TMkNfSXRlbVVzZU5vdGlmaWNhdGlvbkgAEjYKEml0ZW1EaXNjYXJkUmVx",
          "dWVzdBizAiABKAsyFy5DMlNfSXRlbURpc2NhcmRSZXF1ZXN0SAASOAoTaXRl",
          "bURpc2NhcmRSZXNwb25zZRi0AiABKAsyGC5TMkNfSXRlbURpc2NhcmRSZXNw",
          "b25zZUgAEkAKF2l0ZW1EaXNjYXJkTm90aWZpY2F0aW9uGLUCIAEoCzIcLlMy",
          "Q19JdGVtRGlzY2FyZE5vdGlmaWNhdGlvbkgAEjQKEWl0ZW1EaXN1c2VSZXF1",
          "ZXN0GLYCIAEoCzIWLkMyU19JdGVtRGlzdXNlUmVxdWVzdEgAEj4KFml0ZW1E",
          "aXN1c2VOb3RpZmljYXRpb24YtwIgASgLMhsuUzJDX0l0ZW1EaXN1c2VOb3Rp",
          "ZmljYXRpb25IABI+ChZpdGVtRGVsZXRlTm90aWZpY2F0aW9uGLgCIAEoCzIb",
          "LlMyQ19JdGVtRGVsZXRlTm90aWZpY2F0aW9uSAASOAoTaXRlbVB1cmNoYXNl",
          "UmVxdWVzdBi5AiABKAsyGC5DMlNfSXRlbVB1cmNoYXNlUmVxdWVzdEgAEkIK",
          "GGl0ZW1QdXJjaGFzZU5vdGlmaWNhdGlvbhi6AiABKAsyHS5TMkNfSXRlbVB1",
          "cmNoYXNlTm90aWZpY2F0aW9uSAASOgoUaXRlbVB1cmNoYXNlUmVzcG9uc2UY",
          "uwIgASgLMhkuUzJDX0l0ZW1QdXJjaGFzZVJlc3BvbnNlSAASNAoRaXRlbUNy",
          "ZWF0ZVJlcXVlc3QYvAIgASgLMhYuQzJTX0l0ZW1DcmVhdGVSZXF1ZXN0SAAS",
          "PgoWaXRlbUNyZWF0ZU5vdGlmaWNhdGlvbhi9AiABKAsyGy5TMkNfSXRlbUNy",
          "ZWF0ZU5vdGlmaWNhdGlvbkgAEjQKEWRvb3JUb2dnbGVSZXF1ZXN0GN4CIAEo",
          "CzIWLkMyU19Eb29yVG9nZ2xlUmVxdWVzdEgAEj4KFmRvb3JUb2dnbGVOb3Rp",
          "ZmljYXRpb24Y3wIgASgLMhsuUzJDX0Rvb3JUb2dnbGVOb3RpZmljYXRpb25I",
          "ABI2ChJleHRyYWN0U291bFJlcXVlc3QYkQMgASgLMhcuQzJTX0V4dHJhY3RT",
          "b3VsUmVxdWVzdEgAEkAKF2V4dHJhY3RTb3VsTm90aWZpY2F0aW9uGJIDIAEo",
          "CzIcLlMyQ19FeHRyYWN0U291bE5vdGlmaWNhdGlvbkgAEkoKHGRpc2Nvbm5l",
          "Y3RQbGF5ZXJOb3RpZmljYXRpb24YkwMgASgLMiEuUzJDX0Rpc2Nvbm5lY3RQ",
          "bGF5ZXJOb3RpZmljYXRpb25IABJEChlyZW1haW5pbmdUaW1lTm90aWZpY2F0",
          "aW9uGJQDIAEoCzIeLlMyQ19SZW1haW5pbmdUaW1lTm90aWZpY2F0aW9uSAAS",
          "SgocYmxvY2tJbnRlcmFjdGlvbk5vdGlmaWNhdGlvbhiVAyABKAsyIS5TMkNf",
          "QmxvY2tJbnRlcmFjdGlvbk5vdGlmaWNhdGlvbkgAEjQKEXN0YXJ0U3RhZ2VS",
          "ZXF1ZXN0GJYDIAEoCzIWLkMyU19TdGFydFN0YWdlUmVxdWVzdEgAEj4KFnN0",
          "YXJ0U3RhZ2VOb3RpZmljYXRpb24YlwMgASgLMhsuUzJDX1N0YXJ0U3RhZ2VO",
          "b3RpZmljYXRpb25IABI6ChRzdGFnZUVuZE5vdGlmaWNhdGlvbhiYAyABKAsy",
          "GS5TMkNfU3RhZ2VFbmROb3RpZmljYXRpb25IABJEChlzdWJtaXNzaW9uRW5k",
          "Tm90aWZpY2F0aW9uGJkDIAEoCzIeLlMyQ19TdWJtaXNzaW9uRW5kTm90aWZp",
          "Y2F0aW9uSAASQAoXZGlmZmljdWx0eVNlbGVjdFJlcXVlc3QYmgMgASgLMhwu",
          "QzJTX0RpZmZpY3VsdHlTZWxlY3RSZXF1ZXN0SAASSgocZGlmZmljdWx0eVNl",
          "bGVjdE5vdGlmaWNhdGlvbhibAyABKAsyIS5TMkNfRGlmZmljdWx0eVNlbGVj",
          "dE5vdGlmaWNhdGlvbkgAEjwKFWRpc2Nvbm5lY3RSb29tUmVxdWVzdBicAyAB",
          "KAsyGi5DMlNfRGlzY29ubmVjdFJvb21SZXF1ZXN0SAASOgoUa2lja1Jvb21O",
          "b3RpZmljYXRpb24YnQMgASgLMhkuUzJDX0tpY2tSb29tTm90aWZpY2F0aW9u",
          "SAASOgoUcmVnaXN0QWNjb3VudFJlcXVlc3QY9AMgASgLMhkuQzJTX1JlZ2lz",
          "dEFjY291bnRSZXF1ZXN0SAASPAoVcmVnaXN0QWNjb3VudFJlc3BvbnNlGPUD",
          "IAEoCzIaLlMyQ19SZWdpc3RBY2NvdW50UmVzcG9uc2VIABIqCgxsb2dpblJl",
          "cXVlc3QY9gMgASgLMhEuQzJTX0xvZ2luUmVxdWVzdEgAEiwKDWxvZ2luUmVz",
          "cG9uc2UY9wMgASgLMhIuUzJDX0xvZ2luUmVzcG9uc2VIABI8ChVjaGFuZ2VO",
          "aWNrbmFtZVJlcXVlc3QY+AMgASgLMhouQzJTX0NoYW5nZU5pY2tuYW1lUmVx",
          "dWVzdEgAEj4KFmNoYW5nZU5pY2tuYW1lUmVzcG9uc2UY+QMgASgLMhsuUzJD",
          "X0NoYW5nZU5pY2tuYW1lUmVzcG9uc2VIABI0ChFlbnRlckxvYmJ5UmVxdWVz",
          "dBj6AyABKAsyFi5DMlNfRW50ZXJMb2JieVJlcXVlc3RIABI2ChJlbnRlckxv",
          "YmJ5UmVzcG9uc2UY+wMgASgLMhcuUzJDX0VudGVyTG9iYnlSZXNwb25zZUgA",
          "Ej4KFndhaXRpbmdSb29tTGlzdFJlcXVlc3QY/AMgASgLMhsuQzJTX1dhaXRp",
          "bmdSb29tTGlzdFJlcXVlc3RIABJAChd3YWl0aW5nUm9vbUxpc3RSZXNwb25z",
          "ZRj9AyABKAsyHC5TMkNfV2FpdGluZ1Jvb21MaXN0UmVzcG9uc2VIABI0ChFj",
          "cmVhdGVSb29tUmVxdWVzdBjZBCABKAsyFi5DMlNfQ3JlYXRlUm9vbVJlcXVl",
          "c3RIABI2ChJjcmVhdGVSb29tUmVzcG9uc2UY2gQgASgLMhcuUzJDX0NyZWF0",
          "ZVJvb21SZXNwb25zZUgAEjAKD2pvaW5Sb29tUmVxdWVzdBjbBCABKAsyFC5D",
          "MlNfSm9pblJvb21SZXF1ZXN0SAASTgoeam9pblJvb21CeUdhbWVTZXNzaW9u",
          "SWRSZXF1ZXN0GNwEIAEoCzIjLkMyU19Kb2luUm9vbUJ5R2FtZVNlc3Npb25J",
          "ZFJlcXVlc3RIABIyChBqb2luUm9vbVJlc3BvbnNlGN0EIAEoCzIVLlMyQ19K",
          "b2luUm9vbVJlc3BvbnNlSAASOgoUam9pblJvb21Ob3RpZmljYXRpb24Y3gQg",
          "ASgLMhkuUzJDX0pvaW5Sb29tTm90aWZpY2F0aW9uSABCCQoHcGF5bG9hZCps",
          "Cg5HbG9iYWxGYWlsQ29kZRIICgROT05FEAASCwoHVU5LTk9XThABEhMKD0lO",
          "VkFMSURfUkVRVUVTVBACEhkKFUFVVEhFTlRJQ0FUSU9OX0ZBSUxFRBADEhMK",
          "D0RVUExJQ0FURURfVVNFUhAEKjYKCVVzZXJTdGF0ZRITCg9VU0VSX1NUQVRF",
          "X05PTkUQABIICgRTVEFZEAESCgoGSU5HQU1FEAIqTQoQR2FtZVNlc3Npb25T",
          "dGF0ZRITCg9HQU1FX1NUQVRFX05PTkUQABILCgdQUkVQQVJFEAESDgoKSU5Q",
          "Uk9HUkVTUxACEgcKA0VORBADKpMBCg5DaGFyYWN0ZXJTdGF0ZRIYChRDSEFS",
          "QUNURVJfU1RBVEVfTk9ORRAAEggKBElETEUQARIICgRNT1ZFEAISBwoDUlVO",
          "EAMSCAoESlVNUBAEEgoKBkFUVEFDSxAFEggKBERJRUQQBhIHCgNISVQQBxIM",
          "CghDT09MRE9XThAIEgkKBVNIT1VUEAkSCAoERVhJVBAKKkkKEUdob3N0U3Bl",
          "Y2lhbFN0YXRlEhwKGEdIT1NUX1NQRUNJQUxfU1RBVEVfTk9ORRAAEgcKA1NF",
          "RRABEg0KCUVZRV9MSUdIVBACKlAKCURvb3JTdGF0ZRITCg9ET09SX1NUQVRF",
          "X05PTkUQABINCglET09SX0xFRlQQARIPCgtET09SX01JRERMRRACEg4KCkRP",
          "T1JfUklHSFQQA2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GlobalFailCode), typeof(global::UserState), typeof(global::GameSessionState), typeof(global::CharacterState), typeof(global::GhostSpecialState), typeof(global::DoorState), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Position), global::Position.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Rotation), global::Rotation.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MoveInfo), global::MoveInfo.Parser, new[]{ "Position", "Rotation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerInfo), global::PlayerInfo.Parser, new[]{ "UserId", "MoveInfo", "IsHost" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerMoveInfo), global::PlayerMoveInfo.Parser, new[]{ "UserId", "Position", "Rotation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerStateInfo), global::PlayerStateInfo.Parser, new[]{ "UserId", "CharacterState" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GhostInfo), global::GhostInfo.Parser, new[]{ "GhostId", "GhostTypeId", "MoveInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GhostMoveInfo), global::GhostMoveInfo.Parser, new[]{ "GhostId", "Position", "Rotation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GhostStateInfo), global::GhostStateInfo.Parser, new[]{ "GhostId", "CharacterState" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ItemInfo), global::ItemInfo.Parser, new[]{ "ItemId", "ItemTypeId", "Position" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ProfileInfo), global::ProfileInfo.Parser, new[]{ "UserId", "Nickname", "LevelId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RoomInfo), global::RoomInfo.Parser, new[]{ "GameSessionId", "RoomName", "NumberOfPlayer", "Latency" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_PlayerMoveRequest), global::C2S_PlayerMoveRequest.Parser, new[]{ "PlayerMoveInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_PlayerMoveNotification), global::S2C_PlayerMoveNotification.Parser, new[]{ "PlayerMoveInfos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_GhostMoveRequest), global::C2S_GhostMoveRequest.Parser, new[]{ "GhostMoveInfos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_GhostMoveNotification), global::S2C_GhostMoveNotification.Parser, new[]{ "GhostMoveInfos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_PingRequest), global::S2C_PingRequest.Parser, new[]{ "Timestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_PingResponse), global::C2S_PingResponse.Parser, new[]{ "Timestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_PlayerStateChangeRequest), global::C2S_PlayerStateChangeRequest.Parser, new[]{ "PlayerStateInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_PlayerStateChangeNotification), global::S2C_PlayerStateChangeNotification.Parser, new[]{ "PlayerStateInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_GhostStateChangeRequest), global::C2S_GhostStateChangeRequest.Parser, new[]{ "GhostStateInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_GhostStateChangeNotification), global::S2C_GhostStateChangeNotification.Parser, new[]{ "GhostStateInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ItemChangeRequest), global::C2S_ItemChangeRequest.Parser, new[]{ "InventorySlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemChangeNotification), global::S2C_ItemChangeNotification.Parser, new[]{ "UserId", "ItemId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_PlayerAttackedRequest), global::C2S_PlayerAttackedRequest.Parser, new[]{ "UserId", "GhostId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_LifeUpdateRequest), global::C2S_LifeUpdateRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_PlayerLifeResponse), global::S2C_PlayerLifeResponse.Parser, new[]{ "Life", "IsAttacked" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_GhostSpecialStateRequest), global::C2S_GhostSpecialStateRequest.Parser, new[]{ "GhostId", "SpecialState", "IsOn" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_GhostSpecialStateNotification), global::S2C_GhostSpecialStateNotification.Parser, new[]{ "GhostId", "SpecialState", "IsOn" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_GhostAttackedRequest), global::C2S_GhostAttackedRequest.Parser, new[]{ "GhostId", "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_GhostSpawnRequest), global::C2S_GhostSpawnRequest.Parser, new[]{ "GhostTypeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_GhostSpawnNotification), global::S2C_GhostSpawnNotification.Parser, new[]{ "GhostInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_GhostDeleteNotification), global::S2C_GhostDeleteNotification.Parser, new[]{ "GhostIds" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ItemGetRequest), global::C2S_ItemGetRequest.Parser, new[]{ "ItemId", "InventorySlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemGetResponse), global::S2C_ItemGetResponse.Parser, new[]{ "ItemId", "InventorySlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemGetNotification), global::S2C_ItemGetNotification.Parser, new[]{ "ItemId", "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ItemUseRequest), global::C2S_ItemUseRequest.Parser, new[]{ "InventorySlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemUseResponse), global::S2C_ItemUseResponse.Parser, new[]{ "ItemId", "InventorySlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemUseNotification), global::S2C_ItemUseNotification.Parser, new[]{ "UserId", "ItemId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ItemDiscardRequest), global::C2S_ItemDiscardRequest.Parser, new[]{ "ItemInfo", "InventorySlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemDiscardResponse), global::S2C_ItemDiscardResponse.Parser, new[]{ "InventorySlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemDiscardNotification), global::S2C_ItemDiscardNotification.Parser, new[]{ "UserId", "ItemId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ItemDisuseRequest), global::C2S_ItemDisuseRequest.Parser, new[]{ "ItemId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemDisuseNotification), global::S2C_ItemDisuseNotification.Parser, new[]{ "UserId", "ItemId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemDeleteNotification), global::S2C_ItemDeleteNotification.Parser, new[]{ "ItemIds" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ItemPurchaseRequest), global::C2S_ItemPurchaseRequest.Parser, new[]{ "ItemTypeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemPurchaseNotification), global::S2C_ItemPurchaseNotification.Parser, new[]{ "ItemInfo", "SoulCredit" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemPurchaseResponse), global::S2C_ItemPurchaseResponse.Parser, new[]{ "GlobalFailCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ItemCreateRequest), global::C2S_ItemCreateRequest.Parser, new[]{ "ItemTypeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ItemCreateNotification), global::S2C_ItemCreateNotification.Parser, new[]{ "ItemInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_DoorToggleRequest), global::C2S_DoorToggleRequest.Parser, new[]{ "DoorId", "DoorState" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_DoorToggleNotification), global::S2C_DoorToggleNotification.Parser, new[]{ "DoorId", "DoorState" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ExtractSoulRequest), global::C2S_ExtractSoulRequest.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ExtractSoulNotification), global::S2C_ExtractSoulNotification.Parser, new[]{ "SoulCredit" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_DisconnectRoomRequest), global::C2S_DisconnectRoomRequest.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_DisconnectPlayerNotification), global::S2C_DisconnectPlayerNotification.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_KickRoomNotification), global::S2C_KickRoomNotification.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_BlockInteractionNotification), global::S2C_BlockInteractionNotification.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_RemainingTimeNotification), global::S2C_RemainingTimeNotification.Parser, new[]{ "RemainingTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_DifficultySelectRequest), global::C2S_DifficultySelectRequest.Parser, new[]{ "DifficultyId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_DifficultySelectNotification), global::S2C_DifficultySelectNotification.Parser, new[]{ "DifficultyId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_StartStageRequest), global::C2S_StartStageRequest.Parser, new[]{ "GameSessionId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_StartStageNotification), global::S2C_StartStageNotification.Parser, new[]{ "GlobalFailCode", "Message", "ItemInfos", "GhostInfos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_StageEndNotification), global::S2C_StageEndNotification.Parser, new[]{ "RemainingDay", "StartPosition", "SoulCredit", "AliveCount", "DiedCount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_SubmissionEndNotification), global::S2C_SubmissionEndNotification.Parser, new[]{ "Result", "Day", "SubmissionValue" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_RegistAccountRequest), global::C2S_RegistAccountRequest.Parser, new[]{ "Id", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_RegistAccountResponse), global::S2C_RegistAccountResponse.Parser, new[]{ "GlobalFailCode", "Message" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_LoginRequest), global::C2S_LoginRequest.Parser, new[]{ "Id", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_LoginResponse), global::S2C_LoginResponse.Parser, new[]{ "GlobalFailCode", "UserId", "Token" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_ChangeNicknameRequest), global::C2S_ChangeNicknameRequest.Parser, new[]{ "UserId", "Nickname" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_ChangeNicknameResponse), global::S2C_ChangeNicknameResponse.Parser, new[]{ "GlobalFailCode", "Message" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_EnterLobbyRequest), global::C2S_EnterLobbyRequest.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_EnterLobbyResponse), global::S2C_EnterLobbyResponse.Parser, new[]{ "GlobalFailCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_WaitingRoomListRequest), global::C2S_WaitingRoomListRequest.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_WaitingRoomListResponse), global::S2C_WaitingRoomListResponse.Parser, new[]{ "RoomInfos", "GlobalFailCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_CreateRoomRequest), global::C2S_CreateRoomRequest.Parser, new[]{ "UserId", "Token" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_CreateRoomResponse), global::S2C_CreateRoomResponse.Parser, new[]{ "GlobalFailCode", "Message", "GameSessionId", "InviteCode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_JoinRoomRequest), global::C2S_JoinRoomRequest.Parser, new[]{ "UserId", "InviteCode", "Token" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::C2S_JoinRoomByGameSessionIdRequest), global::C2S_JoinRoomByGameSessionIdRequest.Parser, new[]{ "UserId", "InviteCode", "Token" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_JoinRoomResponse), global::S2C_JoinRoomResponse.Parser, new[]{ "GlobalFailCode", "Message", "GameSessionId", "PlayerInfos" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::S2C_JoinRoomNotification), global::S2C_JoinRoomNotification.Parser, new[]{ "UserId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GamePacket), global::GamePacket.Parser, new[]{ "PlayerMoveRequest", "PlayerMoveNotification", "GhostMoveRequest", "GhostMoveNotification", "PingRequest", "PingResponse", "PlayerStateChangeRequest", "PlayerStateChangeNotification", "GhostStateChangeRequest", "GhostStateChangeNotification", "ItemChangeRequest", "ItemChangeNotification", "PlayerAttackedRequest", "PlayerLifeResponse", "LifeUpdateRequest", "GhostSpecialStateRequest", "GhostSpecialStateNotification", "GhostAttackedRequest", "GhostSpawnRequest", "GhostSpawnNotification", "GhostDeleteNotification", "ItemGetRequest", "ItemGetResponse", "ItemGetNotification", "ItemUseRequest", "ItemUseResponse", "ItemUseNotification", "ItemDiscardRequest", "ItemDiscardResponse", "ItemDiscardNotification", "ItemDisuseRequest", "ItemDisuseNotification", "ItemDeleteNotification", "ItemPurchaseRequest", "ItemPurchaseNotification", "ItemPurchaseResponse", "ItemCreateRequest", "ItemCreateNotification", "DoorToggleRequest", "DoorToggleNotification", "ExtractSoulRequest", "ExtractSoulNotification", "DisconnectPlayerNotification", "RemainingTimeNotification", "BlockInteractionNotification", "StartStageRequest", "StartStageNotification", "StageEndNotification", "SubmissionEndNotification", "DifficultySelectRequest", "DifficultySelectNotification", "DisconnectRoomRequest", "KickRoomNotification", "RegistAccountRequest", "RegistAccountResponse", "LoginRequest", "LoginResponse", "ChangeNicknameRequest", "ChangeNicknameResponse", "EnterLobbyRequest", "EnterLobbyResponse", "WaitingRoomListRequest", "WaitingRoomListResponse", "CreateRoomRequest", "CreateRoomResponse", "JoinRoomRequest", "JoinRoomByGameSessionIdRequest", "JoinRoomResponse", "JoinRoomNotification" }, new[]{ "Payload" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum GlobalFailCode {
  [pbr::OriginalName("NONE")] None = 0,
  [pbr::OriginalName("UNKNOWN")] Unknown = 1,
  [pbr::OriginalName("INVALID_REQUEST")] InvalidRequest = 2,
  [pbr::OriginalName("AUTHENTICATION_FAILED")] AuthenticationFailed = 3,
  [pbr::OriginalName("DUPLICATED_USER")] DuplicatedUser = 4,
}

public enum UserState {
  [pbr::OriginalName("USER_STATE_NONE")] None = 0,
  [pbr::OriginalName("STAY")] Stay = 1,
  [pbr::OriginalName("INGAME")] Ingame = 2,
}

public enum GameSessionState {
  [pbr::OriginalName("GAME_STATE_NONE")] GameStateNone = 0,
  [pbr::OriginalName("PREPARE")] Prepare = 1,
  [pbr::OriginalName("INPROGRESS")] Inprogress = 2,
  [pbr::OriginalName("END")] End = 3,
}

public enum CharacterState {
  [pbr::OriginalName("CHARACTER_STATE_NONE")] None = 0,
  [pbr::OriginalName("IDLE")] Idle = 1,
  [pbr::OriginalName("MOVE")] Move = 2,
  [pbr::OriginalName("RUN")] Run = 3,
  [pbr::OriginalName("JUMP")] Jump = 4,
  [pbr::OriginalName("ATTACK")] Attack = 5,
  [pbr::OriginalName("DIED")] Died = 6,
  [pbr::OriginalName("HIT")] Hit = 7,
  [pbr::OriginalName("COOLDOWN")] Cooldown = 8,
  [pbr::OriginalName("SHOUT")] Shout = 9,
  [pbr::OriginalName("EXIT")] Exit = 10,
}

public enum GhostSpecialState {
  [pbr::OriginalName("GHOST_SPECIAL_STATE_NONE")] None = 0,
  [pbr::OriginalName("SEE")] See = 1,
  [pbr::OriginalName("EYE_LIGHT")] EyeLight = 2,
}

public enum DoorState {
  [pbr::OriginalName("DOOR_STATE_NONE")] None = 0,
  [pbr::OriginalName("DOOR_LEFT")] DoorLeft = 1,
  [pbr::OriginalName("DOOR_MIDDLE")] DoorMiddle = 2,
  [pbr::OriginalName("DOOR_RIGHT")] DoorRight = 3,
}

#endregion

#region Messages
public sealed partial class Position : pb::IMessage<Position> {
  private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Position> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Position() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Position(Position other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Position Clone() {
    return new Position(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Position);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Position other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (Z != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Position other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.Z != 0F) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class Rotation : pb::IMessage<Rotation> {
  private static readonly pb::MessageParser<Rotation> _parser = new pb::MessageParser<Rotation>(() => new Rotation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Rotation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rotation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rotation(Rotation other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Rotation Clone() {
    return new Rotation(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Rotation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Rotation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (Z != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Rotation other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.Z != 0F) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class MoveInfo : pb::IMessage<MoveInfo> {
  private static readonly pb::MessageParser<MoveInfo> _parser = new pb::MessageParser<MoveInfo>(() => new MoveInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MoveInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveInfo(MoveInfo other) : this() {
    position_ = other.position_ != null ? other.position_.Clone() : null;
    rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MoveInfo Clone() {
    return new MoveInfo(this);
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 1;
  private global::Position position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Position Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 2;
  private global::Rotation rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Rotation Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MoveInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MoveInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Rotation, other.Rotation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (position_ != null) hash ^= Position.GetHashCode();
    if (rotation_ != null) hash ^= Rotation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (rotation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Rotation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (rotation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MoveInfo other) {
    if (other == null) {
      return;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Position();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.rotation_ != null) {
      if (rotation_ == null) {
        Rotation = new global::Rotation();
      }
      Rotation.MergeFrom(other.Rotation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (position_ == null) {
            Position = new global::Position();
          }
          input.ReadMessage(Position);
          break;
        }
        case 18: {
          if (rotation_ == null) {
            Rotation = new global::Rotation();
          }
          input.ReadMessage(Rotation);
          break;
        }
      }
    }
  }

}

public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
  private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo(PlayerInfo other) : this() {
    userId_ = other.userId_;
    moveInfo_ = other.moveInfo_ != null ? other.moveInfo_.Clone() : null;
    isHost_ = other.isHost_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo Clone() {
    return new PlayerInfo(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "moveInfo" field.</summary>
  public const int MoveInfoFieldNumber = 2;
  private global::MoveInfo moveInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MoveInfo MoveInfo {
    get { return moveInfo_; }
    set {
      moveInfo_ = value;
    }
  }

  /// <summary>Field number for the "isHost" field.</summary>
  public const int IsHostFieldNumber = 3;
  private bool isHost_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsHost {
    get { return isHost_; }
    set {
      isHost_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (!object.Equals(MoveInfo, other.MoveInfo)) return false;
    if (IsHost != other.IsHost) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (moveInfo_ != null) hash ^= MoveInfo.GetHashCode();
    if (IsHost != false) hash ^= IsHost.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (moveInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MoveInfo);
    }
    if (IsHost != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsHost);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (moveInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveInfo);
    }
    if (IsHost != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.moveInfo_ != null) {
      if (moveInfo_ == null) {
        MoveInfo = new global::MoveInfo();
      }
      MoveInfo.MergeFrom(other.MoveInfo);
    }
    if (other.IsHost != false) {
      IsHost = other.IsHost;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          if (moveInfo_ == null) {
            MoveInfo = new global::MoveInfo();
          }
          input.ReadMessage(MoveInfo);
          break;
        }
        case 24: {
          IsHost = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class PlayerMoveInfo : pb::IMessage<PlayerMoveInfo> {
  private static readonly pb::MessageParser<PlayerMoveInfo> _parser = new pb::MessageParser<PlayerMoveInfo>(() => new PlayerMoveInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerMoveInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerMoveInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerMoveInfo(PlayerMoveInfo other) : this() {
    userId_ = other.userId_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerMoveInfo Clone() {
    return new PlayerMoveInfo(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 2;
  private global::Position position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Position Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 3;
  private global::Rotation rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Rotation Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerMoveInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerMoveInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Rotation, other.Rotation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (rotation_ != null) hash ^= Rotation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (position_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Position);
    }
    if (rotation_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Rotation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (rotation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerMoveInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Position();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.rotation_ != null) {
      if (rotation_ == null) {
        Rotation = new global::Rotation();
      }
      Rotation.MergeFrom(other.Rotation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          if (position_ == null) {
            Position = new global::Position();
          }
          input.ReadMessage(Position);
          break;
        }
        case 26: {
          if (rotation_ == null) {
            Rotation = new global::Rotation();
          }
          input.ReadMessage(Rotation);
          break;
        }
      }
    }
  }

}

public sealed partial class PlayerStateInfo : pb::IMessage<PlayerStateInfo> {
  private static readonly pb::MessageParser<PlayerStateInfo> _parser = new pb::MessageParser<PlayerStateInfo>(() => new PlayerStateInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerStateInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerStateInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerStateInfo(PlayerStateInfo other) : this() {
    userId_ = other.userId_;
    characterState_ = other.characterState_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerStateInfo Clone() {
    return new PlayerStateInfo(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "characterState" field.</summary>
  public const int CharacterStateFieldNumber = 2;
  private global::CharacterState characterState_ = global::CharacterState.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CharacterState CharacterState {
    get { return characterState_; }
    set {
      characterState_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerStateInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerStateInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (CharacterState != other.CharacterState) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (CharacterState != global::CharacterState.None) hash ^= CharacterState.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (CharacterState != global::CharacterState.None) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CharacterState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (CharacterState != global::CharacterState.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CharacterState);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerStateInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.CharacterState != global::CharacterState.None) {
      CharacterState = other.CharacterState;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          CharacterState = (global::CharacterState) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class GhostInfo : pb::IMessage<GhostInfo> {
  private static readonly pb::MessageParser<GhostInfo> _parser = new pb::MessageParser<GhostInfo>(() => new GhostInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GhostInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostInfo(GhostInfo other) : this() {
    ghostId_ = other.ghostId_;
    ghostTypeId_ = other.ghostTypeId_;
    moveInfo_ = other.moveInfo_ != null ? other.moveInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostInfo Clone() {
    return new GhostInfo(this);
  }

  /// <summary>Field number for the "ghostId" field.</summary>
  public const int GhostIdFieldNumber = 1;
  private uint ghostId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostId {
    get { return ghostId_; }
    set {
      ghostId_ = value;
    }
  }

  /// <summary>Field number for the "ghostTypeId" field.</summary>
  public const int GhostTypeIdFieldNumber = 2;
  private uint ghostTypeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostTypeId {
    get { return ghostTypeId_; }
    set {
      ghostTypeId_ = value;
    }
  }

  /// <summary>Field number for the "moveInfo" field.</summary>
  public const int MoveInfoFieldNumber = 3;
  private global::MoveInfo moveInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MoveInfo MoveInfo {
    get { return moveInfo_; }
    set {
      moveInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GhostInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GhostInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GhostId != other.GhostId) return false;
    if (GhostTypeId != other.GhostTypeId) return false;
    if (!object.Equals(MoveInfo, other.MoveInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GhostId != 0) hash ^= GhostId.GetHashCode();
    if (GhostTypeId != 0) hash ^= GhostTypeId.GetHashCode();
    if (moveInfo_ != null) hash ^= MoveInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GhostId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GhostId);
    }
    if (GhostTypeId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GhostTypeId);
    }
    if (moveInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(MoveInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GhostId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostId);
    }
    if (GhostTypeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostTypeId);
    }
    if (moveInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GhostInfo other) {
    if (other == null) {
      return;
    }
    if (other.GhostId != 0) {
      GhostId = other.GhostId;
    }
    if (other.GhostTypeId != 0) {
      GhostTypeId = other.GhostTypeId;
    }
    if (other.moveInfo_ != null) {
      if (moveInfo_ == null) {
        MoveInfo = new global::MoveInfo();
      }
      MoveInfo.MergeFrom(other.MoveInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GhostId = input.ReadUInt32();
          break;
        }
        case 16: {
          GhostTypeId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (moveInfo_ == null) {
            MoveInfo = new global::MoveInfo();
          }
          input.ReadMessage(MoveInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class GhostMoveInfo : pb::IMessage<GhostMoveInfo> {
  private static readonly pb::MessageParser<GhostMoveInfo> _parser = new pb::MessageParser<GhostMoveInfo>(() => new GhostMoveInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GhostMoveInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostMoveInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostMoveInfo(GhostMoveInfo other) : this() {
    ghostId_ = other.ghostId_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostMoveInfo Clone() {
    return new GhostMoveInfo(this);
  }

  /// <summary>Field number for the "ghostId" field.</summary>
  public const int GhostIdFieldNumber = 1;
  private uint ghostId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostId {
    get { return ghostId_; }
    set {
      ghostId_ = value;
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 2;
  private global::Position position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Position Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 3;
  private global::Rotation rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Rotation Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GhostMoveInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GhostMoveInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GhostId != other.GhostId) return false;
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Rotation, other.Rotation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GhostId != 0) hash ^= GhostId.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (rotation_ != null) hash ^= Rotation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GhostId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GhostId);
    }
    if (position_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Position);
    }
    if (rotation_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Rotation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GhostId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostId);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (rotation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GhostMoveInfo other) {
    if (other == null) {
      return;
    }
    if (other.GhostId != 0) {
      GhostId = other.GhostId;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Position();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.rotation_ != null) {
      if (rotation_ == null) {
        Rotation = new global::Rotation();
      }
      Rotation.MergeFrom(other.Rotation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GhostId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (position_ == null) {
            Position = new global::Position();
          }
          input.ReadMessage(Position);
          break;
        }
        case 26: {
          if (rotation_ == null) {
            Rotation = new global::Rotation();
          }
          input.ReadMessage(Rotation);
          break;
        }
      }
    }
  }

}

public sealed partial class GhostStateInfo : pb::IMessage<GhostStateInfo> {
  private static readonly pb::MessageParser<GhostStateInfo> _parser = new pb::MessageParser<GhostStateInfo>(() => new GhostStateInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GhostStateInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostStateInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostStateInfo(GhostStateInfo other) : this() {
    ghostId_ = other.ghostId_;
    characterState_ = other.characterState_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GhostStateInfo Clone() {
    return new GhostStateInfo(this);
  }

  /// <summary>Field number for the "ghostId" field.</summary>
  public const int GhostIdFieldNumber = 1;
  private uint ghostId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostId {
    get { return ghostId_; }
    set {
      ghostId_ = value;
    }
  }

  /// <summary>Field number for the "characterState" field.</summary>
  public const int CharacterStateFieldNumber = 2;
  private global::CharacterState characterState_ = global::CharacterState.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::CharacterState CharacterState {
    get { return characterState_; }
    set {
      characterState_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GhostStateInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GhostStateInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GhostId != other.GhostId) return false;
    if (CharacterState != other.CharacterState) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GhostId != 0) hash ^= GhostId.GetHashCode();
    if (CharacterState != global::CharacterState.None) hash ^= CharacterState.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GhostId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GhostId);
    }
    if (CharacterState != global::CharacterState.None) {
      output.WriteRawTag(16);
      output.WriteEnum((int) CharacterState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GhostId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostId);
    }
    if (CharacterState != global::CharacterState.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CharacterState);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GhostStateInfo other) {
    if (other == null) {
      return;
    }
    if (other.GhostId != 0) {
      GhostId = other.GhostId;
    }
    if (other.CharacterState != global::CharacterState.None) {
      CharacterState = other.CharacterState;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GhostId = input.ReadUInt32();
          break;
        }
        case 16: {
          CharacterState = (global::CharacterState) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class ItemInfo : pb::IMessage<ItemInfo> {
  private static readonly pb::MessageParser<ItemInfo> _parser = new pb::MessageParser<ItemInfo>(() => new ItemInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ItemInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemInfo(ItemInfo other) : this() {
    itemId_ = other.itemId_;
    itemTypeId_ = other.itemTypeId_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ItemInfo Clone() {
    return new ItemInfo(this);
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "itemTypeId" field.</summary>
  public const int ItemTypeIdFieldNumber = 2;
  private uint itemTypeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemTypeId {
    get { return itemTypeId_; }
    set {
      itemTypeId_ = value;
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 3;
  private global::Position position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Position Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ItemInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ItemInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (ItemTypeId != other.ItemTypeId) return false;
    if (!object.Equals(Position, other.Position)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (ItemTypeId != 0) hash ^= ItemTypeId.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemId);
    }
    if (ItemTypeId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemTypeId);
    }
    if (position_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Position);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (ItemTypeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemTypeId);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ItemInfo other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.ItemTypeId != 0) {
      ItemTypeId = other.ItemTypeId;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::Position();
      }
      Position.MergeFrom(other.Position);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadUInt32();
          break;
        }
        case 16: {
          ItemTypeId = input.ReadUInt32();
          break;
        }
        case 26: {
          if (position_ == null) {
            Position = new global::Position();
          }
          input.ReadMessage(Position);
          break;
        }
      }
    }
  }

}

public sealed partial class ProfileInfo : pb::IMessage<ProfileInfo> {
  private static readonly pb::MessageParser<ProfileInfo> _parser = new pb::MessageParser<ProfileInfo>(() => new ProfileInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ProfileInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProfileInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProfileInfo(ProfileInfo other) : this() {
    userId_ = other.userId_;
    nickname_ = other.nickname_;
    levelId_ = other.levelId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProfileInfo Clone() {
    return new ProfileInfo(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 2;
  private string nickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "levelId" field.</summary>
  public const int LevelIdFieldNumber = 3;
  private uint levelId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint LevelId {
    get { return levelId_; }
    set {
      levelId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ProfileInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ProfileInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Nickname != other.Nickname) return false;
    if (LevelId != other.LevelId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (LevelId != 0) hash ^= LevelId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    if (LevelId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(LevelId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (LevelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ProfileInfo other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.LevelId != 0) {
      LevelId = other.LevelId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          Nickname = input.ReadString();
          break;
        }
        case 24: {
          LevelId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
  private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomInfo(RoomInfo other) : this() {
    gameSessionId_ = other.gameSessionId_;
    roomName_ = other.roomName_;
    numberOfPlayer_ = other.numberOfPlayer_;
    latency_ = other.latency_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomInfo Clone() {
    return new RoomInfo(this);
  }

  /// <summary>Field number for the "gameSessionId" field.</summary>
  public const int GameSessionIdFieldNumber = 1;
  private string gameSessionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameSessionId {
    get { return gameSessionId_; }
    set {
      gameSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "roomName" field.</summary>
  public const int RoomNameFieldNumber = 2;
  private string roomName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomName {
    get { return roomName_; }
    set {
      roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "numberOfPlayer" field.</summary>
  public const int NumberOfPlayerFieldNumber = 3;
  private uint numberOfPlayer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint NumberOfPlayer {
    get { return numberOfPlayer_; }
    set {
      numberOfPlayer_ = value;
    }
  }

  /// <summary>Field number for the "latency" field.</summary>
  public const int LatencyFieldNumber = 4;
  private uint latency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Latency {
    get { return latency_; }
    set {
      latency_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RoomInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RoomInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GameSessionId != other.GameSessionId) return false;
    if (RoomName != other.RoomName) return false;
    if (NumberOfPlayer != other.NumberOfPlayer) return false;
    if (Latency != other.Latency) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GameSessionId.Length != 0) hash ^= GameSessionId.GetHashCode();
    if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
    if (NumberOfPlayer != 0) hash ^= NumberOfPlayer.GetHashCode();
    if (Latency != 0) hash ^= Latency.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GameSessionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GameSessionId);
    }
    if (RoomName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(RoomName);
    }
    if (NumberOfPlayer != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(NumberOfPlayer);
    }
    if (Latency != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(Latency);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GameSessionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameSessionId);
    }
    if (RoomName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
    }
    if (NumberOfPlayer != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumberOfPlayer);
    }
    if (Latency != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Latency);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RoomInfo other) {
    if (other == null) {
      return;
    }
    if (other.GameSessionId.Length != 0) {
      GameSessionId = other.GameSessionId;
    }
    if (other.RoomName.Length != 0) {
      RoomName = other.RoomName;
    }
    if (other.NumberOfPlayer != 0) {
      NumberOfPlayer = other.NumberOfPlayer;
    }
    if (other.Latency != 0) {
      Latency = other.Latency;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GameSessionId = input.ReadString();
          break;
        }
        case 18: {
          RoomName = input.ReadString();
          break;
        }
        case 24: {
          NumberOfPlayer = input.ReadUInt32();
          break;
        }
        case 32: {
          Latency = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_PlayerMoveRequest : pb::IMessage<C2S_PlayerMoveRequest> {
  private static readonly pb::MessageParser<C2S_PlayerMoveRequest> _parser = new pb::MessageParser<C2S_PlayerMoveRequest>(() => new C2S_PlayerMoveRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_PlayerMoveRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerMoveRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerMoveRequest(C2S_PlayerMoveRequest other) : this() {
    playerMoveInfo_ = other.playerMoveInfo_ != null ? other.playerMoveInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerMoveRequest Clone() {
    return new C2S_PlayerMoveRequest(this);
  }

  /// <summary>Field number for the "playerMoveInfo" field.</summary>
  public const int PlayerMoveInfoFieldNumber = 1;
  private global::PlayerMoveInfo playerMoveInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlayerMoveInfo PlayerMoveInfo {
    get { return playerMoveInfo_; }
    set {
      playerMoveInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_PlayerMoveRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_PlayerMoveRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(PlayerMoveInfo, other.PlayerMoveInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (playerMoveInfo_ != null) hash ^= PlayerMoveInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (playerMoveInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(PlayerMoveInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (playerMoveInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerMoveInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_PlayerMoveRequest other) {
    if (other == null) {
      return;
    }
    if (other.playerMoveInfo_ != null) {
      if (playerMoveInfo_ == null) {
        PlayerMoveInfo = new global::PlayerMoveInfo();
      }
      PlayerMoveInfo.MergeFrom(other.PlayerMoveInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (playerMoveInfo_ == null) {
            PlayerMoveInfo = new global::PlayerMoveInfo();
          }
          input.ReadMessage(PlayerMoveInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_PlayerMoveNotification : pb::IMessage<S2C_PlayerMoveNotification> {
  private static readonly pb::MessageParser<S2C_PlayerMoveNotification> _parser = new pb::MessageParser<S2C_PlayerMoveNotification>(() => new S2C_PlayerMoveNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_PlayerMoveNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerMoveNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerMoveNotification(S2C_PlayerMoveNotification other) : this() {
    playerMoveInfos_ = other.playerMoveInfos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerMoveNotification Clone() {
    return new S2C_PlayerMoveNotification(this);
  }

  /// <summary>Field number for the "playerMoveInfos" field.</summary>
  public const int PlayerMoveInfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PlayerMoveInfo> _repeated_playerMoveInfos_codec
      = pb::FieldCodec.ForMessage(10, global::PlayerMoveInfo.Parser);
  private readonly pbc::RepeatedField<global::PlayerMoveInfo> playerMoveInfos_ = new pbc::RepeatedField<global::PlayerMoveInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PlayerMoveInfo> PlayerMoveInfos {
    get { return playerMoveInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_PlayerMoveNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_PlayerMoveNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!playerMoveInfos_.Equals(other.playerMoveInfos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= playerMoveInfos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    playerMoveInfos_.WriteTo(output, _repeated_playerMoveInfos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += playerMoveInfos_.CalculateSize(_repeated_playerMoveInfos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_PlayerMoveNotification other) {
    if (other == null) {
      return;
    }
    playerMoveInfos_.Add(other.playerMoveInfos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          playerMoveInfos_.AddEntriesFrom(input, _repeated_playerMoveInfos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_GhostMoveRequest : pb::IMessage<C2S_GhostMoveRequest> {
  private static readonly pb::MessageParser<C2S_GhostMoveRequest> _parser = new pb::MessageParser<C2S_GhostMoveRequest>(() => new C2S_GhostMoveRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_GhostMoveRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostMoveRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostMoveRequest(C2S_GhostMoveRequest other) : this() {
    ghostMoveInfos_ = other.ghostMoveInfos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostMoveRequest Clone() {
    return new C2S_GhostMoveRequest(this);
  }

  /// <summary>Field number for the "ghostMoveInfos" field.</summary>
  public const int GhostMoveInfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GhostMoveInfo> _repeated_ghostMoveInfos_codec
      = pb::FieldCodec.ForMessage(10, global::GhostMoveInfo.Parser);
  private readonly pbc::RepeatedField<global::GhostMoveInfo> ghostMoveInfos_ = new pbc::RepeatedField<global::GhostMoveInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GhostMoveInfo> GhostMoveInfos {
    get { return ghostMoveInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_GhostMoveRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_GhostMoveRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ghostMoveInfos_.Equals(other.ghostMoveInfos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ghostMoveInfos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    ghostMoveInfos_.WriteTo(output, _repeated_ghostMoveInfos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ghostMoveInfos_.CalculateSize(_repeated_ghostMoveInfos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_GhostMoveRequest other) {
    if (other == null) {
      return;
    }
    ghostMoveInfos_.Add(other.ghostMoveInfos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ghostMoveInfos_.AddEntriesFrom(input, _repeated_ghostMoveInfos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_GhostMoveNotification : pb::IMessage<S2C_GhostMoveNotification> {
  private static readonly pb::MessageParser<S2C_GhostMoveNotification> _parser = new pb::MessageParser<S2C_GhostMoveNotification>(() => new S2C_GhostMoveNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_GhostMoveNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostMoveNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostMoveNotification(S2C_GhostMoveNotification other) : this() {
    ghostMoveInfos_ = other.ghostMoveInfos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostMoveNotification Clone() {
    return new S2C_GhostMoveNotification(this);
  }

  /// <summary>Field number for the "ghostMoveInfos" field.</summary>
  public const int GhostMoveInfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::GhostMoveInfo> _repeated_ghostMoveInfos_codec
      = pb::FieldCodec.ForMessage(10, global::GhostMoveInfo.Parser);
  private readonly pbc::RepeatedField<global::GhostMoveInfo> ghostMoveInfos_ = new pbc::RepeatedField<global::GhostMoveInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GhostMoveInfo> GhostMoveInfos {
    get { return ghostMoveInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_GhostMoveNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_GhostMoveNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ghostMoveInfos_.Equals(other.ghostMoveInfos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ghostMoveInfos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    ghostMoveInfos_.WriteTo(output, _repeated_ghostMoveInfos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ghostMoveInfos_.CalculateSize(_repeated_ghostMoveInfos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_GhostMoveNotification other) {
    if (other == null) {
      return;
    }
    ghostMoveInfos_.Add(other.ghostMoveInfos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ghostMoveInfos_.AddEntriesFrom(input, _repeated_ghostMoveInfos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_PingRequest : pb::IMessage<S2C_PingRequest> {
  private static readonly pb::MessageParser<S2C_PingRequest> _parser = new pb::MessageParser<S2C_PingRequest>(() => new S2C_PingRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_PingRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PingRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PingRequest(S2C_PingRequest other) : this() {
    timestamp_ = other.timestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PingRequest Clone() {
    return new S2C_PingRequest(this);
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 1;
  private ulong timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Timestamp {
    get { return timestamp_; }
    set {
      timestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_PingRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_PingRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Timestamp != other.Timestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Timestamp != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Timestamp != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_PingRequest other) {
    if (other == null) {
      return;
    }
    if (other.Timestamp != 0UL) {
      Timestamp = other.Timestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Timestamp = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_PingResponse : pb::IMessage<C2S_PingResponse> {
  private static readonly pb::MessageParser<C2S_PingResponse> _parser = new pb::MessageParser<C2S_PingResponse>(() => new C2S_PingResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_PingResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PingResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PingResponse(C2S_PingResponse other) : this() {
    timestamp_ = other.timestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PingResponse Clone() {
    return new C2S_PingResponse(this);
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 1;
  private ulong timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong Timestamp {
    get { return timestamp_; }
    set {
      timestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_PingResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_PingResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Timestamp != other.Timestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Timestamp != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(Timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Timestamp != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_PingResponse other) {
    if (other == null) {
      return;
    }
    if (other.Timestamp != 0UL) {
      Timestamp = other.Timestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Timestamp = input.ReadUInt64();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_PlayerStateChangeRequest : pb::IMessage<C2S_PlayerStateChangeRequest> {
  private static readonly pb::MessageParser<C2S_PlayerStateChangeRequest> _parser = new pb::MessageParser<C2S_PlayerStateChangeRequest>(() => new C2S_PlayerStateChangeRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_PlayerStateChangeRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerStateChangeRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerStateChangeRequest(C2S_PlayerStateChangeRequest other) : this() {
    playerStateInfo_ = other.playerStateInfo_ != null ? other.playerStateInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerStateChangeRequest Clone() {
    return new C2S_PlayerStateChangeRequest(this);
  }

  /// <summary>Field number for the "playerStateInfo" field.</summary>
  public const int PlayerStateInfoFieldNumber = 1;
  private global::PlayerStateInfo playerStateInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlayerStateInfo PlayerStateInfo {
    get { return playerStateInfo_; }
    set {
      playerStateInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_PlayerStateChangeRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_PlayerStateChangeRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(PlayerStateInfo, other.PlayerStateInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (playerStateInfo_ != null) hash ^= PlayerStateInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (playerStateInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(PlayerStateInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (playerStateInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStateInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_PlayerStateChangeRequest other) {
    if (other == null) {
      return;
    }
    if (other.playerStateInfo_ != null) {
      if (playerStateInfo_ == null) {
        PlayerStateInfo = new global::PlayerStateInfo();
      }
      PlayerStateInfo.MergeFrom(other.PlayerStateInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (playerStateInfo_ == null) {
            PlayerStateInfo = new global::PlayerStateInfo();
          }
          input.ReadMessage(PlayerStateInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_PlayerStateChangeNotification : pb::IMessage<S2C_PlayerStateChangeNotification> {
  private static readonly pb::MessageParser<S2C_PlayerStateChangeNotification> _parser = new pb::MessageParser<S2C_PlayerStateChangeNotification>(() => new S2C_PlayerStateChangeNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_PlayerStateChangeNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerStateChangeNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerStateChangeNotification(S2C_PlayerStateChangeNotification other) : this() {
    playerStateInfo_ = other.playerStateInfo_ != null ? other.playerStateInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerStateChangeNotification Clone() {
    return new S2C_PlayerStateChangeNotification(this);
  }

  /// <summary>Field number for the "playerStateInfo" field.</summary>
  public const int PlayerStateInfoFieldNumber = 1;
  private global::PlayerStateInfo playerStateInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlayerStateInfo PlayerStateInfo {
    get { return playerStateInfo_; }
    set {
      playerStateInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_PlayerStateChangeNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_PlayerStateChangeNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(PlayerStateInfo, other.PlayerStateInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (playerStateInfo_ != null) hash ^= PlayerStateInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (playerStateInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(PlayerStateInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (playerStateInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStateInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_PlayerStateChangeNotification other) {
    if (other == null) {
      return;
    }
    if (other.playerStateInfo_ != null) {
      if (playerStateInfo_ == null) {
        PlayerStateInfo = new global::PlayerStateInfo();
      }
      PlayerStateInfo.MergeFrom(other.PlayerStateInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (playerStateInfo_ == null) {
            PlayerStateInfo = new global::PlayerStateInfo();
          }
          input.ReadMessage(PlayerStateInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_GhostStateChangeRequest : pb::IMessage<C2S_GhostStateChangeRequest> {
  private static readonly pb::MessageParser<C2S_GhostStateChangeRequest> _parser = new pb::MessageParser<C2S_GhostStateChangeRequest>(() => new C2S_GhostStateChangeRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_GhostStateChangeRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostStateChangeRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostStateChangeRequest(C2S_GhostStateChangeRequest other) : this() {
    ghostStateInfo_ = other.ghostStateInfo_ != null ? other.ghostStateInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostStateChangeRequest Clone() {
    return new C2S_GhostStateChangeRequest(this);
  }

  /// <summary>Field number for the "ghostStateInfo" field.</summary>
  public const int GhostStateInfoFieldNumber = 1;
  private global::GhostStateInfo ghostStateInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GhostStateInfo GhostStateInfo {
    get { return ghostStateInfo_; }
    set {
      ghostStateInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_GhostStateChangeRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_GhostStateChangeRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GhostStateInfo, other.GhostStateInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ghostStateInfo_ != null) hash ^= GhostStateInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ghostStateInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GhostStateInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ghostStateInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostStateInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_GhostStateChangeRequest other) {
    if (other == null) {
      return;
    }
    if (other.ghostStateInfo_ != null) {
      if (ghostStateInfo_ == null) {
        GhostStateInfo = new global::GhostStateInfo();
      }
      GhostStateInfo.MergeFrom(other.GhostStateInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ghostStateInfo_ == null) {
            GhostStateInfo = new global::GhostStateInfo();
          }
          input.ReadMessage(GhostStateInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_GhostStateChangeNotification : pb::IMessage<S2C_GhostStateChangeNotification> {
  private static readonly pb::MessageParser<S2C_GhostStateChangeNotification> _parser = new pb::MessageParser<S2C_GhostStateChangeNotification>(() => new S2C_GhostStateChangeNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_GhostStateChangeNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostStateChangeNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostStateChangeNotification(S2C_GhostStateChangeNotification other) : this() {
    ghostStateInfo_ = other.ghostStateInfo_ != null ? other.ghostStateInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostStateChangeNotification Clone() {
    return new S2C_GhostStateChangeNotification(this);
  }

  /// <summary>Field number for the "ghostStateInfo" field.</summary>
  public const int GhostStateInfoFieldNumber = 1;
  private global::GhostStateInfo ghostStateInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GhostStateInfo GhostStateInfo {
    get { return ghostStateInfo_; }
    set {
      ghostStateInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_GhostStateChangeNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_GhostStateChangeNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GhostStateInfo, other.GhostStateInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ghostStateInfo_ != null) hash ^= GhostStateInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ghostStateInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GhostStateInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ghostStateInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostStateInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_GhostStateChangeNotification other) {
    if (other == null) {
      return;
    }
    if (other.ghostStateInfo_ != null) {
      if (ghostStateInfo_ == null) {
        GhostStateInfo = new global::GhostStateInfo();
      }
      GhostStateInfo.MergeFrom(other.GhostStateInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ghostStateInfo_ == null) {
            GhostStateInfo = new global::GhostStateInfo();
          }
          input.ReadMessage(GhostStateInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ItemChangeRequest : pb::IMessage<C2S_ItemChangeRequest> {
  private static readonly pb::MessageParser<C2S_ItemChangeRequest> _parser = new pb::MessageParser<C2S_ItemChangeRequest>(() => new C2S_ItemChangeRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ItemChangeRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemChangeRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemChangeRequest(C2S_ItemChangeRequest other) : this() {
    inventorySlot_ = other.inventorySlot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemChangeRequest Clone() {
    return new C2S_ItemChangeRequest(this);
  }

  /// <summary>Field number for the "inventorySlot" field.</summary>
  public const int InventorySlotFieldNumber = 1;
  private uint inventorySlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint InventorySlot {
    get { return inventorySlot_; }
    set {
      inventorySlot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ItemChangeRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ItemChangeRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InventorySlot != other.InventorySlot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InventorySlot != 0) hash ^= InventorySlot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (InventorySlot != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(InventorySlot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InventorySlot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventorySlot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ItemChangeRequest other) {
    if (other == null) {
      return;
    }
    if (other.InventorySlot != 0) {
      InventorySlot = other.InventorySlot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InventorySlot = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemChangeNotification : pb::IMessage<S2C_ItemChangeNotification> {
  private static readonly pb::MessageParser<S2C_ItemChangeNotification> _parser = new pb::MessageParser<S2C_ItemChangeNotification>(() => new S2C_ItemChangeNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemChangeNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemChangeNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemChangeNotification(S2C_ItemChangeNotification other) : this() {
    userId_ = other.userId_;
    itemId_ = other.itemId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemChangeNotification Clone() {
    return new S2C_ItemChangeNotification(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 2;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemChangeNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemChangeNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (ItemId != other.ItemId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (ItemId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemChangeNotification other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          ItemId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_PlayerAttackedRequest : pb::IMessage<C2S_PlayerAttackedRequest> {
  private static readonly pb::MessageParser<C2S_PlayerAttackedRequest> _parser = new pb::MessageParser<C2S_PlayerAttackedRequest>(() => new C2S_PlayerAttackedRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_PlayerAttackedRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerAttackedRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerAttackedRequest(C2S_PlayerAttackedRequest other) : this() {
    userId_ = other.userId_;
    ghostId_ = other.ghostId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_PlayerAttackedRequest Clone() {
    return new C2S_PlayerAttackedRequest(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ghostId" field.</summary>
  public const int GhostIdFieldNumber = 2;
  private uint ghostId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostId {
    get { return ghostId_; }
    set {
      ghostId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_PlayerAttackedRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_PlayerAttackedRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (GhostId != other.GhostId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (GhostId != 0) hash ^= GhostId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (GhostId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GhostId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (GhostId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_PlayerAttackedRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.GhostId != 0) {
      GhostId = other.GhostId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          GhostId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_LifeUpdateRequest : pb::IMessage<C2S_LifeUpdateRequest> {
  private static readonly pb::MessageParser<C2S_LifeUpdateRequest> _parser = new pb::MessageParser<C2S_LifeUpdateRequest>(() => new C2S_LifeUpdateRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_LifeUpdateRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_LifeUpdateRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_LifeUpdateRequest(C2S_LifeUpdateRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_LifeUpdateRequest Clone() {
    return new C2S_LifeUpdateRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_LifeUpdateRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_LifeUpdateRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_LifeUpdateRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class S2C_PlayerLifeResponse : pb::IMessage<S2C_PlayerLifeResponse> {
  private static readonly pb::MessageParser<S2C_PlayerLifeResponse> _parser = new pb::MessageParser<S2C_PlayerLifeResponse>(() => new S2C_PlayerLifeResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_PlayerLifeResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerLifeResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerLifeResponse(S2C_PlayerLifeResponse other) : this() {
    life_ = other.life_;
    isAttacked_ = other.isAttacked_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_PlayerLifeResponse Clone() {
    return new S2C_PlayerLifeResponse(this);
  }

  /// <summary>Field number for the "life" field.</summary>
  public const int LifeFieldNumber = 1;
  private uint life_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Life {
    get { return life_; }
    set {
      life_ = value;
    }
  }

  /// <summary>Field number for the "isAttacked" field.</summary>
  public const int IsAttackedFieldNumber = 2;
  private bool isAttacked_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsAttacked {
    get { return isAttacked_; }
    set {
      isAttacked_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_PlayerLifeResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_PlayerLifeResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Life != other.Life) return false;
    if (IsAttacked != other.IsAttacked) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Life != 0) hash ^= Life.GetHashCode();
    if (IsAttacked != false) hash ^= IsAttacked.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Life != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Life);
    }
    if (IsAttacked != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsAttacked);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Life != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Life);
    }
    if (IsAttacked != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_PlayerLifeResponse other) {
    if (other == null) {
      return;
    }
    if (other.Life != 0) {
      Life = other.Life;
    }
    if (other.IsAttacked != false) {
      IsAttacked = other.IsAttacked;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Life = input.ReadUInt32();
          break;
        }
        case 16: {
          IsAttacked = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_GhostSpecialStateRequest : pb::IMessage<C2S_GhostSpecialStateRequest> {
  private static readonly pb::MessageParser<C2S_GhostSpecialStateRequest> _parser = new pb::MessageParser<C2S_GhostSpecialStateRequest>(() => new C2S_GhostSpecialStateRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_GhostSpecialStateRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostSpecialStateRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostSpecialStateRequest(C2S_GhostSpecialStateRequest other) : this() {
    ghostId_ = other.ghostId_;
    specialState_ = other.specialState_;
    isOn_ = other.isOn_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostSpecialStateRequest Clone() {
    return new C2S_GhostSpecialStateRequest(this);
  }

  /// <summary>Field number for the "ghostId" field.</summary>
  public const int GhostIdFieldNumber = 1;
  private uint ghostId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostId {
    get { return ghostId_; }
    set {
      ghostId_ = value;
    }
  }

  /// <summary>Field number for the "specialState" field.</summary>
  public const int SpecialStateFieldNumber = 2;
  private global::GhostSpecialState specialState_ = global::GhostSpecialState.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GhostSpecialState SpecialState {
    get { return specialState_; }
    set {
      specialState_ = value;
    }
  }

  /// <summary>Field number for the "isOn" field.</summary>
  public const int IsOnFieldNumber = 3;
  private bool isOn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsOn {
    get { return isOn_; }
    set {
      isOn_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_GhostSpecialStateRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_GhostSpecialStateRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GhostId != other.GhostId) return false;
    if (SpecialState != other.SpecialState) return false;
    if (IsOn != other.IsOn) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GhostId != 0) hash ^= GhostId.GetHashCode();
    if (SpecialState != global::GhostSpecialState.None) hash ^= SpecialState.GetHashCode();
    if (IsOn != false) hash ^= IsOn.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GhostId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GhostId);
    }
    if (SpecialState != global::GhostSpecialState.None) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SpecialState);
    }
    if (IsOn != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsOn);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GhostId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostId);
    }
    if (SpecialState != global::GhostSpecialState.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpecialState);
    }
    if (IsOn != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_GhostSpecialStateRequest other) {
    if (other == null) {
      return;
    }
    if (other.GhostId != 0) {
      GhostId = other.GhostId;
    }
    if (other.SpecialState != global::GhostSpecialState.None) {
      SpecialState = other.SpecialState;
    }
    if (other.IsOn != false) {
      IsOn = other.IsOn;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GhostId = input.ReadUInt32();
          break;
        }
        case 16: {
          SpecialState = (global::GhostSpecialState) input.ReadEnum();
          break;
        }
        case 24: {
          IsOn = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_GhostSpecialStateNotification : pb::IMessage<S2C_GhostSpecialStateNotification> {
  private static readonly pb::MessageParser<S2C_GhostSpecialStateNotification> _parser = new pb::MessageParser<S2C_GhostSpecialStateNotification>(() => new S2C_GhostSpecialStateNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_GhostSpecialStateNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostSpecialStateNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostSpecialStateNotification(S2C_GhostSpecialStateNotification other) : this() {
    ghostId_ = other.ghostId_;
    specialState_ = other.specialState_;
    isOn_ = other.isOn_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostSpecialStateNotification Clone() {
    return new S2C_GhostSpecialStateNotification(this);
  }

  /// <summary>Field number for the "ghostId" field.</summary>
  public const int GhostIdFieldNumber = 1;
  private uint ghostId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostId {
    get { return ghostId_; }
    set {
      ghostId_ = value;
    }
  }

  /// <summary>Field number for the "specialState" field.</summary>
  public const int SpecialStateFieldNumber = 2;
  private global::GhostSpecialState specialState_ = global::GhostSpecialState.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GhostSpecialState SpecialState {
    get { return specialState_; }
    set {
      specialState_ = value;
    }
  }

  /// <summary>Field number for the "isOn" field.</summary>
  public const int IsOnFieldNumber = 3;
  private bool isOn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsOn {
    get { return isOn_; }
    set {
      isOn_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_GhostSpecialStateNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_GhostSpecialStateNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GhostId != other.GhostId) return false;
    if (SpecialState != other.SpecialState) return false;
    if (IsOn != other.IsOn) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GhostId != 0) hash ^= GhostId.GetHashCode();
    if (SpecialState != global::GhostSpecialState.None) hash ^= SpecialState.GetHashCode();
    if (IsOn != false) hash ^= IsOn.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GhostId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GhostId);
    }
    if (SpecialState != global::GhostSpecialState.None) {
      output.WriteRawTag(16);
      output.WriteEnum((int) SpecialState);
    }
    if (IsOn != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsOn);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GhostId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostId);
    }
    if (SpecialState != global::GhostSpecialState.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpecialState);
    }
    if (IsOn != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_GhostSpecialStateNotification other) {
    if (other == null) {
      return;
    }
    if (other.GhostId != 0) {
      GhostId = other.GhostId;
    }
    if (other.SpecialState != global::GhostSpecialState.None) {
      SpecialState = other.SpecialState;
    }
    if (other.IsOn != false) {
      IsOn = other.IsOn;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GhostId = input.ReadUInt32();
          break;
        }
        case 16: {
          SpecialState = (global::GhostSpecialState) input.ReadEnum();
          break;
        }
        case 24: {
          IsOn = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_GhostAttackedRequest : pb::IMessage<C2S_GhostAttackedRequest> {
  private static readonly pb::MessageParser<C2S_GhostAttackedRequest> _parser = new pb::MessageParser<C2S_GhostAttackedRequest>(() => new C2S_GhostAttackedRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_GhostAttackedRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostAttackedRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostAttackedRequest(C2S_GhostAttackedRequest other) : this() {
    ghostId_ = other.ghostId_;
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostAttackedRequest Clone() {
    return new C2S_GhostAttackedRequest(this);
  }

  /// <summary>Field number for the "ghostId" field.</summary>
  public const int GhostIdFieldNumber = 1;
  private uint ghostId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostId {
    get { return ghostId_; }
    set {
      ghostId_ = value;
    }
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 2;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_GhostAttackedRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_GhostAttackedRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GhostId != other.GhostId) return false;
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GhostId != 0) hash ^= GhostId.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GhostId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GhostId);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GhostId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostId);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_GhostAttackedRequest other) {
    if (other == null) {
      return;
    }
    if (other.GhostId != 0) {
      GhostId = other.GhostId;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GhostId = input.ReadUInt32();
          break;
        }
        case 18: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_GhostSpawnRequest : pb::IMessage<C2S_GhostSpawnRequest> {
  private static readonly pb::MessageParser<C2S_GhostSpawnRequest> _parser = new pb::MessageParser<C2S_GhostSpawnRequest>(() => new C2S_GhostSpawnRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_GhostSpawnRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostSpawnRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostSpawnRequest(C2S_GhostSpawnRequest other) : this() {
    ghostTypeId_ = other.ghostTypeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_GhostSpawnRequest Clone() {
    return new C2S_GhostSpawnRequest(this);
  }

  /// <summary>Field number for the "ghostTypeId" field.</summary>
  public const int GhostTypeIdFieldNumber = 1;
  private uint ghostTypeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint GhostTypeId {
    get { return ghostTypeId_; }
    set {
      ghostTypeId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_GhostSpawnRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_GhostSpawnRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GhostTypeId != other.GhostTypeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GhostTypeId != 0) hash ^= GhostTypeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GhostTypeId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(GhostTypeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GhostTypeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GhostTypeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_GhostSpawnRequest other) {
    if (other == null) {
      return;
    }
    if (other.GhostTypeId != 0) {
      GhostTypeId = other.GhostTypeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GhostTypeId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_GhostSpawnNotification : pb::IMessage<S2C_GhostSpawnNotification> {
  private static readonly pb::MessageParser<S2C_GhostSpawnNotification> _parser = new pb::MessageParser<S2C_GhostSpawnNotification>(() => new S2C_GhostSpawnNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_GhostSpawnNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostSpawnNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostSpawnNotification(S2C_GhostSpawnNotification other) : this() {
    ghostInfo_ = other.ghostInfo_ != null ? other.ghostInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostSpawnNotification Clone() {
    return new S2C_GhostSpawnNotification(this);
  }

  /// <summary>Field number for the "ghostInfo" field.</summary>
  public const int GhostInfoFieldNumber = 1;
  private global::GhostInfo ghostInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GhostInfo GhostInfo {
    get { return ghostInfo_; }
    set {
      ghostInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_GhostSpawnNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_GhostSpawnNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(GhostInfo, other.GhostInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ghostInfo_ != null) hash ^= GhostInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ghostInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(GhostInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ghostInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_GhostSpawnNotification other) {
    if (other == null) {
      return;
    }
    if (other.ghostInfo_ != null) {
      if (ghostInfo_ == null) {
        GhostInfo = new global::GhostInfo();
      }
      GhostInfo.MergeFrom(other.GhostInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (ghostInfo_ == null) {
            GhostInfo = new global::GhostInfo();
          }
          input.ReadMessage(GhostInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_GhostDeleteNotification : pb::IMessage<S2C_GhostDeleteNotification> {
  private static readonly pb::MessageParser<S2C_GhostDeleteNotification> _parser = new pb::MessageParser<S2C_GhostDeleteNotification>(() => new S2C_GhostDeleteNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_GhostDeleteNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostDeleteNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostDeleteNotification(S2C_GhostDeleteNotification other) : this() {
    ghostIds_ = other.ghostIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_GhostDeleteNotification Clone() {
    return new S2C_GhostDeleteNotification(this);
  }

  /// <summary>Field number for the "ghostIds" field.</summary>
  public const int GhostIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_ghostIds_codec
      = pb::FieldCodec.ForUInt32(10);
  private readonly pbc::RepeatedField<uint> ghostIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> GhostIds {
    get { return ghostIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_GhostDeleteNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_GhostDeleteNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!ghostIds_.Equals(other.ghostIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ghostIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    ghostIds_.WriteTo(output, _repeated_ghostIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ghostIds_.CalculateSize(_repeated_ghostIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_GhostDeleteNotification other) {
    if (other == null) {
      return;
    }
    ghostIds_.Add(other.ghostIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          ghostIds_.AddEntriesFrom(input, _repeated_ghostIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ItemGetRequest : pb::IMessage<C2S_ItemGetRequest> {
  private static readonly pb::MessageParser<C2S_ItemGetRequest> _parser = new pb::MessageParser<C2S_ItemGetRequest>(() => new C2S_ItemGetRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ItemGetRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemGetRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemGetRequest(C2S_ItemGetRequest other) : this() {
    itemId_ = other.itemId_;
    inventorySlot_ = other.inventorySlot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemGetRequest Clone() {
    return new C2S_ItemGetRequest(this);
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "inventorySlot" field.</summary>
  public const int InventorySlotFieldNumber = 2;
  private uint inventorySlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint InventorySlot {
    get { return inventorySlot_; }
    set {
      inventorySlot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ItemGetRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ItemGetRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (InventorySlot != other.InventorySlot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (InventorySlot != 0) hash ^= InventorySlot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemId);
    }
    if (InventorySlot != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(InventorySlot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (InventorySlot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventorySlot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ItemGetRequest other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.InventorySlot != 0) {
      InventorySlot = other.InventorySlot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadUInt32();
          break;
        }
        case 16: {
          InventorySlot = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemGetResponse : pb::IMessage<S2C_ItemGetResponse> {
  private static readonly pb::MessageParser<S2C_ItemGetResponse> _parser = new pb::MessageParser<S2C_ItemGetResponse>(() => new S2C_ItemGetResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemGetResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemGetResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemGetResponse(S2C_ItemGetResponse other) : this() {
    itemId_ = other.itemId_;
    inventorySlot_ = other.inventorySlot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemGetResponse Clone() {
    return new S2C_ItemGetResponse(this);
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "inventorySlot" field.</summary>
  public const int InventorySlotFieldNumber = 2;
  private uint inventorySlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint InventorySlot {
    get { return inventorySlot_; }
    set {
      inventorySlot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemGetResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemGetResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (InventorySlot != other.InventorySlot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (InventorySlot != 0) hash ^= InventorySlot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemId);
    }
    if (InventorySlot != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(InventorySlot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (InventorySlot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventorySlot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemGetResponse other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.InventorySlot != 0) {
      InventorySlot = other.InventorySlot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadUInt32();
          break;
        }
        case 16: {
          InventorySlot = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemGetNotification : pb::IMessage<S2C_ItemGetNotification> {
  private static readonly pb::MessageParser<S2C_ItemGetNotification> _parser = new pb::MessageParser<S2C_ItemGetNotification>(() => new S2C_ItemGetNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemGetNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemGetNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemGetNotification(S2C_ItemGetNotification other) : this() {
    itemId_ = other.itemId_;
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemGetNotification Clone() {
    return new S2C_ItemGetNotification(this);
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 2;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemGetNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemGetNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemId);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemGetNotification other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadUInt32();
          break;
        }
        case 18: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ItemUseRequest : pb::IMessage<C2S_ItemUseRequest> {
  private static readonly pb::MessageParser<C2S_ItemUseRequest> _parser = new pb::MessageParser<C2S_ItemUseRequest>(() => new C2S_ItemUseRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ItemUseRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemUseRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemUseRequest(C2S_ItemUseRequest other) : this() {
    inventorySlot_ = other.inventorySlot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemUseRequest Clone() {
    return new C2S_ItemUseRequest(this);
  }

  /// <summary>Field number for the "inventorySlot" field.</summary>
  public const int InventorySlotFieldNumber = 1;
  private uint inventorySlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint InventorySlot {
    get { return inventorySlot_; }
    set {
      inventorySlot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ItemUseRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ItemUseRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InventorySlot != other.InventorySlot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InventorySlot != 0) hash ^= InventorySlot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (InventorySlot != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(InventorySlot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InventorySlot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventorySlot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ItemUseRequest other) {
    if (other == null) {
      return;
    }
    if (other.InventorySlot != 0) {
      InventorySlot = other.InventorySlot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InventorySlot = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemUseResponse : pb::IMessage<S2C_ItemUseResponse> {
  private static readonly pb::MessageParser<S2C_ItemUseResponse> _parser = new pb::MessageParser<S2C_ItemUseResponse>(() => new S2C_ItemUseResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemUseResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemUseResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemUseResponse(S2C_ItemUseResponse other) : this() {
    itemId_ = other.itemId_;
    inventorySlot_ = other.inventorySlot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemUseResponse Clone() {
    return new S2C_ItemUseResponse(this);
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "inventorySlot" field.</summary>
  public const int InventorySlotFieldNumber = 2;
  private uint inventorySlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint InventorySlot {
    get { return inventorySlot_; }
    set {
      inventorySlot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemUseResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemUseResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    if (InventorySlot != other.InventorySlot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (InventorySlot != 0) hash ^= InventorySlot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemId);
    }
    if (InventorySlot != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(InventorySlot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (InventorySlot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventorySlot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemUseResponse other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.InventorySlot != 0) {
      InventorySlot = other.InventorySlot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadUInt32();
          break;
        }
        case 16: {
          InventorySlot = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemUseNotification : pb::IMessage<S2C_ItemUseNotification> {
  private static readonly pb::MessageParser<S2C_ItemUseNotification> _parser = new pb::MessageParser<S2C_ItemUseNotification>(() => new S2C_ItemUseNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemUseNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemUseNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemUseNotification(S2C_ItemUseNotification other) : this() {
    userId_ = other.userId_;
    itemId_ = other.itemId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemUseNotification Clone() {
    return new S2C_ItemUseNotification(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 2;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemUseNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemUseNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (ItemId != other.ItemId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (ItemId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemUseNotification other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          ItemId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ItemDiscardRequest : pb::IMessage<C2S_ItemDiscardRequest> {
  private static readonly pb::MessageParser<C2S_ItemDiscardRequest> _parser = new pb::MessageParser<C2S_ItemDiscardRequest>(() => new C2S_ItemDiscardRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ItemDiscardRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemDiscardRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemDiscardRequest(C2S_ItemDiscardRequest other) : this() {
    itemInfo_ = other.itemInfo_ != null ? other.itemInfo_.Clone() : null;
    inventorySlot_ = other.inventorySlot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemDiscardRequest Clone() {
    return new C2S_ItemDiscardRequest(this);
  }

  /// <summary>Field number for the "itemInfo" field.</summary>
  public const int ItemInfoFieldNumber = 1;
  private global::ItemInfo itemInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ItemInfo ItemInfo {
    get { return itemInfo_; }
    set {
      itemInfo_ = value;
    }
  }

  /// <summary>Field number for the "inventorySlot" field.</summary>
  public const int InventorySlotFieldNumber = 2;
  private uint inventorySlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint InventorySlot {
    get { return inventorySlot_; }
    set {
      inventorySlot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ItemDiscardRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ItemDiscardRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ItemInfo, other.ItemInfo)) return false;
    if (InventorySlot != other.InventorySlot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (itemInfo_ != null) hash ^= ItemInfo.GetHashCode();
    if (InventorySlot != 0) hash ^= InventorySlot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (itemInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ItemInfo);
    }
    if (InventorySlot != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(InventorySlot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (itemInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemInfo);
    }
    if (InventorySlot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventorySlot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ItemDiscardRequest other) {
    if (other == null) {
      return;
    }
    if (other.itemInfo_ != null) {
      if (itemInfo_ == null) {
        ItemInfo = new global::ItemInfo();
      }
      ItemInfo.MergeFrom(other.ItemInfo);
    }
    if (other.InventorySlot != 0) {
      InventorySlot = other.InventorySlot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (itemInfo_ == null) {
            ItemInfo = new global::ItemInfo();
          }
          input.ReadMessage(ItemInfo);
          break;
        }
        case 16: {
          InventorySlot = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemDiscardResponse : pb::IMessage<S2C_ItemDiscardResponse> {
  private static readonly pb::MessageParser<S2C_ItemDiscardResponse> _parser = new pb::MessageParser<S2C_ItemDiscardResponse>(() => new S2C_ItemDiscardResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemDiscardResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDiscardResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDiscardResponse(S2C_ItemDiscardResponse other) : this() {
    inventorySlot_ = other.inventorySlot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDiscardResponse Clone() {
    return new S2C_ItemDiscardResponse(this);
  }

  /// <summary>Field number for the "inventorySlot" field.</summary>
  public const int InventorySlotFieldNumber = 1;
  private uint inventorySlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint InventorySlot {
    get { return inventorySlot_; }
    set {
      inventorySlot_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemDiscardResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemDiscardResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (InventorySlot != other.InventorySlot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (InventorySlot != 0) hash ^= InventorySlot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (InventorySlot != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(InventorySlot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (InventorySlot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventorySlot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemDiscardResponse other) {
    if (other == null) {
      return;
    }
    if (other.InventorySlot != 0) {
      InventorySlot = other.InventorySlot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          InventorySlot = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemDiscardNotification : pb::IMessage<S2C_ItemDiscardNotification> {
  private static readonly pb::MessageParser<S2C_ItemDiscardNotification> _parser = new pb::MessageParser<S2C_ItemDiscardNotification>(() => new S2C_ItemDiscardNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemDiscardNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDiscardNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDiscardNotification(S2C_ItemDiscardNotification other) : this() {
    userId_ = other.userId_;
    itemId_ = other.itemId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDiscardNotification Clone() {
    return new S2C_ItemDiscardNotification(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 2;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemDiscardNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemDiscardNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (ItemId != other.ItemId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (ItemId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemDiscardNotification other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          ItemId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ItemDisuseRequest : pb::IMessage<C2S_ItemDisuseRequest> {
  private static readonly pb::MessageParser<C2S_ItemDisuseRequest> _parser = new pb::MessageParser<C2S_ItemDisuseRequest>(() => new C2S_ItemDisuseRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ItemDisuseRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemDisuseRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemDisuseRequest(C2S_ItemDisuseRequest other) : this() {
    itemId_ = other.itemId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemDisuseRequest Clone() {
    return new C2S_ItemDisuseRequest(this);
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 1;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ItemDisuseRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ItemDisuseRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemId != other.ItemId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ItemDisuseRequest other) {
    if (other == null) {
      return;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemDisuseNotification : pb::IMessage<S2C_ItemDisuseNotification> {
  private static readonly pb::MessageParser<S2C_ItemDisuseNotification> _parser = new pb::MessageParser<S2C_ItemDisuseNotification>(() => new S2C_ItemDisuseNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemDisuseNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDisuseNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDisuseNotification(S2C_ItemDisuseNotification other) : this() {
    userId_ = other.userId_;
    itemId_ = other.itemId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDisuseNotification Clone() {
    return new S2C_ItemDisuseNotification(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "itemId" field.</summary>
  public const int ItemIdFieldNumber = 2;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemDisuseNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemDisuseNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (ItemId != other.ItemId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (ItemId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(ItemId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemDisuseNotification other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          ItemId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemDeleteNotification : pb::IMessage<S2C_ItemDeleteNotification> {
  private static readonly pb::MessageParser<S2C_ItemDeleteNotification> _parser = new pb::MessageParser<S2C_ItemDeleteNotification>(() => new S2C_ItemDeleteNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemDeleteNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDeleteNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDeleteNotification(S2C_ItemDeleteNotification other) : this() {
    itemIds_ = other.itemIds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemDeleteNotification Clone() {
    return new S2C_ItemDeleteNotification(this);
  }

  /// <summary>Field number for the "itemIds" field.</summary>
  public const int ItemIdsFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_itemIds_codec
      = pb::FieldCodec.ForUInt32(10);
  private readonly pbc::RepeatedField<uint> itemIds_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<uint> ItemIds {
    get { return itemIds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemDeleteNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemDeleteNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!itemIds_.Equals(other.itemIds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= itemIds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    itemIds_.WriteTo(output, _repeated_itemIds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += itemIds_.CalculateSize(_repeated_itemIds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemDeleteNotification other) {
    if (other == null) {
      return;
    }
    itemIds_.Add(other.itemIds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ItemPurchaseRequest : pb::IMessage<C2S_ItemPurchaseRequest> {
  private static readonly pb::MessageParser<C2S_ItemPurchaseRequest> _parser = new pb::MessageParser<C2S_ItemPurchaseRequest>(() => new C2S_ItemPurchaseRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ItemPurchaseRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemPurchaseRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemPurchaseRequest(C2S_ItemPurchaseRequest other) : this() {
    itemTypeId_ = other.itemTypeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemPurchaseRequest Clone() {
    return new C2S_ItemPurchaseRequest(this);
  }

  /// <summary>Field number for the "itemTypeId" field.</summary>
  public const int ItemTypeIdFieldNumber = 1;
  private uint itemTypeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemTypeId {
    get { return itemTypeId_; }
    set {
      itemTypeId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ItemPurchaseRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ItemPurchaseRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemTypeId != other.ItemTypeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemTypeId != 0) hash ^= ItemTypeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemTypeId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemTypeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemTypeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemTypeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ItemPurchaseRequest other) {
    if (other == null) {
      return;
    }
    if (other.ItemTypeId != 0) {
      ItemTypeId = other.ItemTypeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemTypeId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemPurchaseNotification : pb::IMessage<S2C_ItemPurchaseNotification> {
  private static readonly pb::MessageParser<S2C_ItemPurchaseNotification> _parser = new pb::MessageParser<S2C_ItemPurchaseNotification>(() => new S2C_ItemPurchaseNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemPurchaseNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemPurchaseNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemPurchaseNotification(S2C_ItemPurchaseNotification other) : this() {
    itemInfo_ = other.itemInfo_ != null ? other.itemInfo_.Clone() : null;
    soulCredit_ = other.soulCredit_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemPurchaseNotification Clone() {
    return new S2C_ItemPurchaseNotification(this);
  }

  /// <summary>Field number for the "itemInfo" field.</summary>
  public const int ItemInfoFieldNumber = 1;
  private global::ItemInfo itemInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ItemInfo ItemInfo {
    get { return itemInfo_; }
    set {
      itemInfo_ = value;
    }
  }

  /// <summary>Field number for the "soulCredit" field.</summary>
  public const int SoulCreditFieldNumber = 2;
  private uint soulCredit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SoulCredit {
    get { return soulCredit_; }
    set {
      soulCredit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemPurchaseNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemPurchaseNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ItemInfo, other.ItemInfo)) return false;
    if (SoulCredit != other.SoulCredit) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (itemInfo_ != null) hash ^= ItemInfo.GetHashCode();
    if (SoulCredit != 0) hash ^= SoulCredit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (itemInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ItemInfo);
    }
    if (SoulCredit != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(SoulCredit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (itemInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemInfo);
    }
    if (SoulCredit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SoulCredit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemPurchaseNotification other) {
    if (other == null) {
      return;
    }
    if (other.itemInfo_ != null) {
      if (itemInfo_ == null) {
        ItemInfo = new global::ItemInfo();
      }
      ItemInfo.MergeFrom(other.ItemInfo);
    }
    if (other.SoulCredit != 0) {
      SoulCredit = other.SoulCredit;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (itemInfo_ == null) {
            ItemInfo = new global::ItemInfo();
          }
          input.ReadMessage(ItemInfo);
          break;
        }
        case 16: {
          SoulCredit = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemPurchaseResponse : pb::IMessage<S2C_ItemPurchaseResponse> {
  private static readonly pb::MessageParser<S2C_ItemPurchaseResponse> _parser = new pb::MessageParser<S2C_ItemPurchaseResponse>(() => new S2C_ItemPurchaseResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemPurchaseResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemPurchaseResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemPurchaseResponse(S2C_ItemPurchaseResponse other) : this() {
    globalFailCode_ = other.globalFailCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemPurchaseResponse Clone() {
    return new S2C_ItemPurchaseResponse(this);
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 1;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemPurchaseResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemPurchaseResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GlobalFailCode != other.GlobalFailCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemPurchaseResponse other) {
    if (other == null) {
      return;
    }
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ItemCreateRequest : pb::IMessage<C2S_ItemCreateRequest> {
  private static readonly pb::MessageParser<C2S_ItemCreateRequest> _parser = new pb::MessageParser<C2S_ItemCreateRequest>(() => new C2S_ItemCreateRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ItemCreateRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemCreateRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemCreateRequest(C2S_ItemCreateRequest other) : this() {
    itemTypeId_ = other.itemTypeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ItemCreateRequest Clone() {
    return new C2S_ItemCreateRequest(this);
  }

  /// <summary>Field number for the "itemTypeId" field.</summary>
  public const int ItemTypeIdFieldNumber = 1;
  private uint itemTypeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint ItemTypeId {
    get { return itemTypeId_; }
    set {
      itemTypeId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ItemCreateRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ItemCreateRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ItemTypeId != other.ItemTypeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ItemTypeId != 0) hash ^= ItemTypeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ItemTypeId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(ItemTypeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ItemTypeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemTypeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ItemCreateRequest other) {
    if (other == null) {
      return;
    }
    if (other.ItemTypeId != 0) {
      ItemTypeId = other.ItemTypeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ItemTypeId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ItemCreateNotification : pb::IMessage<S2C_ItemCreateNotification> {
  private static readonly pb::MessageParser<S2C_ItemCreateNotification> _parser = new pb::MessageParser<S2C_ItemCreateNotification>(() => new S2C_ItemCreateNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ItemCreateNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemCreateNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemCreateNotification(S2C_ItemCreateNotification other) : this() {
    itemInfo_ = other.itemInfo_ != null ? other.itemInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ItemCreateNotification Clone() {
    return new S2C_ItemCreateNotification(this);
  }

  /// <summary>Field number for the "itemInfo" field.</summary>
  public const int ItemInfoFieldNumber = 1;
  private global::ItemInfo itemInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ItemInfo ItemInfo {
    get { return itemInfo_; }
    set {
      itemInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ItemCreateNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ItemCreateNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ItemInfo, other.ItemInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (itemInfo_ != null) hash ^= ItemInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (itemInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(ItemInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (itemInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ItemCreateNotification other) {
    if (other == null) {
      return;
    }
    if (other.itemInfo_ != null) {
      if (itemInfo_ == null) {
        ItemInfo = new global::ItemInfo();
      }
      ItemInfo.MergeFrom(other.ItemInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (itemInfo_ == null) {
            ItemInfo = new global::ItemInfo();
          }
          input.ReadMessage(ItemInfo);
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_DoorToggleRequest : pb::IMessage<C2S_DoorToggleRequest> {
  private static readonly pb::MessageParser<C2S_DoorToggleRequest> _parser = new pb::MessageParser<C2S_DoorToggleRequest>(() => new C2S_DoorToggleRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_DoorToggleRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DoorToggleRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DoorToggleRequest(C2S_DoorToggleRequest other) : this() {
    doorId_ = other.doorId_;
    doorState_ = other.doorState_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DoorToggleRequest Clone() {
    return new C2S_DoorToggleRequest(this);
  }

  /// <summary>Field number for the "doorId" field.</summary>
  public const int DoorIdFieldNumber = 1;
  private uint doorId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DoorId {
    get { return doorId_; }
    set {
      doorId_ = value;
    }
  }

  /// <summary>Field number for the "doorState" field.</summary>
  public const int DoorStateFieldNumber = 2;
  private global::DoorState doorState_ = global::DoorState.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DoorState DoorState {
    get { return doorState_; }
    set {
      doorState_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_DoorToggleRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_DoorToggleRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DoorId != other.DoorId) return false;
    if (DoorState != other.DoorState) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DoorId != 0) hash ^= DoorId.GetHashCode();
    if (DoorState != global::DoorState.None) hash ^= DoorState.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DoorId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(DoorId);
    }
    if (DoorState != global::DoorState.None) {
      output.WriteRawTag(16);
      output.WriteEnum((int) DoorState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DoorId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DoorId);
    }
    if (DoorState != global::DoorState.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DoorState);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_DoorToggleRequest other) {
    if (other == null) {
      return;
    }
    if (other.DoorId != 0) {
      DoorId = other.DoorId;
    }
    if (other.DoorState != global::DoorState.None) {
      DoorState = other.DoorState;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DoorId = input.ReadUInt32();
          break;
        }
        case 16: {
          DoorState = (global::DoorState) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_DoorToggleNotification : pb::IMessage<S2C_DoorToggleNotification> {
  private static readonly pb::MessageParser<S2C_DoorToggleNotification> _parser = new pb::MessageParser<S2C_DoorToggleNotification>(() => new S2C_DoorToggleNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_DoorToggleNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DoorToggleNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DoorToggleNotification(S2C_DoorToggleNotification other) : this() {
    doorId_ = other.doorId_;
    doorState_ = other.doorState_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DoorToggleNotification Clone() {
    return new S2C_DoorToggleNotification(this);
  }

  /// <summary>Field number for the "doorId" field.</summary>
  public const int DoorIdFieldNumber = 1;
  private uint doorId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DoorId {
    get { return doorId_; }
    set {
      doorId_ = value;
    }
  }

  /// <summary>Field number for the "doorState" field.</summary>
  public const int DoorStateFieldNumber = 2;
  private global::DoorState doorState_ = global::DoorState.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::DoorState DoorState {
    get { return doorState_; }
    set {
      doorState_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_DoorToggleNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_DoorToggleNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DoorId != other.DoorId) return false;
    if (DoorState != other.DoorState) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DoorId != 0) hash ^= DoorId.GetHashCode();
    if (DoorState != global::DoorState.None) hash ^= DoorState.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DoorId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(DoorId);
    }
    if (DoorState != global::DoorState.None) {
      output.WriteRawTag(16);
      output.WriteEnum((int) DoorState);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DoorId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DoorId);
    }
    if (DoorState != global::DoorState.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DoorState);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_DoorToggleNotification other) {
    if (other == null) {
      return;
    }
    if (other.DoorId != 0) {
      DoorId = other.DoorId;
    }
    if (other.DoorState != global::DoorState.None) {
      DoorState = other.DoorState;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DoorId = input.ReadUInt32();
          break;
        }
        case 16: {
          DoorState = (global::DoorState) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ExtractSoulRequest : pb::IMessage<C2S_ExtractSoulRequest> {
  private static readonly pb::MessageParser<C2S_ExtractSoulRequest> _parser = new pb::MessageParser<C2S_ExtractSoulRequest>(() => new C2S_ExtractSoulRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ExtractSoulRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ExtractSoulRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ExtractSoulRequest(C2S_ExtractSoulRequest other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ExtractSoulRequest Clone() {
    return new C2S_ExtractSoulRequest(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ExtractSoulRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ExtractSoulRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ExtractSoulRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ExtractSoulNotification : pb::IMessage<S2C_ExtractSoulNotification> {
  private static readonly pb::MessageParser<S2C_ExtractSoulNotification> _parser = new pb::MessageParser<S2C_ExtractSoulNotification>(() => new S2C_ExtractSoulNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ExtractSoulNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ExtractSoulNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ExtractSoulNotification(S2C_ExtractSoulNotification other) : this() {
    soulCredit_ = other.soulCredit_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ExtractSoulNotification Clone() {
    return new S2C_ExtractSoulNotification(this);
  }

  /// <summary>Field number for the "soulCredit" field.</summary>
  public const int SoulCreditFieldNumber = 1;
  private uint soulCredit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SoulCredit {
    get { return soulCredit_; }
    set {
      soulCredit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ExtractSoulNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ExtractSoulNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SoulCredit != other.SoulCredit) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SoulCredit != 0) hash ^= SoulCredit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SoulCredit != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SoulCredit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SoulCredit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SoulCredit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ExtractSoulNotification other) {
    if (other == null) {
      return;
    }
    if (other.SoulCredit != 0) {
      SoulCredit = other.SoulCredit;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SoulCredit = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_DisconnectRoomRequest : pb::IMessage<C2S_DisconnectRoomRequest> {
  private static readonly pb::MessageParser<C2S_DisconnectRoomRequest> _parser = new pb::MessageParser<C2S_DisconnectRoomRequest>(() => new C2S_DisconnectRoomRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_DisconnectRoomRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DisconnectRoomRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DisconnectRoomRequest(C2S_DisconnectRoomRequest other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DisconnectRoomRequest Clone() {
    return new C2S_DisconnectRoomRequest(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_DisconnectRoomRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_DisconnectRoomRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_DisconnectRoomRequest other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class S2C_DisconnectPlayerNotification : pb::IMessage<S2C_DisconnectPlayerNotification> {
  private static readonly pb::MessageParser<S2C_DisconnectPlayerNotification> _parser = new pb::MessageParser<S2C_DisconnectPlayerNotification>(() => new S2C_DisconnectPlayerNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_DisconnectPlayerNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DisconnectPlayerNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DisconnectPlayerNotification(S2C_DisconnectPlayerNotification other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DisconnectPlayerNotification Clone() {
    return new S2C_DisconnectPlayerNotification(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_DisconnectPlayerNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_DisconnectPlayerNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_DisconnectPlayerNotification other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_KickRoomNotification : pb::IMessage<S2C_KickRoomNotification> {
  private static readonly pb::MessageParser<S2C_KickRoomNotification> _parser = new pb::MessageParser<S2C_KickRoomNotification>(() => new S2C_KickRoomNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_KickRoomNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_KickRoomNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_KickRoomNotification(S2C_KickRoomNotification other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_KickRoomNotification Clone() {
    return new S2C_KickRoomNotification(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_KickRoomNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_KickRoomNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_KickRoomNotification other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class S2C_BlockInteractionNotification : pb::IMessage<S2C_BlockInteractionNotification> {
  private static readonly pb::MessageParser<S2C_BlockInteractionNotification> _parser = new pb::MessageParser<S2C_BlockInteractionNotification>(() => new S2C_BlockInteractionNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_BlockInteractionNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_BlockInteractionNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_BlockInteractionNotification(S2C_BlockInteractionNotification other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_BlockInteractionNotification Clone() {
    return new S2C_BlockInteractionNotification(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_BlockInteractionNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_BlockInteractionNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_BlockInteractionNotification other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class S2C_RemainingTimeNotification : pb::IMessage<S2C_RemainingTimeNotification> {
  private static readonly pb::MessageParser<S2C_RemainingTimeNotification> _parser = new pb::MessageParser<S2C_RemainingTimeNotification>(() => new S2C_RemainingTimeNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_RemainingTimeNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_RemainingTimeNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_RemainingTimeNotification(S2C_RemainingTimeNotification other) : this() {
    remainingTime_ = other.remainingTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_RemainingTimeNotification Clone() {
    return new S2C_RemainingTimeNotification(this);
  }

  /// <summary>Field number for the "remainingTime" field.</summary>
  public const int RemainingTimeFieldNumber = 1;
  private uint remainingTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint RemainingTime {
    get { return remainingTime_; }
    set {
      remainingTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_RemainingTimeNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_RemainingTimeNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemainingTime != other.RemainingTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemainingTime != 0) hash ^= RemainingTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemainingTime != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(RemainingTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemainingTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RemainingTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_RemainingTimeNotification other) {
    if (other == null) {
      return;
    }
    if (other.RemainingTime != 0) {
      RemainingTime = other.RemainingTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RemainingTime = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_DifficultySelectRequest : pb::IMessage<C2S_DifficultySelectRequest> {
  private static readonly pb::MessageParser<C2S_DifficultySelectRequest> _parser = new pb::MessageParser<C2S_DifficultySelectRequest>(() => new C2S_DifficultySelectRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_DifficultySelectRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DifficultySelectRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DifficultySelectRequest(C2S_DifficultySelectRequest other) : this() {
    difficultyId_ = other.difficultyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_DifficultySelectRequest Clone() {
    return new C2S_DifficultySelectRequest(this);
  }

  /// <summary>Field number for the "difficultyId" field.</summary>
  public const int DifficultyIdFieldNumber = 1;
  private uint difficultyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DifficultyId {
    get { return difficultyId_; }
    set {
      difficultyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_DifficultySelectRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_DifficultySelectRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DifficultyId != other.DifficultyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DifficultyId != 0) hash ^= DifficultyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DifficultyId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(DifficultyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DifficultyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DifficultyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_DifficultySelectRequest other) {
    if (other == null) {
      return;
    }
    if (other.DifficultyId != 0) {
      DifficultyId = other.DifficultyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DifficultyId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_DifficultySelectNotification : pb::IMessage<S2C_DifficultySelectNotification> {
  private static readonly pb::MessageParser<S2C_DifficultySelectNotification> _parser = new pb::MessageParser<S2C_DifficultySelectNotification>(() => new S2C_DifficultySelectNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_DifficultySelectNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DifficultySelectNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DifficultySelectNotification(S2C_DifficultySelectNotification other) : this() {
    difficultyId_ = other.difficultyId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_DifficultySelectNotification Clone() {
    return new S2C_DifficultySelectNotification(this);
  }

  /// <summary>Field number for the "difficultyId" field.</summary>
  public const int DifficultyIdFieldNumber = 1;
  private uint difficultyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DifficultyId {
    get { return difficultyId_; }
    set {
      difficultyId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_DifficultySelectNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_DifficultySelectNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DifficultyId != other.DifficultyId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (DifficultyId != 0) hash ^= DifficultyId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (DifficultyId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(DifficultyId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (DifficultyId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DifficultyId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_DifficultySelectNotification other) {
    if (other == null) {
      return;
    }
    if (other.DifficultyId != 0) {
      DifficultyId = other.DifficultyId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DifficultyId = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_StartStageRequest : pb::IMessage<C2S_StartStageRequest> {
  private static readonly pb::MessageParser<C2S_StartStageRequest> _parser = new pb::MessageParser<C2S_StartStageRequest>(() => new C2S_StartStageRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_StartStageRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_StartStageRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_StartStageRequest(C2S_StartStageRequest other) : this() {
    gameSessionId_ = other.gameSessionId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_StartStageRequest Clone() {
    return new C2S_StartStageRequest(this);
  }

  /// <summary>Field number for the "gameSessionId" field.</summary>
  public const int GameSessionIdFieldNumber = 1;
  private string gameSessionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameSessionId {
    get { return gameSessionId_; }
    set {
      gameSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_StartStageRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_StartStageRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GameSessionId != other.GameSessionId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GameSessionId.Length != 0) hash ^= GameSessionId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GameSessionId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(GameSessionId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GameSessionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameSessionId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_StartStageRequest other) {
    if (other == null) {
      return;
    }
    if (other.GameSessionId.Length != 0) {
      GameSessionId = other.GameSessionId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          GameSessionId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_StartStageNotification : pb::IMessage<S2C_StartStageNotification> {
  private static readonly pb::MessageParser<S2C_StartStageNotification> _parser = new pb::MessageParser<S2C_StartStageNotification>(() => new S2C_StartStageNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_StartStageNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_StartStageNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_StartStageNotification(S2C_StartStageNotification other) : this() {
    globalFailCode_ = other.globalFailCode_;
    message_ = other.message_;
    itemInfos_ = other.itemInfos_.Clone();
    ghostInfos_ = other.ghostInfos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_StartStageNotification Clone() {
    return new S2C_StartStageNotification(this);
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 1;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 2;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "itemInfos" field.</summary>
  public const int ItemInfosFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ItemInfo> _repeated_itemInfos_codec
      = pb::FieldCodec.ForMessage(26, global::ItemInfo.Parser);
  private readonly pbc::RepeatedField<global::ItemInfo> itemInfos_ = new pbc::RepeatedField<global::ItemInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ItemInfo> ItemInfos {
    get { return itemInfos_; }
  }

  /// <summary>Field number for the "ghostInfos" field.</summary>
  public const int GhostInfosFieldNumber = 4;
  private static readonly pb::FieldCodec<global::GhostInfo> _repeated_ghostInfos_codec
      = pb::FieldCodec.ForMessage(34, global::GhostInfo.Parser);
  private readonly pbc::RepeatedField<global::GhostInfo> ghostInfos_ = new pbc::RepeatedField<global::GhostInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::GhostInfo> GhostInfos {
    get { return ghostInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_StartStageNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_StartStageNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GlobalFailCode != other.GlobalFailCode) return false;
    if (Message != other.Message) return false;
    if(!itemInfos_.Equals(other.itemInfos_)) return false;
    if(!ghostInfos_.Equals(other.ghostInfos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    hash ^= itemInfos_.GetHashCode();
    hash ^= ghostInfos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    itemInfos_.WriteTo(output, _repeated_itemInfos_codec);
    ghostInfos_.WriteTo(output, _repeated_ghostInfos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    size += itemInfos_.CalculateSize(_repeated_itemInfos_codec);
    size += ghostInfos_.CalculateSize(_repeated_ghostInfos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_StartStageNotification other) {
    if (other == null) {
      return;
    }
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    itemInfos_.Add(other.itemInfos_);
    ghostInfos_.Add(other.ghostInfos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
        case 26: {
          itemInfos_.AddEntriesFrom(input, _repeated_itemInfos_codec);
          break;
        }
        case 34: {
          ghostInfos_.AddEntriesFrom(input, _repeated_ghostInfos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_StageEndNotification : pb::IMessage<S2C_StageEndNotification> {
  private static readonly pb::MessageParser<S2C_StageEndNotification> _parser = new pb::MessageParser<S2C_StageEndNotification>(() => new S2C_StageEndNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_StageEndNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_StageEndNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_StageEndNotification(S2C_StageEndNotification other) : this() {
    remainingDay_ = other.remainingDay_;
    startPosition_ = other.startPosition_ != null ? other.startPosition_.Clone() : null;
    soulCredit_ = other.soulCredit_;
    aliveCount_ = other.aliveCount_;
    diedCount_ = other.diedCount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_StageEndNotification Clone() {
    return new S2C_StageEndNotification(this);
  }

  /// <summary>Field number for the "remainingDay" field.</summary>
  public const int RemainingDayFieldNumber = 1;
  private uint remainingDay_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint RemainingDay {
    get { return remainingDay_; }
    set {
      remainingDay_ = value;
    }
  }

  /// <summary>Field number for the "startPosition" field.</summary>
  public const int StartPositionFieldNumber = 2;
  private global::Position startPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Position StartPosition {
    get { return startPosition_; }
    set {
      startPosition_ = value;
    }
  }

  /// <summary>Field number for the "soulCredit" field.</summary>
  public const int SoulCreditFieldNumber = 3;
  private uint soulCredit_;
  /// <summary>
  /// 현재 소울 크레딧(플레이어 사망 수 체크후 깎아주기 때문)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SoulCredit {
    get { return soulCredit_; }
    set {
      soulCredit_ = value;
    }
  }

  /// <summary>Field number for the "aliveCount" field.</summary>
  public const int AliveCountFieldNumber = 4;
  private uint aliveCount_;
  /// <summary>
  /// 생존한 수 
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint AliveCount {
    get { return aliveCount_; }
    set {
      aliveCount_ = value;
    }
  }

  /// <summary>Field number for the "diedCount" field.</summary>
  public const int DiedCountFieldNumber = 5;
  private uint diedCount_;
  /// <summary>
  /// 사망한 수
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint DiedCount {
    get { return diedCount_; }
    set {
      diedCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_StageEndNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_StageEndNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RemainingDay != other.RemainingDay) return false;
    if (!object.Equals(StartPosition, other.StartPosition)) return false;
    if (SoulCredit != other.SoulCredit) return false;
    if (AliveCount != other.AliveCount) return false;
    if (DiedCount != other.DiedCount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RemainingDay != 0) hash ^= RemainingDay.GetHashCode();
    if (startPosition_ != null) hash ^= StartPosition.GetHashCode();
    if (SoulCredit != 0) hash ^= SoulCredit.GetHashCode();
    if (AliveCount != 0) hash ^= AliveCount.GetHashCode();
    if (DiedCount != 0) hash ^= DiedCount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RemainingDay != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(RemainingDay);
    }
    if (startPosition_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(StartPosition);
    }
    if (SoulCredit != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(SoulCredit);
    }
    if (AliveCount != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(AliveCount);
    }
    if (DiedCount != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(DiedCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RemainingDay != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RemainingDay);
    }
    if (startPosition_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartPosition);
    }
    if (SoulCredit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SoulCredit);
    }
    if (AliveCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AliveCount);
    }
    if (DiedCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DiedCount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_StageEndNotification other) {
    if (other == null) {
      return;
    }
    if (other.RemainingDay != 0) {
      RemainingDay = other.RemainingDay;
    }
    if (other.startPosition_ != null) {
      if (startPosition_ == null) {
        StartPosition = new global::Position();
      }
      StartPosition.MergeFrom(other.StartPosition);
    }
    if (other.SoulCredit != 0) {
      SoulCredit = other.SoulCredit;
    }
    if (other.AliveCount != 0) {
      AliveCount = other.AliveCount;
    }
    if (other.DiedCount != 0) {
      DiedCount = other.DiedCount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RemainingDay = input.ReadUInt32();
          break;
        }
        case 18: {
          if (startPosition_ == null) {
            StartPosition = new global::Position();
          }
          input.ReadMessage(StartPosition);
          break;
        }
        case 24: {
          SoulCredit = input.ReadUInt32();
          break;
        }
        case 32: {
          AliveCount = input.ReadUInt32();
          break;
        }
        case 40: {
          DiedCount = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_SubmissionEndNotification : pb::IMessage<S2C_SubmissionEndNotification> {
  private static readonly pb::MessageParser<S2C_SubmissionEndNotification> _parser = new pb::MessageParser<S2C_SubmissionEndNotification>(() => new S2C_SubmissionEndNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_SubmissionEndNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_SubmissionEndNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_SubmissionEndNotification(S2C_SubmissionEndNotification other) : this() {
    result_ = other.result_;
    day_ = other.day_;
    submissionValue_ = other.submissionValue_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_SubmissionEndNotification Clone() {
    return new S2C_SubmissionEndNotification(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "day" field.</summary>
  public const int DayFieldNumber = 2;
  private string day_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Day {
    get { return day_; }
    set {
      day_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "submissionValue" field.</summary>
  public const int SubmissionValueFieldNumber = 3;
  private uint submissionValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint SubmissionValue {
    get { return submissionValue_; }
    set {
      submissionValue_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_SubmissionEndNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_SubmissionEndNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if (Day != other.Day) return false;
    if (SubmissionValue != other.SubmissionValue) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    if (Day.Length != 0) hash ^= Day.GetHashCode();
    if (SubmissionValue != 0) hash ^= SubmissionValue.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    if (Day.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Day);
    }
    if (SubmissionValue != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(SubmissionValue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    if (Day.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Day);
    }
    if (SubmissionValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubmissionValue);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_SubmissionEndNotification other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    if (other.Day.Length != 0) {
      Day = other.Day;
    }
    if (other.SubmissionValue != 0) {
      SubmissionValue = other.SubmissionValue;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
        case 18: {
          Day = input.ReadString();
          break;
        }
        case 24: {
          SubmissionValue = input.ReadUInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_RegistAccountRequest : pb::IMessage<C2S_RegistAccountRequest> {
  private static readonly pb::MessageParser<C2S_RegistAccountRequest> _parser = new pb::MessageParser<C2S_RegistAccountRequest>(() => new C2S_RegistAccountRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_RegistAccountRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_RegistAccountRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_RegistAccountRequest(C2S_RegistAccountRequest other) : this() {
    id_ = other.id_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_RegistAccountRequest Clone() {
    return new C2S_RegistAccountRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_RegistAccountRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_RegistAccountRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_RegistAccountRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_RegistAccountResponse : pb::IMessage<S2C_RegistAccountResponse> {
  private static readonly pb::MessageParser<S2C_RegistAccountResponse> _parser = new pb::MessageParser<S2C_RegistAccountResponse>(() => new S2C_RegistAccountResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_RegistAccountResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[66]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_RegistAccountResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_RegistAccountResponse(S2C_RegistAccountResponse other) : this() {
    globalFailCode_ = other.globalFailCode_;
    message_ = other.message_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_RegistAccountResponse Clone() {
    return new S2C_RegistAccountResponse(this);
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 1;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 2;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_RegistAccountResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_RegistAccountResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GlobalFailCode != other.GlobalFailCode) return false;
    if (Message != other.Message) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_RegistAccountResponse other) {
    if (other == null) {
      return;
    }
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_LoginRequest : pb::IMessage<C2S_LoginRequest> {
  private static readonly pb::MessageParser<C2S_LoginRequest> _parser = new pb::MessageParser<C2S_LoginRequest>(() => new C2S_LoginRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_LoginRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[67]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_LoginRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_LoginRequest(C2S_LoginRequest other) : this() {
    id_ = other.id_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_LoginRequest Clone() {
    return new C2S_LoginRequest(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_LoginRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_LoginRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_LoginRequest other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_LoginResponse : pb::IMessage<S2C_LoginResponse> {
  private static readonly pb::MessageParser<S2C_LoginResponse> _parser = new pb::MessageParser<S2C_LoginResponse>(() => new S2C_LoginResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_LoginResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[68]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_LoginResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_LoginResponse(S2C_LoginResponse other) : this() {
    globalFailCode_ = other.globalFailCode_;
    userId_ = other.userId_;
    token_ = other.token_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_LoginResponse Clone() {
    return new S2C_LoginResponse(this);
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 1;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 2;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 3;
  private string token_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_LoginResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_LoginResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GlobalFailCode != other.GlobalFailCode) return false;
    if (UserId != other.UserId) return false;
    if (Token != other.Token) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (UserId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserId);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_LoginResponse other) {
    if (other == null) {
      return;
    }
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
        case 18: {
          UserId = input.ReadString();
          break;
        }
        case 26: {
          Token = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_ChangeNicknameRequest : pb::IMessage<C2S_ChangeNicknameRequest> {
  private static readonly pb::MessageParser<C2S_ChangeNicknameRequest> _parser = new pb::MessageParser<C2S_ChangeNicknameRequest>(() => new C2S_ChangeNicknameRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_ChangeNicknameRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[69]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ChangeNicknameRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ChangeNicknameRequest(C2S_ChangeNicknameRequest other) : this() {
    userId_ = other.userId_;
    nickname_ = other.nickname_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_ChangeNicknameRequest Clone() {
    return new C2S_ChangeNicknameRequest(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 2;
  private string nickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_ChangeNicknameRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_ChangeNicknameRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Nickname != other.Nickname) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_ChangeNicknameRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          Nickname = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_ChangeNicknameResponse : pb::IMessage<S2C_ChangeNicknameResponse> {
  private static readonly pb::MessageParser<S2C_ChangeNicknameResponse> _parser = new pb::MessageParser<S2C_ChangeNicknameResponse>(() => new S2C_ChangeNicknameResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_ChangeNicknameResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[70]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ChangeNicknameResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ChangeNicknameResponse(S2C_ChangeNicknameResponse other) : this() {
    globalFailCode_ = other.globalFailCode_;
    message_ = other.message_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_ChangeNicknameResponse Clone() {
    return new S2C_ChangeNicknameResponse(this);
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 1;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 2;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_ChangeNicknameResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_ChangeNicknameResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GlobalFailCode != other.GlobalFailCode) return false;
    if (Message != other.Message) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_ChangeNicknameResponse other) {
    if (other == null) {
      return;
    }
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_EnterLobbyRequest : pb::IMessage<C2S_EnterLobbyRequest> {
  private static readonly pb::MessageParser<C2S_EnterLobbyRequest> _parser = new pb::MessageParser<C2S_EnterLobbyRequest>(() => new C2S_EnterLobbyRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_EnterLobbyRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[71]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_EnterLobbyRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_EnterLobbyRequest(C2S_EnterLobbyRequest other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_EnterLobbyRequest Clone() {
    return new C2S_EnterLobbyRequest(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_EnterLobbyRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_EnterLobbyRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_EnterLobbyRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_EnterLobbyResponse : pb::IMessage<S2C_EnterLobbyResponse> {
  private static readonly pb::MessageParser<S2C_EnterLobbyResponse> _parser = new pb::MessageParser<S2C_EnterLobbyResponse>(() => new S2C_EnterLobbyResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_EnterLobbyResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[72]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_EnterLobbyResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_EnterLobbyResponse(S2C_EnterLobbyResponse other) : this() {
    globalFailCode_ = other.globalFailCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_EnterLobbyResponse Clone() {
    return new S2C_EnterLobbyResponse(this);
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 1;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_EnterLobbyResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_EnterLobbyResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GlobalFailCode != other.GlobalFailCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_EnterLobbyResponse other) {
    if (other == null) {
      return;
    }
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_WaitingRoomListRequest : pb::IMessage<C2S_WaitingRoomListRequest> {
  private static readonly pb::MessageParser<C2S_WaitingRoomListRequest> _parser = new pb::MessageParser<C2S_WaitingRoomListRequest>(() => new C2S_WaitingRoomListRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_WaitingRoomListRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[73]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_WaitingRoomListRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_WaitingRoomListRequest(C2S_WaitingRoomListRequest other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_WaitingRoomListRequest Clone() {
    return new C2S_WaitingRoomListRequest(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_WaitingRoomListRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_WaitingRoomListRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_WaitingRoomListRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_WaitingRoomListResponse : pb::IMessage<S2C_WaitingRoomListResponse> {
  private static readonly pb::MessageParser<S2C_WaitingRoomListResponse> _parser = new pb::MessageParser<S2C_WaitingRoomListResponse>(() => new S2C_WaitingRoomListResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_WaitingRoomListResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[74]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_WaitingRoomListResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_WaitingRoomListResponse(S2C_WaitingRoomListResponse other) : this() {
    roomInfos_ = other.roomInfos_.Clone();
    globalFailCode_ = other.globalFailCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_WaitingRoomListResponse Clone() {
    return new S2C_WaitingRoomListResponse(this);
  }

  /// <summary>Field number for the "roomInfos" field.</summary>
  public const int RoomInfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::RoomInfo> _repeated_roomInfos_codec
      = pb::FieldCodec.ForMessage(10, global::RoomInfo.Parser);
  private readonly pbc::RepeatedField<global::RoomInfo> roomInfos_ = new pbc::RepeatedField<global::RoomInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::RoomInfo> RoomInfos {
    get { return roomInfos_; }
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 2;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_WaitingRoomListResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_WaitingRoomListResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!roomInfos_.Equals(other.roomInfos_)) return false;
    if (GlobalFailCode != other.GlobalFailCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= roomInfos_.GetHashCode();
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    roomInfos_.WriteTo(output, _repeated_roomInfos_codec);
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(16);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += roomInfos_.CalculateSize(_repeated_roomInfos_codec);
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_WaitingRoomListResponse other) {
    if (other == null) {
      return;
    }
    roomInfos_.Add(other.roomInfos_);
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          roomInfos_.AddEntriesFrom(input, _repeated_roomInfos_codec);
          break;
        }
        case 16: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_CreateRoomRequest : pb::IMessage<C2S_CreateRoomRequest> {
  private static readonly pb::MessageParser<C2S_CreateRoomRequest> _parser = new pb::MessageParser<C2S_CreateRoomRequest>(() => new C2S_CreateRoomRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_CreateRoomRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[75]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_CreateRoomRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_CreateRoomRequest(C2S_CreateRoomRequest other) : this() {
    userId_ = other.userId_;
    token_ = other.token_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_CreateRoomRequest Clone() {
    return new C2S_CreateRoomRequest(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 2;
  private string token_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_CreateRoomRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_CreateRoomRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Token != other.Token) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_CreateRoomRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          Token = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_CreateRoomResponse : pb::IMessage<S2C_CreateRoomResponse> {
  private static readonly pb::MessageParser<S2C_CreateRoomResponse> _parser = new pb::MessageParser<S2C_CreateRoomResponse>(() => new S2C_CreateRoomResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_CreateRoomResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[76]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_CreateRoomResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_CreateRoomResponse(S2C_CreateRoomResponse other) : this() {
    globalFailCode_ = other.globalFailCode_;
    message_ = other.message_;
    gameSessionId_ = other.gameSessionId_;
    inviteCode_ = other.inviteCode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_CreateRoomResponse Clone() {
    return new S2C_CreateRoomResponse(this);
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 1;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 2;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gameSessionId" field.</summary>
  public const int GameSessionIdFieldNumber = 3;
  private string gameSessionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameSessionId {
    get { return gameSessionId_; }
    set {
      gameSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "inviteCode" field.</summary>
  public const int InviteCodeFieldNumber = 4;
  private string inviteCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_CreateRoomResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_CreateRoomResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GlobalFailCode != other.GlobalFailCode) return false;
    if (Message != other.Message) return false;
    if (GameSessionId != other.GameSessionId) return false;
    if (InviteCode != other.InviteCode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (GameSessionId.Length != 0) hash ^= GameSessionId.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    if (GameSessionId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(GameSessionId);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(InviteCode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (GameSessionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameSessionId);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_CreateRoomResponse other) {
    if (other == null) {
      return;
    }
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    if (other.GameSessionId.Length != 0) {
      GameSessionId = other.GameSessionId;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
        case 26: {
          GameSessionId = input.ReadString();
          break;
        }
        case 34: {
          InviteCode = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_JoinRoomRequest : pb::IMessage<C2S_JoinRoomRequest> {
  private static readonly pb::MessageParser<C2S_JoinRoomRequest> _parser = new pb::MessageParser<C2S_JoinRoomRequest>(() => new C2S_JoinRoomRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_JoinRoomRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[77]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_JoinRoomRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_JoinRoomRequest(C2S_JoinRoomRequest other) : this() {
    userId_ = other.userId_;
    inviteCode_ = other.inviteCode_;
    token_ = other.token_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_JoinRoomRequest Clone() {
    return new C2S_JoinRoomRequest(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "inviteCode" field.</summary>
  public const int InviteCodeFieldNumber = 2;
  private string inviteCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 3;
  private string token_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_JoinRoomRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_JoinRoomRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (InviteCode != other.InviteCode) return false;
    if (Token != other.Token) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(InviteCode);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_JoinRoomRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          InviteCode = input.ReadString();
          break;
        }
        case 26: {
          Token = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class C2S_JoinRoomByGameSessionIdRequest : pb::IMessage<C2S_JoinRoomByGameSessionIdRequest> {
  private static readonly pb::MessageParser<C2S_JoinRoomByGameSessionIdRequest> _parser = new pb::MessageParser<C2S_JoinRoomByGameSessionIdRequest>(() => new C2S_JoinRoomByGameSessionIdRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<C2S_JoinRoomByGameSessionIdRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[78]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_JoinRoomByGameSessionIdRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_JoinRoomByGameSessionIdRequest(C2S_JoinRoomByGameSessionIdRequest other) : this() {
    userId_ = other.userId_;
    inviteCode_ = other.inviteCode_;
    token_ = other.token_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public C2S_JoinRoomByGameSessionIdRequest Clone() {
    return new C2S_JoinRoomByGameSessionIdRequest(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "inviteCode" field.</summary>
  public const int InviteCodeFieldNumber = 2;
  private string inviteCode_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string InviteCode {
    get { return inviteCode_; }
    set {
      inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 3;
  private string token_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as C2S_JoinRoomByGameSessionIdRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(C2S_JoinRoomByGameSessionIdRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (InviteCode != other.InviteCode) return false;
    if (Token != other.Token) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (InviteCode.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(InviteCode);
    }
    if (Token.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (InviteCode.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
    }
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(C2S_JoinRoomByGameSessionIdRequest other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.InviteCode.Length != 0) {
      InviteCode = other.InviteCode;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          InviteCode = input.ReadString();
          break;
        }
        case 26: {
          Token = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_JoinRoomResponse : pb::IMessage<S2C_JoinRoomResponse> {
  private static readonly pb::MessageParser<S2C_JoinRoomResponse> _parser = new pb::MessageParser<S2C_JoinRoomResponse>(() => new S2C_JoinRoomResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_JoinRoomResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[79]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_JoinRoomResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_JoinRoomResponse(S2C_JoinRoomResponse other) : this() {
    globalFailCode_ = other.globalFailCode_;
    message_ = other.message_;
    gameSessionId_ = other.gameSessionId_;
    playerInfos_ = other.playerInfos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_JoinRoomResponse Clone() {
    return new S2C_JoinRoomResponse(this);
  }

  /// <summary>Field number for the "globalFailCode" field.</summary>
  public const int GlobalFailCodeFieldNumber = 1;
  private global::GlobalFailCode globalFailCode_ = global::GlobalFailCode.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::GlobalFailCode GlobalFailCode {
    get { return globalFailCode_; }
    set {
      globalFailCode_ = value;
    }
  }

  /// <summary>Field number for the "message" field.</summary>
  public const int MessageFieldNumber = 2;
  private string message_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Message {
    get { return message_; }
    set {
      message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "gameSessionId" field.</summary>
  public const int GameSessionIdFieldNumber = 3;
  private string gameSessionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string GameSessionId {
    get { return gameSessionId_; }
    set {
      gameSessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "playerInfos" field.</summary>
  public const int PlayerInfosFieldNumber = 4;
  private static readonly pb::FieldCodec<global::PlayerInfo> _repeated_playerInfos_codec
      = pb::FieldCodec.ForMessage(34, global::PlayerInfo.Parser);
  private readonly pbc::RepeatedField<global::PlayerInfo> playerInfos_ = new pbc::RepeatedField<global::PlayerInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PlayerInfo> PlayerInfos {
    get { return playerInfos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_JoinRoomResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_JoinRoomResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GlobalFailCode != other.GlobalFailCode) return false;
    if (Message != other.Message) return false;
    if (GameSessionId != other.GameSessionId) return false;
    if(!playerInfos_.Equals(other.playerInfos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (GlobalFailCode != global::GlobalFailCode.None) hash ^= GlobalFailCode.GetHashCode();
    if (Message.Length != 0) hash ^= Message.GetHashCode();
    if (GameSessionId.Length != 0) hash ^= GameSessionId.GetHashCode();
    hash ^= playerInfos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (GlobalFailCode != global::GlobalFailCode.None) {
      output.WriteRawTag(8);
      output.WriteEnum((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Message);
    }
    if (GameSessionId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(GameSessionId);
    }
    playerInfos_.WriteTo(output, _repeated_playerInfos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (GlobalFailCode != global::GlobalFailCode.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GlobalFailCode);
    }
    if (Message.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
    }
    if (GameSessionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameSessionId);
    }
    size += playerInfos_.CalculateSize(_repeated_playerInfos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_JoinRoomResponse other) {
    if (other == null) {
      return;
    }
    if (other.GlobalFailCode != global::GlobalFailCode.None) {
      GlobalFailCode = other.GlobalFailCode;
    }
    if (other.Message.Length != 0) {
      Message = other.Message;
    }
    if (other.GameSessionId.Length != 0) {
      GameSessionId = other.GameSessionId;
    }
    playerInfos_.Add(other.playerInfos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          GlobalFailCode = (global::GlobalFailCode) input.ReadEnum();
          break;
        }
        case 18: {
          Message = input.ReadString();
          break;
        }
        case 26: {
          GameSessionId = input.ReadString();
          break;
        }
        case 34: {
          playerInfos_.AddEntriesFrom(input, _repeated_playerInfos_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class S2C_JoinRoomNotification : pb::IMessage<S2C_JoinRoomNotification> {
  private static readonly pb::MessageParser<S2C_JoinRoomNotification> _parser = new pb::MessageParser<S2C_JoinRoomNotification>(() => new S2C_JoinRoomNotification());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<S2C_JoinRoomNotification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[80]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_JoinRoomNotification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_JoinRoomNotification(S2C_JoinRoomNotification other) : this() {
    userId_ = other.userId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public S2C_JoinRoomNotification Clone() {
    return new S2C_JoinRoomNotification(this);
  }

  /// <summary>Field number for the "userId" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as S2C_JoinRoomNotification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(S2C_JoinRoomNotification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(S2C_JoinRoomNotification other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class GamePacket : pb::IMessage<GamePacket> {
  private static readonly pb::MessageParser<GamePacket> _parser = new pb::MessageParser<GamePacket>(() => new GamePacket());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GamePacket> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[81]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GamePacket() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GamePacket(GamePacket other) : this() {
    switch (other.PayloadCase) {
      case PayloadOneofCase.PlayerMoveRequest:
        PlayerMoveRequest = other.PlayerMoveRequest.Clone();
        break;
      case PayloadOneofCase.PlayerMoveNotification:
        PlayerMoveNotification = other.PlayerMoveNotification.Clone();
        break;
      case PayloadOneofCase.GhostMoveRequest:
        GhostMoveRequest = other.GhostMoveRequest.Clone();
        break;
      case PayloadOneofCase.GhostMoveNotification:
        GhostMoveNotification = other.GhostMoveNotification.Clone();
        break;
      case PayloadOneofCase.PingRequest:
        PingRequest = other.PingRequest.Clone();
        break;
      case PayloadOneofCase.PingResponse:
        PingResponse = other.PingResponse.Clone();
        break;
      case PayloadOneofCase.PlayerStateChangeRequest:
        PlayerStateChangeRequest = other.PlayerStateChangeRequest.Clone();
        break;
      case PayloadOneofCase.PlayerStateChangeNotification:
        PlayerStateChangeNotification = other.PlayerStateChangeNotification.Clone();
        break;
      case PayloadOneofCase.GhostStateChangeRequest:
        GhostStateChangeRequest = other.GhostStateChangeRequest.Clone();
        break;
      case PayloadOneofCase.GhostStateChangeNotification:
        GhostStateChangeNotification = other.GhostStateChangeNotification.Clone();
        break;
      case PayloadOneofCase.ItemChangeRequest:
        ItemChangeRequest = other.ItemChangeRequest.Clone();
        break;
      case PayloadOneofCase.ItemChangeNotification:
        ItemChangeNotification = other.ItemChangeNotification.Clone();
        break;
      case PayloadOneofCase.PlayerAttackedRequest:
        PlayerAttackedRequest = other.PlayerAttackedRequest.Clone();
        break;
      case PayloadOneofCase.PlayerLifeResponse:
        PlayerLifeResponse = other.PlayerLifeResponse.Clone();
        break;
      case PayloadOneofCase.LifeUpdateRequest:
        LifeUpdateRequest = other.LifeUpdateRequest.Clone();
        break;
      case PayloadOneofCase.GhostSpecialStateRequest:
        GhostSpecialStateRequest = other.GhostSpecialStateRequest.Clone();
        break;
      case PayloadOneofCase.GhostSpecialStateNotification:
        GhostSpecialStateNotification = other.GhostSpecialStateNotification.Clone();
        break;
      case PayloadOneofCase.GhostAttackedRequest:
        GhostAttackedRequest = other.GhostAttackedRequest.Clone();
        break;
      case PayloadOneofCase.GhostSpawnRequest:
        GhostSpawnRequest = other.GhostSpawnRequest.Clone();
        break;
      case PayloadOneofCase.GhostSpawnNotification:
        GhostSpawnNotification = other.GhostSpawnNotification.Clone();
        break;
      case PayloadOneofCase.GhostDeleteNotification:
        GhostDeleteNotification = other.GhostDeleteNotification.Clone();
        break;
      case PayloadOneofCase.ItemGetRequest:
        ItemGetRequest = other.ItemGetRequest.Clone();
        break;
      case PayloadOneofCase.ItemGetResponse:
        ItemGetResponse = other.ItemGetResponse.Clone();
        break;
      case PayloadOneofCase.ItemGetNotification:
        ItemGetNotification = other.ItemGetNotification.Clone();
        break;
      case PayloadOneofCase.ItemUseRequest:
        ItemUseRequest = other.ItemUseRequest.Clone();
        break;
      case PayloadOneofCase.ItemUseResponse:
        ItemUseResponse = other.ItemUseResponse.Clone();
        break;
      case PayloadOneofCase.ItemUseNotification:
        ItemUseNotification = other.ItemUseNotification.Clone();
        break;
      case PayloadOneofCase.ItemDiscardRequest:
        ItemDiscardRequest = other.ItemDiscardRequest.Clone();
        break;
      case PayloadOneofCase.ItemDiscardResponse:
        ItemDiscardResponse = other.ItemDiscardResponse.Clone();
        break;
      case PayloadOneofCase.ItemDiscardNotification:
        ItemDiscardNotification = other.ItemDiscardNotification.Clone();
        break;
      case PayloadOneofCase.ItemDisuseRequest:
        ItemDisuseRequest = other.ItemDisuseRequest.Clone();
        break;
      case PayloadOneofCase.ItemDisuseNotification:
        ItemDisuseNotification = other.ItemDisuseNotification.Clone();
        break;
      case PayloadOneofCase.ItemDeleteNotification:
        ItemDeleteNotification = other.ItemDeleteNotification.Clone();
        break;
      case PayloadOneofCase.ItemPurchaseRequest:
        ItemPurchaseRequest = other.ItemPurchaseRequest.Clone();
        break;
      case PayloadOneofCase.ItemPurchaseNotification:
        ItemPurchaseNotification = other.ItemPurchaseNotification.Clone();
        break;
      case PayloadOneofCase.ItemPurchaseResponse:
        ItemPurchaseResponse = other.ItemPurchaseResponse.Clone();
        break;
      case PayloadOneofCase.ItemCreateRequest:
        ItemCreateRequest = other.ItemCreateRequest.Clone();
        break;
      case PayloadOneofCase.ItemCreateNotification:
        ItemCreateNotification = other.ItemCreateNotification.Clone();
        break;
      case PayloadOneofCase.DoorToggleRequest:
        DoorToggleRequest = other.DoorToggleRequest.Clone();
        break;
      case PayloadOneofCase.DoorToggleNotification:
        DoorToggleNotification = other.DoorToggleNotification.Clone();
        break;
      case PayloadOneofCase.ExtractSoulRequest:
        ExtractSoulRequest = other.ExtractSoulRequest.Clone();
        break;
      case PayloadOneofCase.ExtractSoulNotification:
        ExtractSoulNotification = other.ExtractSoulNotification.Clone();
        break;
      case PayloadOneofCase.DisconnectPlayerNotification:
        DisconnectPlayerNotification = other.DisconnectPlayerNotification.Clone();
        break;
      case PayloadOneofCase.RemainingTimeNotification:
        RemainingTimeNotification = other.RemainingTimeNotification.Clone();
        break;
      case PayloadOneofCase.BlockInteractionNotification:
        BlockInteractionNotification = other.BlockInteractionNotification.Clone();
        break;
      case PayloadOneofCase.StartStageRequest:
        StartStageRequest = other.StartStageRequest.Clone();
        break;
      case PayloadOneofCase.StartStageNotification:
        StartStageNotification = other.StartStageNotification.Clone();
        break;
      case PayloadOneofCase.StageEndNotification:
        StageEndNotification = other.StageEndNotification.Clone();
        break;
      case PayloadOneofCase.SubmissionEndNotification:
        SubmissionEndNotification = other.SubmissionEndNotification.Clone();
        break;
      case PayloadOneofCase.DifficultySelectRequest:
        DifficultySelectRequest = other.DifficultySelectRequest.Clone();
        break;
      case PayloadOneofCase.DifficultySelectNotification:
        DifficultySelectNotification = other.DifficultySelectNotification.Clone();
        break;
      case PayloadOneofCase.DisconnectRoomRequest:
        DisconnectRoomRequest = other.DisconnectRoomRequest.Clone();
        break;
      case PayloadOneofCase.KickRoomNotification:
        KickRoomNotification = other.KickRoomNotification.Clone();
        break;
      case PayloadOneofCase.RegistAccountRequest:
        RegistAccountRequest = other.RegistAccountRequest.Clone();
        break;
      case PayloadOneofCase.RegistAccountResponse:
        RegistAccountResponse = other.RegistAccountResponse.Clone();
        break;
      case PayloadOneofCase.LoginRequest:
        LoginRequest = other.LoginRequest.Clone();
        break;
      case PayloadOneofCase.LoginResponse:
        LoginResponse = other.LoginResponse.Clone();
        break;
      case PayloadOneofCase.ChangeNicknameRequest:
        ChangeNicknameRequest = other.ChangeNicknameRequest.Clone();
        break;
      case PayloadOneofCase.ChangeNicknameResponse:
        ChangeNicknameResponse = other.ChangeNicknameResponse.Clone();
        break;
      case PayloadOneofCase.EnterLobbyRequest:
        EnterLobbyRequest = other.EnterLobbyRequest.Clone();
        break;
      case PayloadOneofCase.EnterLobbyResponse:
        EnterLobbyResponse = other.EnterLobbyResponse.Clone();
        break;
      case PayloadOneofCase.WaitingRoomListRequest:
        WaitingRoomListRequest = other.WaitingRoomListRequest.Clone();
        break;
      case PayloadOneofCase.WaitingRoomListResponse:
        WaitingRoomListResponse = other.WaitingRoomListResponse.Clone();
        break;
      case PayloadOneofCase.CreateRoomRequest:
        CreateRoomRequest = other.CreateRoomRequest.Clone();
        break;
      case PayloadOneofCase.CreateRoomResponse:
        CreateRoomResponse = other.CreateRoomResponse.Clone();
        break;
      case PayloadOneofCase.JoinRoomRequest:
        JoinRoomRequest = other.JoinRoomRequest.Clone();
        break;
      case PayloadOneofCase.JoinRoomByGameSessionIdRequest:
        JoinRoomByGameSessionIdRequest = other.JoinRoomByGameSessionIdRequest.Clone();
        break;
      case PayloadOneofCase.JoinRoomResponse:
        JoinRoomResponse = other.JoinRoomResponse.Clone();
        break;
      case PayloadOneofCase.JoinRoomNotification:
        JoinRoomNotification = other.JoinRoomNotification.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GamePacket Clone() {
    return new GamePacket(this);
  }

  /// <summary>Field number for the "playerMoveRequest" field.</summary>
  public const int PlayerMoveRequestFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_PlayerMoveRequest PlayerMoveRequest {
    get { return payloadCase_ == PayloadOneofCase.PlayerMoveRequest ? (global::C2S_PlayerMoveRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PlayerMoveRequest;
    }
  }

  /// <summary>Field number for the "playerMoveNotification" field.</summary>
  public const int PlayerMoveNotificationFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_PlayerMoveNotification PlayerMoveNotification {
    get { return payloadCase_ == PayloadOneofCase.PlayerMoveNotification ? (global::S2C_PlayerMoveNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PlayerMoveNotification;
    }
  }

  /// <summary>Field number for the "ghostMoveRequest" field.</summary>
  public const int GhostMoveRequestFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_GhostMoveRequest GhostMoveRequest {
    get { return payloadCase_ == PayloadOneofCase.GhostMoveRequest ? (global::C2S_GhostMoveRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostMoveRequest;
    }
  }

  /// <summary>Field number for the "ghostMoveNotification" field.</summary>
  public const int GhostMoveNotificationFieldNumber = 4;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_GhostMoveNotification GhostMoveNotification {
    get { return payloadCase_ == PayloadOneofCase.GhostMoveNotification ? (global::S2C_GhostMoveNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostMoveNotification;
    }
  }

  /// <summary>Field number for the "pingRequest" field.</summary>
  public const int PingRequestFieldNumber = 5;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_PingRequest PingRequest {
    get { return payloadCase_ == PayloadOneofCase.PingRequest ? (global::S2C_PingRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PingRequest;
    }
  }

  /// <summary>Field number for the "pingResponse" field.</summary>
  public const int PingResponseFieldNumber = 6;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_PingResponse PingResponse {
    get { return payloadCase_ == PayloadOneofCase.PingResponse ? (global::C2S_PingResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PingResponse;
    }
  }

  /// <summary>Field number for the "playerStateChangeRequest" field.</summary>
  public const int PlayerStateChangeRequestFieldNumber = 7;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_PlayerStateChangeRequest PlayerStateChangeRequest {
    get { return payloadCase_ == PayloadOneofCase.PlayerStateChangeRequest ? (global::C2S_PlayerStateChangeRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PlayerStateChangeRequest;
    }
  }

  /// <summary>Field number for the "playerStateChangeNotification" field.</summary>
  public const int PlayerStateChangeNotificationFieldNumber = 8;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_PlayerStateChangeNotification PlayerStateChangeNotification {
    get { return payloadCase_ == PayloadOneofCase.PlayerStateChangeNotification ? (global::S2C_PlayerStateChangeNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PlayerStateChangeNotification;
    }
  }

  /// <summary>Field number for the "ghostStateChangeRequest" field.</summary>
  public const int GhostStateChangeRequestFieldNumber = 9;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_GhostStateChangeRequest GhostStateChangeRequest {
    get { return payloadCase_ == PayloadOneofCase.GhostStateChangeRequest ? (global::C2S_GhostStateChangeRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostStateChangeRequest;
    }
  }

  /// <summary>Field number for the "ghostStateChangeNotification" field.</summary>
  public const int GhostStateChangeNotificationFieldNumber = 10;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_GhostStateChangeNotification GhostStateChangeNotification {
    get { return payloadCase_ == PayloadOneofCase.GhostStateChangeNotification ? (global::S2C_GhostStateChangeNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostStateChangeNotification;
    }
  }

  /// <summary>Field number for the "itemChangeRequest" field.</summary>
  public const int ItemChangeRequestFieldNumber = 11;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ItemChangeRequest ItemChangeRequest {
    get { return payloadCase_ == PayloadOneofCase.ItemChangeRequest ? (global::C2S_ItemChangeRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemChangeRequest;
    }
  }

  /// <summary>Field number for the "itemChangeNotification" field.</summary>
  public const int ItemChangeNotificationFieldNumber = 12;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemChangeNotification ItemChangeNotification {
    get { return payloadCase_ == PayloadOneofCase.ItemChangeNotification ? (global::S2C_ItemChangeNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemChangeNotification;
    }
  }

  /// <summary>Field number for the "playerAttackedRequest" field.</summary>
  public const int PlayerAttackedRequestFieldNumber = 101;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_PlayerAttackedRequest PlayerAttackedRequest {
    get { return payloadCase_ == PayloadOneofCase.PlayerAttackedRequest ? (global::C2S_PlayerAttackedRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PlayerAttackedRequest;
    }
  }

  /// <summary>Field number for the "playerLifeResponse" field.</summary>
  public const int PlayerLifeResponseFieldNumber = 102;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_PlayerLifeResponse PlayerLifeResponse {
    get { return payloadCase_ == PayloadOneofCase.PlayerLifeResponse ? (global::S2C_PlayerLifeResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PlayerLifeResponse;
    }
  }

  /// <summary>Field number for the "lifeUpdateRequest" field.</summary>
  public const int LifeUpdateRequestFieldNumber = 103;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_LifeUpdateRequest LifeUpdateRequest {
    get { return payloadCase_ == PayloadOneofCase.LifeUpdateRequest ? (global::C2S_LifeUpdateRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LifeUpdateRequest;
    }
  }

  /// <summary>Field number for the "ghostSpecialStateRequest" field.</summary>
  public const int GhostSpecialStateRequestFieldNumber = 201;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_GhostSpecialStateRequest GhostSpecialStateRequest {
    get { return payloadCase_ == PayloadOneofCase.GhostSpecialStateRequest ? (global::C2S_GhostSpecialStateRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostSpecialStateRequest;
    }
  }

  /// <summary>Field number for the "ghostSpecialStateNotification" field.</summary>
  public const int GhostSpecialStateNotificationFieldNumber = 202;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_GhostSpecialStateNotification GhostSpecialStateNotification {
    get { return payloadCase_ == PayloadOneofCase.GhostSpecialStateNotification ? (global::S2C_GhostSpecialStateNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostSpecialStateNotification;
    }
  }

  /// <summary>Field number for the "ghostAttackedRequest" field.</summary>
  public const int GhostAttackedRequestFieldNumber = 203;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_GhostAttackedRequest GhostAttackedRequest {
    get { return payloadCase_ == PayloadOneofCase.GhostAttackedRequest ? (global::C2S_GhostAttackedRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostAttackedRequest;
    }
  }

  /// <summary>Field number for the "ghostSpawnRequest" field.</summary>
  public const int GhostSpawnRequestFieldNumber = 204;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_GhostSpawnRequest GhostSpawnRequest {
    get { return payloadCase_ == PayloadOneofCase.GhostSpawnRequest ? (global::C2S_GhostSpawnRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostSpawnRequest;
    }
  }

  /// <summary>Field number for the "ghostSpawnNotification" field.</summary>
  public const int GhostSpawnNotificationFieldNumber = 205;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_GhostSpawnNotification GhostSpawnNotification {
    get { return payloadCase_ == PayloadOneofCase.GhostSpawnNotification ? (global::S2C_GhostSpawnNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostSpawnNotification;
    }
  }

  /// <summary>Field number for the "ghostDeleteNotification" field.</summary>
  public const int GhostDeleteNotificationFieldNumber = 206;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_GhostDeleteNotification GhostDeleteNotification {
    get { return payloadCase_ == PayloadOneofCase.GhostDeleteNotification ? (global::S2C_GhostDeleteNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GhostDeleteNotification;
    }
  }

  /// <summary>Field number for the "itemGetRequest" field.</summary>
  public const int ItemGetRequestFieldNumber = 301;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ItemGetRequest ItemGetRequest {
    get { return payloadCase_ == PayloadOneofCase.ItemGetRequest ? (global::C2S_ItemGetRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemGetRequest;
    }
  }

  /// <summary>Field number for the "itemGetResponse" field.</summary>
  public const int ItemGetResponseFieldNumber = 302;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemGetResponse ItemGetResponse {
    get { return payloadCase_ == PayloadOneofCase.ItemGetResponse ? (global::S2C_ItemGetResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemGetResponse;
    }
  }

  /// <summary>Field number for the "itemGetNotification" field.</summary>
  public const int ItemGetNotificationFieldNumber = 303;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemGetNotification ItemGetNotification {
    get { return payloadCase_ == PayloadOneofCase.ItemGetNotification ? (global::S2C_ItemGetNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemGetNotification;
    }
  }

  /// <summary>Field number for the "itemUseRequest" field.</summary>
  public const int ItemUseRequestFieldNumber = 304;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ItemUseRequest ItemUseRequest {
    get { return payloadCase_ == PayloadOneofCase.ItemUseRequest ? (global::C2S_ItemUseRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemUseRequest;
    }
  }

  /// <summary>Field number for the "itemUseResponse" field.</summary>
  public const int ItemUseResponseFieldNumber = 305;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemUseResponse ItemUseResponse {
    get { return payloadCase_ == PayloadOneofCase.ItemUseResponse ? (global::S2C_ItemUseResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemUseResponse;
    }
  }

  /// <summary>Field number for the "itemUseNotification" field.</summary>
  public const int ItemUseNotificationFieldNumber = 306;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemUseNotification ItemUseNotification {
    get { return payloadCase_ == PayloadOneofCase.ItemUseNotification ? (global::S2C_ItemUseNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemUseNotification;
    }
  }

  /// <summary>Field number for the "itemDiscardRequest" field.</summary>
  public const int ItemDiscardRequestFieldNumber = 307;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ItemDiscardRequest ItemDiscardRequest {
    get { return payloadCase_ == PayloadOneofCase.ItemDiscardRequest ? (global::C2S_ItemDiscardRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemDiscardRequest;
    }
  }

  /// <summary>Field number for the "itemDiscardResponse" field.</summary>
  public const int ItemDiscardResponseFieldNumber = 308;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemDiscardResponse ItemDiscardResponse {
    get { return payloadCase_ == PayloadOneofCase.ItemDiscardResponse ? (global::S2C_ItemDiscardResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemDiscardResponse;
    }
  }

  /// <summary>Field number for the "itemDiscardNotification" field.</summary>
  public const int ItemDiscardNotificationFieldNumber = 309;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemDiscardNotification ItemDiscardNotification {
    get { return payloadCase_ == PayloadOneofCase.ItemDiscardNotification ? (global::S2C_ItemDiscardNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemDiscardNotification;
    }
  }

  /// <summary>Field number for the "itemDisuseRequest" field.</summary>
  public const int ItemDisuseRequestFieldNumber = 310;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ItemDisuseRequest ItemDisuseRequest {
    get { return payloadCase_ == PayloadOneofCase.ItemDisuseRequest ? (global::C2S_ItemDisuseRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemDisuseRequest;
    }
  }

  /// <summary>Field number for the "itemDisuseNotification" field.</summary>
  public const int ItemDisuseNotificationFieldNumber = 311;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemDisuseNotification ItemDisuseNotification {
    get { return payloadCase_ == PayloadOneofCase.ItemDisuseNotification ? (global::S2C_ItemDisuseNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemDisuseNotification;
    }
  }

  /// <summary>Field number for the "itemDeleteNotification" field.</summary>
  public const int ItemDeleteNotificationFieldNumber = 312;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemDeleteNotification ItemDeleteNotification {
    get { return payloadCase_ == PayloadOneofCase.ItemDeleteNotification ? (global::S2C_ItemDeleteNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemDeleteNotification;
    }
  }

  /// <summary>Field number for the "itemPurchaseRequest" field.</summary>
  public const int ItemPurchaseRequestFieldNumber = 313;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ItemPurchaseRequest ItemPurchaseRequest {
    get { return payloadCase_ == PayloadOneofCase.ItemPurchaseRequest ? (global::C2S_ItemPurchaseRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemPurchaseRequest;
    }
  }

  /// <summary>Field number for the "itemPurchaseNotification" field.</summary>
  public const int ItemPurchaseNotificationFieldNumber = 314;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemPurchaseNotification ItemPurchaseNotification {
    get { return payloadCase_ == PayloadOneofCase.ItemPurchaseNotification ? (global::S2C_ItemPurchaseNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemPurchaseNotification;
    }
  }

  /// <summary>Field number for the "itemPurchaseResponse" field.</summary>
  public const int ItemPurchaseResponseFieldNumber = 315;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemPurchaseResponse ItemPurchaseResponse {
    get { return payloadCase_ == PayloadOneofCase.ItemPurchaseResponse ? (global::S2C_ItemPurchaseResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemPurchaseResponse;
    }
  }

  /// <summary>Field number for the "itemCreateRequest" field.</summary>
  public const int ItemCreateRequestFieldNumber = 316;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ItemCreateRequest ItemCreateRequest {
    get { return payloadCase_ == PayloadOneofCase.ItemCreateRequest ? (global::C2S_ItemCreateRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemCreateRequest;
    }
  }

  /// <summary>Field number for the "itemCreateNotification" field.</summary>
  public const int ItemCreateNotificationFieldNumber = 317;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ItemCreateNotification ItemCreateNotification {
    get { return payloadCase_ == PayloadOneofCase.ItemCreateNotification ? (global::S2C_ItemCreateNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ItemCreateNotification;
    }
  }

  /// <summary>Field number for the "doorToggleRequest" field.</summary>
  public const int DoorToggleRequestFieldNumber = 350;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_DoorToggleRequest DoorToggleRequest {
    get { return payloadCase_ == PayloadOneofCase.DoorToggleRequest ? (global::C2S_DoorToggleRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DoorToggleRequest;
    }
  }

  /// <summary>Field number for the "doorToggleNotification" field.</summary>
  public const int DoorToggleNotificationFieldNumber = 351;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_DoorToggleNotification DoorToggleNotification {
    get { return payloadCase_ == PayloadOneofCase.DoorToggleNotification ? (global::S2C_DoorToggleNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DoorToggleNotification;
    }
  }

  /// <summary>Field number for the "extractSoulRequest" field.</summary>
  public const int ExtractSoulRequestFieldNumber = 401;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ExtractSoulRequest ExtractSoulRequest {
    get { return payloadCase_ == PayloadOneofCase.ExtractSoulRequest ? (global::C2S_ExtractSoulRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ExtractSoulRequest;
    }
  }

  /// <summary>Field number for the "extractSoulNotification" field.</summary>
  public const int ExtractSoulNotificationFieldNumber = 402;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ExtractSoulNotification ExtractSoulNotification {
    get { return payloadCase_ == PayloadOneofCase.ExtractSoulNotification ? (global::S2C_ExtractSoulNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ExtractSoulNotification;
    }
  }

  /// <summary>Field number for the "disconnectPlayerNotification" field.</summary>
  public const int DisconnectPlayerNotificationFieldNumber = 403;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_DisconnectPlayerNotification DisconnectPlayerNotification {
    get { return payloadCase_ == PayloadOneofCase.DisconnectPlayerNotification ? (global::S2C_DisconnectPlayerNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DisconnectPlayerNotification;
    }
  }

  /// <summary>Field number for the "remainingTimeNotification" field.</summary>
  public const int RemainingTimeNotificationFieldNumber = 404;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_RemainingTimeNotification RemainingTimeNotification {
    get { return payloadCase_ == PayloadOneofCase.RemainingTimeNotification ? (global::S2C_RemainingTimeNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RemainingTimeNotification;
    }
  }

  /// <summary>Field number for the "blockInteractionNotification" field.</summary>
  public const int BlockInteractionNotificationFieldNumber = 405;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_BlockInteractionNotification BlockInteractionNotification {
    get { return payloadCase_ == PayloadOneofCase.BlockInteractionNotification ? (global::S2C_BlockInteractionNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BlockInteractionNotification;
    }
  }

  /// <summary>Field number for the "startStageRequest" field.</summary>
  public const int StartStageRequestFieldNumber = 406;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_StartStageRequest StartStageRequest {
    get { return payloadCase_ == PayloadOneofCase.StartStageRequest ? (global::C2S_StartStageRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StartStageRequest;
    }
  }

  /// <summary>Field number for the "startStageNotification" field.</summary>
  public const int StartStageNotificationFieldNumber = 407;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_StartStageNotification StartStageNotification {
    get { return payloadCase_ == PayloadOneofCase.StartStageNotification ? (global::S2C_StartStageNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StartStageNotification;
    }
  }

  /// <summary>Field number for the "stageEndNotification" field.</summary>
  public const int StageEndNotificationFieldNumber = 408;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_StageEndNotification StageEndNotification {
    get { return payloadCase_ == PayloadOneofCase.StageEndNotification ? (global::S2C_StageEndNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StageEndNotification;
    }
  }

  /// <summary>Field number for the "submissionEndNotification" field.</summary>
  public const int SubmissionEndNotificationFieldNumber = 409;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_SubmissionEndNotification SubmissionEndNotification {
    get { return payloadCase_ == PayloadOneofCase.SubmissionEndNotification ? (global::S2C_SubmissionEndNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubmissionEndNotification;
    }
  }

  /// <summary>Field number for the "difficultySelectRequest" field.</summary>
  public const int DifficultySelectRequestFieldNumber = 410;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_DifficultySelectRequest DifficultySelectRequest {
    get { return payloadCase_ == PayloadOneofCase.DifficultySelectRequest ? (global::C2S_DifficultySelectRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DifficultySelectRequest;
    }
  }

  /// <summary>Field number for the "difficultySelectNotification" field.</summary>
  public const int DifficultySelectNotificationFieldNumber = 411;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_DifficultySelectNotification DifficultySelectNotification {
    get { return payloadCase_ == PayloadOneofCase.DifficultySelectNotification ? (global::S2C_DifficultySelectNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DifficultySelectNotification;
    }
  }

  /// <summary>Field number for the "disconnectRoomRequest" field.</summary>
  public const int DisconnectRoomRequestFieldNumber = 412;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_DisconnectRoomRequest DisconnectRoomRequest {
    get { return payloadCase_ == PayloadOneofCase.DisconnectRoomRequest ? (global::C2S_DisconnectRoomRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DisconnectRoomRequest;
    }
  }

  /// <summary>Field number for the "kickRoomNotification" field.</summary>
  public const int KickRoomNotificationFieldNumber = 413;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_KickRoomNotification KickRoomNotification {
    get { return payloadCase_ == PayloadOneofCase.KickRoomNotification ? (global::S2C_KickRoomNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.KickRoomNotification;
    }
  }

  /// <summary>Field number for the "registAccountRequest" field.</summary>
  public const int RegistAccountRequestFieldNumber = 500;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_RegistAccountRequest RegistAccountRequest {
    get { return payloadCase_ == PayloadOneofCase.RegistAccountRequest ? (global::C2S_RegistAccountRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RegistAccountRequest;
    }
  }

  /// <summary>Field number for the "registAccountResponse" field.</summary>
  public const int RegistAccountResponseFieldNumber = 501;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_RegistAccountResponse RegistAccountResponse {
    get { return payloadCase_ == PayloadOneofCase.RegistAccountResponse ? (global::S2C_RegistAccountResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RegistAccountResponse;
    }
  }

  /// <summary>Field number for the "loginRequest" field.</summary>
  public const int LoginRequestFieldNumber = 502;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_LoginRequest LoginRequest {
    get { return payloadCase_ == PayloadOneofCase.LoginRequest ? (global::C2S_LoginRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LoginRequest;
    }
  }

  /// <summary>Field number for the "loginResponse" field.</summary>
  public const int LoginResponseFieldNumber = 503;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_LoginResponse LoginResponse {
    get { return payloadCase_ == PayloadOneofCase.LoginResponse ? (global::S2C_LoginResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LoginResponse;
    }
  }

  /// <summary>Field number for the "changeNicknameRequest" field.</summary>
  public const int ChangeNicknameRequestFieldNumber = 504;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_ChangeNicknameRequest ChangeNicknameRequest {
    get { return payloadCase_ == PayloadOneofCase.ChangeNicknameRequest ? (global::C2S_ChangeNicknameRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ChangeNicknameRequest;
    }
  }

  /// <summary>Field number for the "changeNicknameResponse" field.</summary>
  public const int ChangeNicknameResponseFieldNumber = 505;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_ChangeNicknameResponse ChangeNicknameResponse {
    get { return payloadCase_ == PayloadOneofCase.ChangeNicknameResponse ? (global::S2C_ChangeNicknameResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ChangeNicknameResponse;
    }
  }

  /// <summary>Field number for the "enterLobbyRequest" field.</summary>
  public const int EnterLobbyRequestFieldNumber = 506;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_EnterLobbyRequest EnterLobbyRequest {
    get { return payloadCase_ == PayloadOneofCase.EnterLobbyRequest ? (global::C2S_EnterLobbyRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.EnterLobbyRequest;
    }
  }

  /// <summary>Field number for the "enterLobbyResponse" field.</summary>
  public const int EnterLobbyResponseFieldNumber = 507;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_EnterLobbyResponse EnterLobbyResponse {
    get { return payloadCase_ == PayloadOneofCase.EnterLobbyResponse ? (global::S2C_EnterLobbyResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.EnterLobbyResponse;
    }
  }

  /// <summary>Field number for the "waitingRoomListRequest" field.</summary>
  public const int WaitingRoomListRequestFieldNumber = 508;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_WaitingRoomListRequest WaitingRoomListRequest {
    get { return payloadCase_ == PayloadOneofCase.WaitingRoomListRequest ? (global::C2S_WaitingRoomListRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.WaitingRoomListRequest;
    }
  }

  /// <summary>Field number for the "waitingRoomListResponse" field.</summary>
  public const int WaitingRoomListResponseFieldNumber = 509;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_WaitingRoomListResponse WaitingRoomListResponse {
    get { return payloadCase_ == PayloadOneofCase.WaitingRoomListResponse ? (global::S2C_WaitingRoomListResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.WaitingRoomListResponse;
    }
  }

  /// <summary>Field number for the "createRoomRequest" field.</summary>
  public const int CreateRoomRequestFieldNumber = 601;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_CreateRoomRequest CreateRoomRequest {
    get { return payloadCase_ == PayloadOneofCase.CreateRoomRequest ? (global::C2S_CreateRoomRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CreateRoomRequest;
    }
  }

  /// <summary>Field number for the "createRoomResponse" field.</summary>
  public const int CreateRoomResponseFieldNumber = 602;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_CreateRoomResponse CreateRoomResponse {
    get { return payloadCase_ == PayloadOneofCase.CreateRoomResponse ? (global::S2C_CreateRoomResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CreateRoomResponse;
    }
  }

  /// <summary>Field number for the "joinRoomRequest" field.</summary>
  public const int JoinRoomRequestFieldNumber = 603;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_JoinRoomRequest JoinRoomRequest {
    get { return payloadCase_ == PayloadOneofCase.JoinRoomRequest ? (global::C2S_JoinRoomRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRoomRequest;
    }
  }

  /// <summary>Field number for the "joinRoomByGameSessionIdRequest" field.</summary>
  public const int JoinRoomByGameSessionIdRequestFieldNumber = 604;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::C2S_JoinRoomByGameSessionIdRequest JoinRoomByGameSessionIdRequest {
    get { return payloadCase_ == PayloadOneofCase.JoinRoomByGameSessionIdRequest ? (global::C2S_JoinRoomByGameSessionIdRequest) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRoomByGameSessionIdRequest;
    }
  }

  /// <summary>Field number for the "joinRoomResponse" field.</summary>
  public const int JoinRoomResponseFieldNumber = 605;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_JoinRoomResponse JoinRoomResponse {
    get { return payloadCase_ == PayloadOneofCase.JoinRoomResponse ? (global::S2C_JoinRoomResponse) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRoomResponse;
    }
  }

  /// <summary>Field number for the "joinRoomNotification" field.</summary>
  public const int JoinRoomNotificationFieldNumber = 606;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::S2C_JoinRoomNotification JoinRoomNotification {
    get { return payloadCase_ == PayloadOneofCase.JoinRoomNotification ? (global::S2C_JoinRoomNotification) payload_ : null; }
    set {
      payload_ = value;
      payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRoomNotification;
    }
  }

  private object payload_;
  /// <summary>Enum of possible cases for the "payload" oneof.</summary>
  public enum PayloadOneofCase {
    None = 0,
    PlayerMoveRequest = 1,
    PlayerMoveNotification = 2,
    GhostMoveRequest = 3,
    GhostMoveNotification = 4,
    PingRequest = 5,
    PingResponse = 6,
    PlayerStateChangeRequest = 7,
    PlayerStateChangeNotification = 8,
    GhostStateChangeRequest = 9,
    GhostStateChangeNotification = 10,
    ItemChangeRequest = 11,
    ItemChangeNotification = 12,
    PlayerAttackedRequest = 101,
    PlayerLifeResponse = 102,
    LifeUpdateRequest = 103,
    GhostSpecialStateRequest = 201,
    GhostSpecialStateNotification = 202,
    GhostAttackedRequest = 203,
    GhostSpawnRequest = 204,
    GhostSpawnNotification = 205,
    GhostDeleteNotification = 206,
    ItemGetRequest = 301,
    ItemGetResponse = 302,
    ItemGetNotification = 303,
    ItemUseRequest = 304,
    ItemUseResponse = 305,
    ItemUseNotification = 306,
    ItemDiscardRequest = 307,
    ItemDiscardResponse = 308,
    ItemDiscardNotification = 309,
    ItemDisuseRequest = 310,
    ItemDisuseNotification = 311,
    ItemDeleteNotification = 312,
    ItemPurchaseRequest = 313,
    ItemPurchaseNotification = 314,
    ItemPurchaseResponse = 315,
    ItemCreateRequest = 316,
    ItemCreateNotification = 317,
    DoorToggleRequest = 350,
    DoorToggleNotification = 351,
    ExtractSoulRequest = 401,
    ExtractSoulNotification = 402,
    DisconnectPlayerNotification = 403,
    RemainingTimeNotification = 404,
    BlockInteractionNotification = 405,
    StartStageRequest = 406,
    StartStageNotification = 407,
    StageEndNotification = 408,
    SubmissionEndNotification = 409,
    DifficultySelectRequest = 410,
    DifficultySelectNotification = 411,
    DisconnectRoomRequest = 412,
    KickRoomNotification = 413,
    RegistAccountRequest = 500,
    RegistAccountResponse = 501,
    LoginRequest = 502,
    LoginResponse = 503,
    ChangeNicknameRequest = 504,
    ChangeNicknameResponse = 505,
    EnterLobbyRequest = 506,
    EnterLobbyResponse = 507,
    WaitingRoomListRequest = 508,
    WaitingRoomListResponse = 509,
    CreateRoomRequest = 601,
    CreateRoomResponse = 602,
    JoinRoomRequest = 603,
    JoinRoomByGameSessionIdRequest = 604,
    JoinRoomResponse = 605,
    JoinRoomNotification = 606,
  }
  private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PayloadOneofCase PayloadCase {
    get { return payloadCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearPayload() {
    payloadCase_ = PayloadOneofCase.None;
    payload_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GamePacket);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GamePacket other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(PlayerMoveRequest, other.PlayerMoveRequest)) return false;
    if (!object.Equals(PlayerMoveNotification, other.PlayerMoveNotification)) return false;
    if (!object.Equals(GhostMoveRequest, other.GhostMoveRequest)) return false;
    if (!object.Equals(GhostMoveNotification, other.GhostMoveNotification)) return false;
    if (!object.Equals(PingRequest, other.PingRequest)) return false;
    if (!object.Equals(PingResponse, other.PingResponse)) return false;
    if (!object.Equals(PlayerStateChangeRequest, other.PlayerStateChangeRequest)) return false;
    if (!object.Equals(PlayerStateChangeNotification, other.PlayerStateChangeNotification)) return false;
    if (!object.Equals(GhostStateChangeRequest, other.GhostStateChangeRequest)) return false;
    if (!object.Equals(GhostStateChangeNotification, other.GhostStateChangeNotification)) return false;
    if (!object.Equals(ItemChangeRequest, other.ItemChangeRequest)) return false;
    if (!object.Equals(ItemChangeNotification, other.ItemChangeNotification)) return false;
    if (!object.Equals(PlayerAttackedRequest, other.PlayerAttackedRequest)) return false;
    if (!object.Equals(PlayerLifeResponse, other.PlayerLifeResponse)) return false;
    if (!object.Equals(LifeUpdateRequest, other.LifeUpdateRequest)) return false;
    if (!object.Equals(GhostSpecialStateRequest, other.GhostSpecialStateRequest)) return false;
    if (!object.Equals(GhostSpecialStateNotification, other.GhostSpecialStateNotification)) return false;
    if (!object.Equals(GhostAttackedRequest, other.GhostAttackedRequest)) return false;
    if (!object.Equals(GhostSpawnRequest, other.GhostSpawnRequest)) return false;
    if (!object.Equals(GhostSpawnNotification, other.GhostSpawnNotification)) return false;
    if (!object.Equals(GhostDeleteNotification, other.GhostDeleteNotification)) return false;
    if (!object.Equals(ItemGetRequest, other.ItemGetRequest)) return false;
    if (!object.Equals(ItemGetResponse, other.ItemGetResponse)) return false;
    if (!object.Equals(ItemGetNotification, other.ItemGetNotification)) return false;
    if (!object.Equals(ItemUseRequest, other.ItemUseRequest)) return false;
    if (!object.Equals(ItemUseResponse, other.ItemUseResponse)) return false;
    if (!object.Equals(ItemUseNotification, other.ItemUseNotification)) return false;
    if (!object.Equals(ItemDiscardRequest, other.ItemDiscardRequest)) return false;
    if (!object.Equals(ItemDiscardResponse, other.ItemDiscardResponse)) return false;
    if (!object.Equals(ItemDiscardNotification, other.ItemDiscardNotification)) return false;
    if (!object.Equals(ItemDisuseRequest, other.ItemDisuseRequest)) return false;
    if (!object.Equals(ItemDisuseNotification, other.ItemDisuseNotification)) return false;
    if (!object.Equals(ItemDeleteNotification, other.ItemDeleteNotification)) return false;
    if (!object.Equals(ItemPurchaseRequest, other.ItemPurchaseRequest)) return false;
    if (!object.Equals(ItemPurchaseNotification, other.ItemPurchaseNotification)) return false;
    if (!object.Equals(ItemPurchaseResponse, other.ItemPurchaseResponse)) return false;
    if (!object.Equals(ItemCreateRequest, other.ItemCreateRequest)) return false;
    if (!object.Equals(ItemCreateNotification, other.ItemCreateNotification)) return false;
    if (!object.Equals(DoorToggleRequest, other.DoorToggleRequest)) return false;
    if (!object.Equals(DoorToggleNotification, other.DoorToggleNotification)) return false;
    if (!object.Equals(ExtractSoulRequest, other.ExtractSoulRequest)) return false;
    if (!object.Equals(ExtractSoulNotification, other.ExtractSoulNotification)) return false;
    if (!object.Equals(DisconnectPlayerNotification, other.DisconnectPlayerNotification)) return false;
    if (!object.Equals(RemainingTimeNotification, other.RemainingTimeNotification)) return false;
    if (!object.Equals(BlockInteractionNotification, other.BlockInteractionNotification)) return false;
    if (!object.Equals(StartStageRequest, other.StartStageRequest)) return false;
    if (!object.Equals(StartStageNotification, other.StartStageNotification)) return false;
    if (!object.Equals(StageEndNotification, other.StageEndNotification)) return false;
    if (!object.Equals(SubmissionEndNotification, other.SubmissionEndNotification)) return false;
    if (!object.Equals(DifficultySelectRequest, other.DifficultySelectRequest)) return false;
    if (!object.Equals(DifficultySelectNotification, other.DifficultySelectNotification)) return false;
    if (!object.Equals(DisconnectRoomRequest, other.DisconnectRoomRequest)) return false;
    if (!object.Equals(KickRoomNotification, other.KickRoomNotification)) return false;
    if (!object.Equals(RegistAccountRequest, other.RegistAccountRequest)) return false;
    if (!object.Equals(RegistAccountResponse, other.RegistAccountResponse)) return false;
    if (!object.Equals(LoginRequest, other.LoginRequest)) return false;
    if (!object.Equals(LoginResponse, other.LoginResponse)) return false;
    if (!object.Equals(ChangeNicknameRequest, other.ChangeNicknameRequest)) return false;
    if (!object.Equals(ChangeNicknameResponse, other.ChangeNicknameResponse)) return false;
    if (!object.Equals(EnterLobbyRequest, other.EnterLobbyRequest)) return false;
    if (!object.Equals(EnterLobbyResponse, other.EnterLobbyResponse)) return false;
    if (!object.Equals(WaitingRoomListRequest, other.WaitingRoomListRequest)) return false;
    if (!object.Equals(WaitingRoomListResponse, other.WaitingRoomListResponse)) return false;
    if (!object.Equals(CreateRoomRequest, other.CreateRoomRequest)) return false;
    if (!object.Equals(CreateRoomResponse, other.CreateRoomResponse)) return false;
    if (!object.Equals(JoinRoomRequest, other.JoinRoomRequest)) return false;
    if (!object.Equals(JoinRoomByGameSessionIdRequest, other.JoinRoomByGameSessionIdRequest)) return false;
    if (!object.Equals(JoinRoomResponse, other.JoinRoomResponse)) return false;
    if (!object.Equals(JoinRoomNotification, other.JoinRoomNotification)) return false;
    if (PayloadCase != other.PayloadCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (payloadCase_ == PayloadOneofCase.PlayerMoveRequest) hash ^= PlayerMoveRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.PlayerMoveNotification) hash ^= PlayerMoveNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostMoveRequest) hash ^= GhostMoveRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostMoveNotification) hash ^= GhostMoveNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.PingRequest) hash ^= PingRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.PingResponse) hash ^= PingResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.PlayerStateChangeRequest) hash ^= PlayerStateChangeRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.PlayerStateChangeNotification) hash ^= PlayerStateChangeNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostStateChangeRequest) hash ^= GhostStateChangeRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostStateChangeNotification) hash ^= GhostStateChangeNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemChangeRequest) hash ^= ItemChangeRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemChangeNotification) hash ^= ItemChangeNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.PlayerAttackedRequest) hash ^= PlayerAttackedRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.PlayerLifeResponse) hash ^= PlayerLifeResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.LifeUpdateRequest) hash ^= LifeUpdateRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostSpecialStateRequest) hash ^= GhostSpecialStateRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostSpecialStateNotification) hash ^= GhostSpecialStateNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostAttackedRequest) hash ^= GhostAttackedRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostSpawnRequest) hash ^= GhostSpawnRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostSpawnNotification) hash ^= GhostSpawnNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.GhostDeleteNotification) hash ^= GhostDeleteNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemGetRequest) hash ^= ItemGetRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemGetResponse) hash ^= ItemGetResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemGetNotification) hash ^= ItemGetNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemUseRequest) hash ^= ItemUseRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemUseResponse) hash ^= ItemUseResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemUseNotification) hash ^= ItemUseNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemDiscardRequest) hash ^= ItemDiscardRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemDiscardResponse) hash ^= ItemDiscardResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemDiscardNotification) hash ^= ItemDiscardNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemDisuseRequest) hash ^= ItemDisuseRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemDisuseNotification) hash ^= ItemDisuseNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemDeleteNotification) hash ^= ItemDeleteNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseRequest) hash ^= ItemPurchaseRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseNotification) hash ^= ItemPurchaseNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseResponse) hash ^= ItemPurchaseResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemCreateRequest) hash ^= ItemCreateRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ItemCreateNotification) hash ^= ItemCreateNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.DoorToggleRequest) hash ^= DoorToggleRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.DoorToggleNotification) hash ^= DoorToggleNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ExtractSoulRequest) hash ^= ExtractSoulRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ExtractSoulNotification) hash ^= ExtractSoulNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.DisconnectPlayerNotification) hash ^= DisconnectPlayerNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.RemainingTimeNotification) hash ^= RemainingTimeNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.BlockInteractionNotification) hash ^= BlockInteractionNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.StartStageRequest) hash ^= StartStageRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.StartStageNotification) hash ^= StartStageNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.StageEndNotification) hash ^= StageEndNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.SubmissionEndNotification) hash ^= SubmissionEndNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.DifficultySelectRequest) hash ^= DifficultySelectRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.DifficultySelectNotification) hash ^= DifficultySelectNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.DisconnectRoomRequest) hash ^= DisconnectRoomRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.KickRoomNotification) hash ^= KickRoomNotification.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.RegistAccountRequest) hash ^= RegistAccountRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.RegistAccountResponse) hash ^= RegistAccountResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.LoginRequest) hash ^= LoginRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.LoginResponse) hash ^= LoginResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ChangeNicknameRequest) hash ^= ChangeNicknameRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.ChangeNicknameResponse) hash ^= ChangeNicknameResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.EnterLobbyRequest) hash ^= EnterLobbyRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.EnterLobbyResponse) hash ^= EnterLobbyResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.WaitingRoomListRequest) hash ^= WaitingRoomListRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.WaitingRoomListResponse) hash ^= WaitingRoomListResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) hash ^= CreateRoomRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) hash ^= CreateRoomResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) hash ^= JoinRoomRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.JoinRoomByGameSessionIdRequest) hash ^= JoinRoomByGameSessionIdRequest.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) hash ^= JoinRoomResponse.GetHashCode();
    if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) hash ^= JoinRoomNotification.GetHashCode();
    hash ^= (int) payloadCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (payloadCase_ == PayloadOneofCase.PlayerMoveRequest) {
      output.WriteRawTag(10);
      output.WriteMessage(PlayerMoveRequest);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerMoveNotification) {
      output.WriteRawTag(18);
      output.WriteMessage(PlayerMoveNotification);
    }
    if (payloadCase_ == PayloadOneofCase.GhostMoveRequest) {
      output.WriteRawTag(26);
      output.WriteMessage(GhostMoveRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostMoveNotification) {
      output.WriteRawTag(34);
      output.WriteMessage(GhostMoveNotification);
    }
    if (payloadCase_ == PayloadOneofCase.PingRequest) {
      output.WriteRawTag(42);
      output.WriteMessage(PingRequest);
    }
    if (payloadCase_ == PayloadOneofCase.PingResponse) {
      output.WriteRawTag(50);
      output.WriteMessage(PingResponse);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerStateChangeRequest) {
      output.WriteRawTag(58);
      output.WriteMessage(PlayerStateChangeRequest);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerStateChangeNotification) {
      output.WriteRawTag(66);
      output.WriteMessage(PlayerStateChangeNotification);
    }
    if (payloadCase_ == PayloadOneofCase.GhostStateChangeRequest) {
      output.WriteRawTag(74);
      output.WriteMessage(GhostStateChangeRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostStateChangeNotification) {
      output.WriteRawTag(82);
      output.WriteMessage(GhostStateChangeNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemChangeRequest) {
      output.WriteRawTag(90);
      output.WriteMessage(ItemChangeRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemChangeNotification) {
      output.WriteRawTag(98);
      output.WriteMessage(ItemChangeNotification);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerAttackedRequest) {
      output.WriteRawTag(170, 6);
      output.WriteMessage(PlayerAttackedRequest);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerLifeResponse) {
      output.WriteRawTag(178, 6);
      output.WriteMessage(PlayerLifeResponse);
    }
    if (payloadCase_ == PayloadOneofCase.LifeUpdateRequest) {
      output.WriteRawTag(186, 6);
      output.WriteMessage(LifeUpdateRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostSpecialStateRequest) {
      output.WriteRawTag(202, 12);
      output.WriteMessage(GhostSpecialStateRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostSpecialStateNotification) {
      output.WriteRawTag(210, 12);
      output.WriteMessage(GhostSpecialStateNotification);
    }
    if (payloadCase_ == PayloadOneofCase.GhostAttackedRequest) {
      output.WriteRawTag(218, 12);
      output.WriteMessage(GhostAttackedRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostSpawnRequest) {
      output.WriteRawTag(226, 12);
      output.WriteMessage(GhostSpawnRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostSpawnNotification) {
      output.WriteRawTag(234, 12);
      output.WriteMessage(GhostSpawnNotification);
    }
    if (payloadCase_ == PayloadOneofCase.GhostDeleteNotification) {
      output.WriteRawTag(242, 12);
      output.WriteMessage(GhostDeleteNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemGetRequest) {
      output.WriteRawTag(234, 18);
      output.WriteMessage(ItemGetRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemGetResponse) {
      output.WriteRawTag(242, 18);
      output.WriteMessage(ItemGetResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ItemGetNotification) {
      output.WriteRawTag(250, 18);
      output.WriteMessage(ItemGetNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemUseRequest) {
      output.WriteRawTag(130, 19);
      output.WriteMessage(ItemUseRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemUseResponse) {
      output.WriteRawTag(138, 19);
      output.WriteMessage(ItemUseResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ItemUseNotification) {
      output.WriteRawTag(146, 19);
      output.WriteMessage(ItemUseNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDiscardRequest) {
      output.WriteRawTag(154, 19);
      output.WriteMessage(ItemDiscardRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDiscardResponse) {
      output.WriteRawTag(162, 19);
      output.WriteMessage(ItemDiscardResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDiscardNotification) {
      output.WriteRawTag(170, 19);
      output.WriteMessage(ItemDiscardNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDisuseRequest) {
      output.WriteRawTag(178, 19);
      output.WriteMessage(ItemDisuseRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDisuseNotification) {
      output.WriteRawTag(186, 19);
      output.WriteMessage(ItemDisuseNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDeleteNotification) {
      output.WriteRawTag(194, 19);
      output.WriteMessage(ItemDeleteNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseRequest) {
      output.WriteRawTag(202, 19);
      output.WriteMessage(ItemPurchaseRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseNotification) {
      output.WriteRawTag(210, 19);
      output.WriteMessage(ItemPurchaseNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseResponse) {
      output.WriteRawTag(218, 19);
      output.WriteMessage(ItemPurchaseResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ItemCreateRequest) {
      output.WriteRawTag(226, 19);
      output.WriteMessage(ItemCreateRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemCreateNotification) {
      output.WriteRawTag(234, 19);
      output.WriteMessage(ItemCreateNotification);
    }
    if (payloadCase_ == PayloadOneofCase.DoorToggleRequest) {
      output.WriteRawTag(242, 21);
      output.WriteMessage(DoorToggleRequest);
    }
    if (payloadCase_ == PayloadOneofCase.DoorToggleNotification) {
      output.WriteRawTag(250, 21);
      output.WriteMessage(DoorToggleNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ExtractSoulRequest) {
      output.WriteRawTag(138, 25);
      output.WriteMessage(ExtractSoulRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ExtractSoulNotification) {
      output.WriteRawTag(146, 25);
      output.WriteMessage(ExtractSoulNotification);
    }
    if (payloadCase_ == PayloadOneofCase.DisconnectPlayerNotification) {
      output.WriteRawTag(154, 25);
      output.WriteMessage(DisconnectPlayerNotification);
    }
    if (payloadCase_ == PayloadOneofCase.RemainingTimeNotification) {
      output.WriteRawTag(162, 25);
      output.WriteMessage(RemainingTimeNotification);
    }
    if (payloadCase_ == PayloadOneofCase.BlockInteractionNotification) {
      output.WriteRawTag(170, 25);
      output.WriteMessage(BlockInteractionNotification);
    }
    if (payloadCase_ == PayloadOneofCase.StartStageRequest) {
      output.WriteRawTag(178, 25);
      output.WriteMessage(StartStageRequest);
    }
    if (payloadCase_ == PayloadOneofCase.StartStageNotification) {
      output.WriteRawTag(186, 25);
      output.WriteMessage(StartStageNotification);
    }
    if (payloadCase_ == PayloadOneofCase.StageEndNotification) {
      output.WriteRawTag(194, 25);
      output.WriteMessage(StageEndNotification);
    }
    if (payloadCase_ == PayloadOneofCase.SubmissionEndNotification) {
      output.WriteRawTag(202, 25);
      output.WriteMessage(SubmissionEndNotification);
    }
    if (payloadCase_ == PayloadOneofCase.DifficultySelectRequest) {
      output.WriteRawTag(210, 25);
      output.WriteMessage(DifficultySelectRequest);
    }
    if (payloadCase_ == PayloadOneofCase.DifficultySelectNotification) {
      output.WriteRawTag(218, 25);
      output.WriteMessage(DifficultySelectNotification);
    }
    if (payloadCase_ == PayloadOneofCase.DisconnectRoomRequest) {
      output.WriteRawTag(226, 25);
      output.WriteMessage(DisconnectRoomRequest);
    }
    if (payloadCase_ == PayloadOneofCase.KickRoomNotification) {
      output.WriteRawTag(234, 25);
      output.WriteMessage(KickRoomNotification);
    }
    if (payloadCase_ == PayloadOneofCase.RegistAccountRequest) {
      output.WriteRawTag(162, 31);
      output.WriteMessage(RegistAccountRequest);
    }
    if (payloadCase_ == PayloadOneofCase.RegistAccountResponse) {
      output.WriteRawTag(170, 31);
      output.WriteMessage(RegistAccountResponse);
    }
    if (payloadCase_ == PayloadOneofCase.LoginRequest) {
      output.WriteRawTag(178, 31);
      output.WriteMessage(LoginRequest);
    }
    if (payloadCase_ == PayloadOneofCase.LoginResponse) {
      output.WriteRawTag(186, 31);
      output.WriteMessage(LoginResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ChangeNicknameRequest) {
      output.WriteRawTag(194, 31);
      output.WriteMessage(ChangeNicknameRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ChangeNicknameResponse) {
      output.WriteRawTag(202, 31);
      output.WriteMessage(ChangeNicknameResponse);
    }
    if (payloadCase_ == PayloadOneofCase.EnterLobbyRequest) {
      output.WriteRawTag(210, 31);
      output.WriteMessage(EnterLobbyRequest);
    }
    if (payloadCase_ == PayloadOneofCase.EnterLobbyResponse) {
      output.WriteRawTag(218, 31);
      output.WriteMessage(EnterLobbyResponse);
    }
    if (payloadCase_ == PayloadOneofCase.WaitingRoomListRequest) {
      output.WriteRawTag(226, 31);
      output.WriteMessage(WaitingRoomListRequest);
    }
    if (payloadCase_ == PayloadOneofCase.WaitingRoomListResponse) {
      output.WriteRawTag(234, 31);
      output.WriteMessage(WaitingRoomListResponse);
    }
    if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) {
      output.WriteRawTag(202, 37);
      output.WriteMessage(CreateRoomRequest);
    }
    if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) {
      output.WriteRawTag(210, 37);
      output.WriteMessage(CreateRoomResponse);
    }
    if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) {
      output.WriteRawTag(218, 37);
      output.WriteMessage(JoinRoomRequest);
    }
    if (payloadCase_ == PayloadOneofCase.JoinRoomByGameSessionIdRequest) {
      output.WriteRawTag(226, 37);
      output.WriteMessage(JoinRoomByGameSessionIdRequest);
    }
    if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) {
      output.WriteRawTag(234, 37);
      output.WriteMessage(JoinRoomResponse);
    }
    if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) {
      output.WriteRawTag(242, 37);
      output.WriteMessage(JoinRoomNotification);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (payloadCase_ == PayloadOneofCase.PlayerMoveRequest) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerMoveRequest);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerMoveNotification) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerMoveNotification);
    }
    if (payloadCase_ == PayloadOneofCase.GhostMoveRequest) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostMoveRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostMoveNotification) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostMoveNotification);
    }
    if (payloadCase_ == PayloadOneofCase.PingRequest) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PingRequest);
    }
    if (payloadCase_ == PayloadOneofCase.PingResponse) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PingResponse);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerStateChangeRequest) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStateChangeRequest);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerStateChangeNotification) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStateChangeNotification);
    }
    if (payloadCase_ == PayloadOneofCase.GhostStateChangeRequest) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostStateChangeRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostStateChangeNotification) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostStateChangeNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemChangeRequest) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemChangeRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemChangeNotification) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemChangeNotification);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerAttackedRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlayerAttackedRequest);
    }
    if (payloadCase_ == PayloadOneofCase.PlayerLifeResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PlayerLifeResponse);
    }
    if (payloadCase_ == PayloadOneofCase.LifeUpdateRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(LifeUpdateRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostSpecialStateRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GhostSpecialStateRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostSpecialStateNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GhostSpecialStateNotification);
    }
    if (payloadCase_ == PayloadOneofCase.GhostAttackedRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GhostAttackedRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostSpawnRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GhostSpawnRequest);
    }
    if (payloadCase_ == PayloadOneofCase.GhostSpawnNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GhostSpawnNotification);
    }
    if (payloadCase_ == PayloadOneofCase.GhostDeleteNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GhostDeleteNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemGetRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemGetRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemGetResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemGetResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ItemGetNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemGetNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemUseRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemUseRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemUseResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemUseResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ItemUseNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemUseNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDiscardRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemDiscardRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDiscardResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemDiscardResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDiscardNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemDiscardNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDisuseRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemDisuseRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDisuseNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemDisuseNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemDeleteNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemDeleteNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemPurchaseRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemPurchaseNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ItemPurchaseResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemPurchaseResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ItemCreateRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemCreateRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ItemCreateNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ItemCreateNotification);
    }
    if (payloadCase_ == PayloadOneofCase.DoorToggleRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DoorToggleRequest);
    }
    if (payloadCase_ == PayloadOneofCase.DoorToggleNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DoorToggleNotification);
    }
    if (payloadCase_ == PayloadOneofCase.ExtractSoulRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExtractSoulRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ExtractSoulNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ExtractSoulNotification);
    }
    if (payloadCase_ == PayloadOneofCase.DisconnectPlayerNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DisconnectPlayerNotification);
    }
    if (payloadCase_ == PayloadOneofCase.RemainingTimeNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemainingTimeNotification);
    }
    if (payloadCase_ == PayloadOneofCase.BlockInteractionNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlockInteractionNotification);
    }
    if (payloadCase_ == PayloadOneofCase.StartStageRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartStageRequest);
    }
    if (payloadCase_ == PayloadOneofCase.StartStageNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartStageNotification);
    }
    if (payloadCase_ == PayloadOneofCase.StageEndNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(StageEndNotification);
    }
    if (payloadCase_ == PayloadOneofCase.SubmissionEndNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmissionEndNotification);
    }
    if (payloadCase_ == PayloadOneofCase.DifficultySelectRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DifficultySelectRequest);
    }
    if (payloadCase_ == PayloadOneofCase.DifficultySelectNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DifficultySelectNotification);
    }
    if (payloadCase_ == PayloadOneofCase.DisconnectRoomRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(DisconnectRoomRequest);
    }
    if (payloadCase_ == PayloadOneofCase.KickRoomNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(KickRoomNotification);
    }
    if (payloadCase_ == PayloadOneofCase.RegistAccountRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegistAccountRequest);
    }
    if (payloadCase_ == PayloadOneofCase.RegistAccountResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegistAccountResponse);
    }
    if (payloadCase_ == PayloadOneofCase.LoginRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(LoginRequest);
    }
    if (payloadCase_ == PayloadOneofCase.LoginResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(LoginResponse);
    }
    if (payloadCase_ == PayloadOneofCase.ChangeNicknameRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChangeNicknameRequest);
    }
    if (payloadCase_ == PayloadOneofCase.ChangeNicknameResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChangeNicknameResponse);
    }
    if (payloadCase_ == PayloadOneofCase.EnterLobbyRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(EnterLobbyRequest);
    }
    if (payloadCase_ == PayloadOneofCase.EnterLobbyResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(EnterLobbyResponse);
    }
    if (payloadCase_ == PayloadOneofCase.WaitingRoomListRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(WaitingRoomListRequest);
    }
    if (payloadCase_ == PayloadOneofCase.WaitingRoomListResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(WaitingRoomListResponse);
    }
    if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateRoomRequest);
    }
    if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateRoomResponse);
    }
    if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(JoinRoomRequest);
    }
    if (payloadCase_ == PayloadOneofCase.JoinRoomByGameSessionIdRequest) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(JoinRoomByGameSessionIdRequest);
    }
    if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(JoinRoomResponse);
    }
    if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(JoinRoomNotification);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GamePacket other) {
    if (other == null) {
      return;
    }
    switch (other.PayloadCase) {
      case PayloadOneofCase.PlayerMoveRequest:
        if (PlayerMoveRequest == null) {
          PlayerMoveRequest = new global::C2S_PlayerMoveRequest();
        }
        PlayerMoveRequest.MergeFrom(other.PlayerMoveRequest);
        break;
      case PayloadOneofCase.PlayerMoveNotification:
        if (PlayerMoveNotification == null) {
          PlayerMoveNotification = new global::S2C_PlayerMoveNotification();
        }
        PlayerMoveNotification.MergeFrom(other.PlayerMoveNotification);
        break;
      case PayloadOneofCase.GhostMoveRequest:
        if (GhostMoveRequest == null) {
          GhostMoveRequest = new global::C2S_GhostMoveRequest();
        }
        GhostMoveRequest.MergeFrom(other.GhostMoveRequest);
        break;
      case PayloadOneofCase.GhostMoveNotification:
        if (GhostMoveNotification == null) {
          GhostMoveNotification = new global::S2C_GhostMoveNotification();
        }
        GhostMoveNotification.MergeFrom(other.GhostMoveNotification);
        break;
      case PayloadOneofCase.PingRequest:
        if (PingRequest == null) {
          PingRequest = new global::S2C_PingRequest();
        }
        PingRequest.MergeFrom(other.PingRequest);
        break;
      case PayloadOneofCase.PingResponse:
        if (PingResponse == null) {
          PingResponse = new global::C2S_PingResponse();
        }
        PingResponse.MergeFrom(other.PingResponse);
        break;
      case PayloadOneofCase.PlayerStateChangeRequest:
        if (PlayerStateChangeRequest == null) {
          PlayerStateChangeRequest = new global::C2S_PlayerStateChangeRequest();
        }
        PlayerStateChangeRequest.MergeFrom(other.PlayerStateChangeRequest);
        break;
      case PayloadOneofCase.PlayerStateChangeNotification:
        if (PlayerStateChangeNotification == null) {
          PlayerStateChangeNotification = new global::S2C_PlayerStateChangeNotification();
        }
        PlayerStateChangeNotification.MergeFrom(other.PlayerStateChangeNotification);
        break;
      case PayloadOneofCase.GhostStateChangeRequest:
        if (GhostStateChangeRequest == null) {
          GhostStateChangeRequest = new global::C2S_GhostStateChangeRequest();
        }
        GhostStateChangeRequest.MergeFrom(other.GhostStateChangeRequest);
        break;
      case PayloadOneofCase.GhostStateChangeNotification:
        if (GhostStateChangeNotification == null) {
          GhostStateChangeNotification = new global::S2C_GhostStateChangeNotification();
        }
        GhostStateChangeNotification.MergeFrom(other.GhostStateChangeNotification);
        break;
      case PayloadOneofCase.ItemChangeRequest:
        if (ItemChangeRequest == null) {
          ItemChangeRequest = new global::C2S_ItemChangeRequest();
        }
        ItemChangeRequest.MergeFrom(other.ItemChangeRequest);
        break;
      case PayloadOneofCase.ItemChangeNotification:
        if (ItemChangeNotification == null) {
          ItemChangeNotification = new global::S2C_ItemChangeNotification();
        }
        ItemChangeNotification.MergeFrom(other.ItemChangeNotification);
        break;
      case PayloadOneofCase.PlayerAttackedRequest:
        if (PlayerAttackedRequest == null) {
          PlayerAttackedRequest = new global::C2S_PlayerAttackedRequest();
        }
        PlayerAttackedRequest.MergeFrom(other.PlayerAttackedRequest);
        break;
      case PayloadOneofCase.PlayerLifeResponse:
        if (PlayerLifeResponse == null) {
          PlayerLifeResponse = new global::S2C_PlayerLifeResponse();
        }
        PlayerLifeResponse.MergeFrom(other.PlayerLifeResponse);
        break;
      case PayloadOneofCase.LifeUpdateRequest:
        if (LifeUpdateRequest == null) {
          LifeUpdateRequest = new global::C2S_LifeUpdateRequest();
        }
        LifeUpdateRequest.MergeFrom(other.LifeUpdateRequest);
        break;
      case PayloadOneofCase.GhostSpecialStateRequest:
        if (GhostSpecialStateRequest == null) {
          GhostSpecialStateRequest = new global::C2S_GhostSpecialStateRequest();
        }
        GhostSpecialStateRequest.MergeFrom(other.GhostSpecialStateRequest);
        break;
      case PayloadOneofCase.GhostSpecialStateNotification:
        if (GhostSpecialStateNotification == null) {
          GhostSpecialStateNotification = new global::S2C_GhostSpecialStateNotification();
        }
        GhostSpecialStateNotification.MergeFrom(other.GhostSpecialStateNotification);
        break;
      case PayloadOneofCase.GhostAttackedRequest:
        if (GhostAttackedRequest == null) {
          GhostAttackedRequest = new global::C2S_GhostAttackedRequest();
        }
        GhostAttackedRequest.MergeFrom(other.GhostAttackedRequest);
        break;
      case PayloadOneofCase.GhostSpawnRequest:
        if (GhostSpawnRequest == null) {
          GhostSpawnRequest = new global::C2S_GhostSpawnRequest();
        }
        GhostSpawnRequest.MergeFrom(other.GhostSpawnRequest);
        break;
      case PayloadOneofCase.GhostSpawnNotification:
        if (GhostSpawnNotification == null) {
          GhostSpawnNotification = new global::S2C_GhostSpawnNotification();
        }
        GhostSpawnNotification.MergeFrom(other.GhostSpawnNotification);
        break;
      case PayloadOneofCase.GhostDeleteNotification:
        if (GhostDeleteNotification == null) {
          GhostDeleteNotification = new global::S2C_GhostDeleteNotification();
        }
        GhostDeleteNotification.MergeFrom(other.GhostDeleteNotification);
        break;
      case PayloadOneofCase.ItemGetRequest:
        if (ItemGetRequest == null) {
          ItemGetRequest = new global::C2S_ItemGetRequest();
        }
        ItemGetRequest.MergeFrom(other.ItemGetRequest);
        break;
      case PayloadOneofCase.ItemGetResponse:
        if (ItemGetResponse == null) {
          ItemGetResponse = new global::S2C_ItemGetResponse();
        }
        ItemGetResponse.MergeFrom(other.ItemGetResponse);
        break;
      case PayloadOneofCase.ItemGetNotification:
        if (ItemGetNotification == null) {
          ItemGetNotification = new global::S2C_ItemGetNotification();
        }
        ItemGetNotification.MergeFrom(other.ItemGetNotification);
        break;
      case PayloadOneofCase.ItemUseRequest:
        if (ItemUseRequest == null) {
          ItemUseRequest = new global::C2S_ItemUseRequest();
        }
        ItemUseRequest.MergeFrom(other.ItemUseRequest);
        break;
      case PayloadOneofCase.ItemUseResponse:
        if (ItemUseResponse == null) {
          ItemUseResponse = new global::S2C_ItemUseResponse();
        }
        ItemUseResponse.MergeFrom(other.ItemUseResponse);
        break;
      case PayloadOneofCase.ItemUseNotification:
        if (ItemUseNotification == null) {
          ItemUseNotification = new global::S2C_ItemUseNotification();
        }
        ItemUseNotification.MergeFrom(other.ItemUseNotification);
        break;
      case PayloadOneofCase.ItemDiscardRequest:
        if (ItemDiscardRequest == null) {
          ItemDiscardRequest = new global::C2S_ItemDiscardRequest();
        }
        ItemDiscardRequest.MergeFrom(other.ItemDiscardRequest);
        break;
      case PayloadOneofCase.ItemDiscardResponse:
        if (ItemDiscardResponse == null) {
          ItemDiscardResponse = new global::S2C_ItemDiscardResponse();
        }
        ItemDiscardResponse.MergeFrom(other.ItemDiscardResponse);
        break;
      case PayloadOneofCase.ItemDiscardNotification:
        if (ItemDiscardNotification == null) {
          ItemDiscardNotification = new global::S2C_ItemDiscardNotification();
        }
        ItemDiscardNotification.MergeFrom(other.ItemDiscardNotification);
        break;
      case PayloadOneofCase.ItemDisuseRequest:
        if (ItemDisuseRequest == null) {
          ItemDisuseRequest = new global::C2S_ItemDisuseRequest();
        }
        ItemDisuseRequest.MergeFrom(other.ItemDisuseRequest);
        break;
      case PayloadOneofCase.ItemDisuseNotification:
        if (ItemDisuseNotification == null) {
          ItemDisuseNotification = new global::S2C_ItemDisuseNotification();
        }
        ItemDisuseNotification.MergeFrom(other.ItemDisuseNotification);
        break;
      case PayloadOneofCase.ItemDeleteNotification:
        if (ItemDeleteNotification == null) {
          ItemDeleteNotification = new global::S2C_ItemDeleteNotification();
        }
        ItemDeleteNotification.MergeFrom(other.ItemDeleteNotification);
        break;
      case PayloadOneofCase.ItemPurchaseRequest:
        if (ItemPurchaseRequest == null) {
          ItemPurchaseRequest = new global::C2S_ItemPurchaseRequest();
        }
        ItemPurchaseRequest.MergeFrom(other.ItemPurchaseRequest);
        break;
      case PayloadOneofCase.ItemPurchaseNotification:
        if (ItemPurchaseNotification == null) {
          ItemPurchaseNotification = new global::S2C_ItemPurchaseNotification();
        }
        ItemPurchaseNotification.MergeFrom(other.ItemPurchaseNotification);
        break;
      case PayloadOneofCase.ItemPurchaseResponse:
        if (ItemPurchaseResponse == null) {
          ItemPurchaseResponse = new global::S2C_ItemPurchaseResponse();
        }
        ItemPurchaseResponse.MergeFrom(other.ItemPurchaseResponse);
        break;
      case PayloadOneofCase.ItemCreateRequest:
        if (ItemCreateRequest == null) {
          ItemCreateRequest = new global::C2S_ItemCreateRequest();
        }
        ItemCreateRequest.MergeFrom(other.ItemCreateRequest);
        break;
      case PayloadOneofCase.ItemCreateNotification:
        if (ItemCreateNotification == null) {
          ItemCreateNotification = new global::S2C_ItemCreateNotification();
        }
        ItemCreateNotification.MergeFrom(other.ItemCreateNotification);
        break;
      case PayloadOneofCase.DoorToggleRequest:
        if (DoorToggleRequest == null) {
          DoorToggleRequest = new global::C2S_DoorToggleRequest();
        }
        DoorToggleRequest.MergeFrom(other.DoorToggleRequest);
        break;
      case PayloadOneofCase.DoorToggleNotification:
        if (DoorToggleNotification == null) {
          DoorToggleNotification = new global::S2C_DoorToggleNotification();
        }
        DoorToggleNotification.MergeFrom(other.DoorToggleNotification);
        break;
      case PayloadOneofCase.ExtractSoulRequest:
        if (ExtractSoulRequest == null) {
          ExtractSoulRequest = new global::C2S_ExtractSoulRequest();
        }
        ExtractSoulRequest.MergeFrom(other.ExtractSoulRequest);
        break;
      case PayloadOneofCase.ExtractSoulNotification:
        if (ExtractSoulNotification == null) {
          ExtractSoulNotification = new global::S2C_ExtractSoulNotification();
        }
        ExtractSoulNotification.MergeFrom(other.ExtractSoulNotification);
        break;
      case PayloadOneofCase.DisconnectPlayerNotification:
        if (DisconnectPlayerNotification == null) {
          DisconnectPlayerNotification = new global::S2C_DisconnectPlayerNotification();
        }
        DisconnectPlayerNotification.MergeFrom(other.DisconnectPlayerNotification);
        break;
      case PayloadOneofCase.RemainingTimeNotification:
        if (RemainingTimeNotification == null) {
          RemainingTimeNotification = new global::S2C_RemainingTimeNotification();
        }
        RemainingTimeNotification.MergeFrom(other.RemainingTimeNotification);
        break;
      case PayloadOneofCase.BlockInteractionNotification:
        if (BlockInteractionNotification == null) {
          BlockInteractionNotification = new global::S2C_BlockInteractionNotification();
        }
        BlockInteractionNotification.MergeFrom(other.BlockInteractionNotification);
        break;
      case PayloadOneofCase.StartStageRequest:
        if (StartStageRequest == null) {
          StartStageRequest = new global::C2S_StartStageRequest();
        }
        StartStageRequest.MergeFrom(other.StartStageRequest);
        break;
      case PayloadOneofCase.StartStageNotification:
        if (StartStageNotification == null) {
          StartStageNotification = new global::S2C_StartStageNotification();
        }
        StartStageNotification.MergeFrom(other.StartStageNotification);
        break;
      case PayloadOneofCase.StageEndNotification:
        if (StageEndNotification == null) {
          StageEndNotification = new global::S2C_StageEndNotification();
        }
        StageEndNotification.MergeFrom(other.StageEndNotification);
        break;
      case PayloadOneofCase.SubmissionEndNotification:
        if (SubmissionEndNotification == null) {
          SubmissionEndNotification = new global::S2C_SubmissionEndNotification();
        }
        SubmissionEndNotification.MergeFrom(other.SubmissionEndNotification);
        break;
      case PayloadOneofCase.DifficultySelectRequest:
        if (DifficultySelectRequest == null) {
          DifficultySelectRequest = new global::C2S_DifficultySelectRequest();
        }
        DifficultySelectRequest.MergeFrom(other.DifficultySelectRequest);
        break;
      case PayloadOneofCase.DifficultySelectNotification:
        if (DifficultySelectNotification == null) {
          DifficultySelectNotification = new global::S2C_DifficultySelectNotification();
        }
        DifficultySelectNotification.MergeFrom(other.DifficultySelectNotification);
        break;
      case PayloadOneofCase.DisconnectRoomRequest:
        if (DisconnectRoomRequest == null) {
          DisconnectRoomRequest = new global::C2S_DisconnectRoomRequest();
        }
        DisconnectRoomRequest.MergeFrom(other.DisconnectRoomRequest);
        break;
      case PayloadOneofCase.KickRoomNotification:
        if (KickRoomNotification == null) {
          KickRoomNotification = new global::S2C_KickRoomNotification();
        }
        KickRoomNotification.MergeFrom(other.KickRoomNotification);
        break;
      case PayloadOneofCase.RegistAccountRequest:
        if (RegistAccountRequest == null) {
          RegistAccountRequest = new global::C2S_RegistAccountRequest();
        }
        RegistAccountRequest.MergeFrom(other.RegistAccountRequest);
        break;
      case PayloadOneofCase.RegistAccountResponse:
        if (RegistAccountResponse == null) {
          RegistAccountResponse = new global::S2C_RegistAccountResponse();
        }
        RegistAccountResponse.MergeFrom(other.RegistAccountResponse);
        break;
      case PayloadOneofCase.LoginRequest:
        if (LoginRequest == null) {
          LoginRequest = new global::C2S_LoginRequest();
        }
        LoginRequest.MergeFrom(other.LoginRequest);
        break;
      case PayloadOneofCase.LoginResponse:
        if (LoginResponse == null) {
          LoginResponse = new global::S2C_LoginResponse();
        }
        LoginResponse.MergeFrom(other.LoginResponse);
        break;
      case PayloadOneofCase.ChangeNicknameRequest:
        if (ChangeNicknameRequest == null) {
          ChangeNicknameRequest = new global::C2S_ChangeNicknameRequest();
        }
        ChangeNicknameRequest.MergeFrom(other.ChangeNicknameRequest);
        break;
      case PayloadOneofCase.ChangeNicknameResponse:
        if (ChangeNicknameResponse == null) {
          ChangeNicknameResponse = new global::S2C_ChangeNicknameResponse();
        }
        ChangeNicknameResponse.MergeFrom(other.ChangeNicknameResponse);
        break;
      case PayloadOneofCase.EnterLobbyRequest:
        if (EnterLobbyRequest == null) {
          EnterLobbyRequest = new global::C2S_EnterLobbyRequest();
        }
        EnterLobbyRequest.MergeFrom(other.EnterLobbyRequest);
        break;
      case PayloadOneofCase.EnterLobbyResponse:
        if (EnterLobbyResponse == null) {
          EnterLobbyResponse = new global::S2C_EnterLobbyResponse();
        }
        EnterLobbyResponse.MergeFrom(other.EnterLobbyResponse);
        break;
      case PayloadOneofCase.WaitingRoomListRequest:
        if (WaitingRoomListRequest == null) {
          WaitingRoomListRequest = new global::C2S_WaitingRoomListRequest();
        }
        WaitingRoomListRequest.MergeFrom(other.WaitingRoomListRequest);
        break;
      case PayloadOneofCase.WaitingRoomListResponse:
        if (WaitingRoomListResponse == null) {
          WaitingRoomListResponse = new global::S2C_WaitingRoomListResponse();
        }
        WaitingRoomListResponse.MergeFrom(other.WaitingRoomListResponse);
        break;
      case PayloadOneofCase.CreateRoomRequest:
        if (CreateRoomRequest == null) {
          CreateRoomRequest = new global::C2S_CreateRoomRequest();
        }
        CreateRoomRequest.MergeFrom(other.CreateRoomRequest);
        break;
      case PayloadOneofCase.CreateRoomResponse:
        if (CreateRoomResponse == null) {
          CreateRoomResponse = new global::S2C_CreateRoomResponse();
        }
        CreateRoomResponse.MergeFrom(other.CreateRoomResponse);
        break;
      case PayloadOneofCase.JoinRoomRequest:
        if (JoinRoomRequest == null) {
          JoinRoomRequest = new global::C2S_JoinRoomRequest();
        }
        JoinRoomRequest.MergeFrom(other.JoinRoomRequest);
        break;
      case PayloadOneofCase.JoinRoomByGameSessionIdRequest:
        if (JoinRoomByGameSessionIdRequest == null) {
          JoinRoomByGameSessionIdRequest = new global::C2S_JoinRoomByGameSessionIdRequest();
        }
        JoinRoomByGameSessionIdRequest.MergeFrom(other.JoinRoomByGameSessionIdRequest);
        break;
      case PayloadOneofCase.JoinRoomResponse:
        if (JoinRoomResponse == null) {
          JoinRoomResponse = new global::S2C_JoinRoomResponse();
        }
        JoinRoomResponse.MergeFrom(other.JoinRoomResponse);
        break;
      case PayloadOneofCase.JoinRoomNotification:
        if (JoinRoomNotification == null) {
          JoinRoomNotification = new global::S2C_JoinRoomNotification();
        }
        JoinRoomNotification.MergeFrom(other.JoinRoomNotification);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          global::C2S_PlayerMoveRequest subBuilder = new global::C2S_PlayerMoveRequest();
          if (payloadCase_ == PayloadOneofCase.PlayerMoveRequest) {
            subBuilder.MergeFrom(PlayerMoveRequest);
          }
          input.ReadMessage(subBuilder);
          PlayerMoveRequest = subBuilder;
          break;
        }
        case 18: {
          global::S2C_PlayerMoveNotification subBuilder = new global::S2C_PlayerMoveNotification();
          if (payloadCase_ == PayloadOneofCase.PlayerMoveNotification) {
            subBuilder.MergeFrom(PlayerMoveNotification);
          }
          input.ReadMessage(subBuilder);
          PlayerMoveNotification = subBuilder;
          break;
        }
        case 26: {
          global::C2S_GhostMoveRequest subBuilder = new global::C2S_GhostMoveRequest();
          if (payloadCase_ == PayloadOneofCase.GhostMoveRequest) {
            subBuilder.MergeFrom(GhostMoveRequest);
          }
          input.ReadMessage(subBuilder);
          GhostMoveRequest = subBuilder;
          break;
        }
        case 34: {
          global::S2C_GhostMoveNotification subBuilder = new global::S2C_GhostMoveNotification();
          if (payloadCase_ == PayloadOneofCase.GhostMoveNotification) {
            subBuilder.MergeFrom(GhostMoveNotification);
          }
          input.ReadMessage(subBuilder);
          GhostMoveNotification = subBuilder;
          break;
        }
        case 42: {
          global::S2C_PingRequest subBuilder = new global::S2C_PingRequest();
          if (payloadCase_ == PayloadOneofCase.PingRequest) {
            subBuilder.MergeFrom(PingRequest);
          }
          input.ReadMessage(subBuilder);
          PingRequest = subBuilder;
          break;
        }
        case 50: {
          global::C2S_PingResponse subBuilder = new global::C2S_PingResponse();
          if (payloadCase_ == PayloadOneofCase.PingResponse) {
            subBuilder.MergeFrom(PingResponse);
          }
          input.ReadMessage(subBuilder);
          PingResponse = subBuilder;
          break;
        }
        case 58: {
          global::C2S_PlayerStateChangeRequest subBuilder = new global::C2S_PlayerStateChangeRequest();
          if (payloadCase_ == PayloadOneofCase.PlayerStateChangeRequest) {
            subBuilder.MergeFrom(PlayerStateChangeRequest);
          }
          input.ReadMessage(subBuilder);
          PlayerStateChangeRequest = subBuilder;
          break;
        }
        case 66: {
          global::S2C_PlayerStateChangeNotification subBuilder = new global::S2C_PlayerStateChangeNotification();
          if (payloadCase_ == PayloadOneofCase.PlayerStateChangeNotification) {
            subBuilder.MergeFrom(PlayerStateChangeNotification);
          }
          input.ReadMessage(subBuilder);
          PlayerStateChangeNotification = subBuilder;
          break;
        }
        case 74: {
          global::C2S_GhostStateChangeRequest subBuilder = new global::C2S_GhostStateChangeRequest();
          if (payloadCase_ == PayloadOneofCase.GhostStateChangeRequest) {
            subBuilder.MergeFrom(GhostStateChangeRequest);
          }
          input.ReadMessage(subBuilder);
          GhostStateChangeRequest = subBuilder;
          break;
        }
        case 82: {
          global::S2C_GhostStateChangeNotification subBuilder = new global::S2C_GhostStateChangeNotification();
          if (payloadCase_ == PayloadOneofCase.GhostStateChangeNotification) {
            subBuilder.MergeFrom(GhostStateChangeNotification);
          }
          input.ReadMessage(subBuilder);
          GhostStateChangeNotification = subBuilder;
          break;
        }
        case 90: {
          global::C2S_ItemChangeRequest subBuilder = new global::C2S_ItemChangeRequest();
          if (payloadCase_ == PayloadOneofCase.ItemChangeRequest) {
            subBuilder.MergeFrom(ItemChangeRequest);
          }
          input.ReadMessage(subBuilder);
          ItemChangeRequest = subBuilder;
          break;
        }
        case 98: {
          global::S2C_ItemChangeNotification subBuilder = new global::S2C_ItemChangeNotification();
          if (payloadCase_ == PayloadOneofCase.ItemChangeNotification) {
            subBuilder.MergeFrom(ItemChangeNotification);
          }
          input.ReadMessage(subBuilder);
          ItemChangeNotification = subBuilder;
          break;
        }
        case 810: {
          global::C2S_PlayerAttackedRequest subBuilder = new global::C2S_PlayerAttackedRequest();
          if (payloadCase_ == PayloadOneofCase.PlayerAttackedRequest) {
            subBuilder.MergeFrom(PlayerAttackedRequest);
          }
          input.ReadMessage(subBuilder);
          PlayerAttackedRequest = subBuilder;
          break;
        }
        case 818: {
          global::S2C_PlayerLifeResponse subBuilder = new global::S2C_PlayerLifeResponse();
          if (payloadCase_ == PayloadOneofCase.PlayerLifeResponse) {
            subBuilder.MergeFrom(PlayerLifeResponse);
          }
          input.ReadMessage(subBuilder);
          PlayerLifeResponse = subBuilder;
          break;
        }
        case 826: {
          global::C2S_LifeUpdateRequest subBuilder = new global::C2S_LifeUpdateRequest();
          if (payloadCase_ == PayloadOneofCase.LifeUpdateRequest) {
            subBuilder.MergeFrom(LifeUpdateRequest);
          }
          input.ReadMessage(subBuilder);
          LifeUpdateRequest = subBuilder;
          break;
        }
        case 1610: {
          global::C2S_GhostSpecialStateRequest subBuilder = new global::C2S_GhostSpecialStateRequest();
          if (payloadCase_ == PayloadOneofCase.GhostSpecialStateRequest) {
            subBuilder.MergeFrom(GhostSpecialStateRequest);
          }
          input.ReadMessage(subBuilder);
          GhostSpecialStateRequest = subBuilder;
          break;
        }
        case 1618: {
          global::S2C_GhostSpecialStateNotification subBuilder = new global::S2C_GhostSpecialStateNotification();
          if (payloadCase_ == PayloadOneofCase.GhostSpecialStateNotification) {
            subBuilder.MergeFrom(GhostSpecialStateNotification);
          }
          input.ReadMessage(subBuilder);
          GhostSpecialStateNotification = subBuilder;
          break;
        }
        case 1626: {
          global::C2S_GhostAttackedRequest subBuilder = new global::C2S_GhostAttackedRequest();
          if (payloadCase_ == PayloadOneofCase.GhostAttackedRequest) {
            subBuilder.MergeFrom(GhostAttackedRequest);
          }
          input.ReadMessage(subBuilder);
          GhostAttackedRequest = subBuilder;
          break;
        }
        case 1634: {
          global::C2S_GhostSpawnRequest subBuilder = new global::C2S_GhostSpawnRequest();
          if (payloadCase_ == PayloadOneofCase.GhostSpawnRequest) {
            subBuilder.MergeFrom(GhostSpawnRequest);
          }
          input.ReadMessage(subBuilder);
          GhostSpawnRequest = subBuilder;
          break;
        }
        case 1642: {
          global::S2C_GhostSpawnNotification subBuilder = new global::S2C_GhostSpawnNotification();
          if (payloadCase_ == PayloadOneofCase.GhostSpawnNotification) {
            subBuilder.MergeFrom(GhostSpawnNotification);
          }
          input.ReadMessage(subBuilder);
          GhostSpawnNotification = subBuilder;
          break;
        }
        case 1650: {
          global::S2C_GhostDeleteNotification subBuilder = new global::S2C_GhostDeleteNotification();
          if (payloadCase_ == PayloadOneofCase.GhostDeleteNotification) {
            subBuilder.MergeFrom(GhostDeleteNotification);
          }
          input.ReadMessage(subBuilder);
          GhostDeleteNotification = subBuilder;
          break;
        }
        case 2410: {
          global::C2S_ItemGetRequest subBuilder = new global::C2S_ItemGetRequest();
          if (payloadCase_ == PayloadOneofCase.ItemGetRequest) {
            subBuilder.MergeFrom(ItemGetRequest);
          }
          input.ReadMessage(subBuilder);
          ItemGetRequest = subBuilder;
          break;
        }
        case 2418: {
          global::S2C_ItemGetResponse subBuilder = new global::S2C_ItemGetResponse();
          if (payloadCase_ == PayloadOneofCase.ItemGetResponse) {
            subBuilder.MergeFrom(ItemGetResponse);
          }
          input.ReadMessage(subBuilder);
          ItemGetResponse = subBuilder;
          break;
        }
        case 2426: {
          global::S2C_ItemGetNotification subBuilder = new global::S2C_ItemGetNotification();
          if (payloadCase_ == PayloadOneofCase.ItemGetNotification) {
            subBuilder.MergeFrom(ItemGetNotification);
          }
          input.ReadMessage(subBuilder);
          ItemGetNotification = subBuilder;
          break;
        }
        case 2434: {
          global::C2S_ItemUseRequest subBuilder = new global::C2S_ItemUseRequest();
          if (payloadCase_ == PayloadOneofCase.ItemUseRequest) {
            subBuilder.MergeFrom(ItemUseRequest);
          }
          input.ReadMessage(subBuilder);
          ItemUseRequest = subBuilder;
          break;
        }
        case 2442: {
          global::S2C_ItemUseResponse subBuilder = new global::S2C_ItemUseResponse();
          if (payloadCase_ == PayloadOneofCase.ItemUseResponse) {
            subBuilder.MergeFrom(ItemUseResponse);
          }
          input.ReadMessage(subBuilder);
          ItemUseResponse = subBuilder;
          break;
        }
        case 2450: {
          global::S2C_ItemUseNotification subBuilder = new global::S2C_ItemUseNotification();
          if (payloadCase_ == PayloadOneofCase.ItemUseNotification) {
            subBuilder.MergeFrom(ItemUseNotification);
          }
          input.ReadMessage(subBuilder);
          ItemUseNotification = subBuilder;
          break;
        }
        case 2458: {
          global::C2S_ItemDiscardRequest subBuilder = new global::C2S_ItemDiscardRequest();
          if (payloadCase_ == PayloadOneofCase.ItemDiscardRequest) {
            subBuilder.MergeFrom(ItemDiscardRequest);
          }
          input.ReadMessage(subBuilder);
          ItemDiscardRequest = subBuilder;
          break;
        }
        case 2466: {
          global::S2C_ItemDiscardResponse subBuilder = new global::S2C_ItemDiscardResponse();
          if (payloadCase_ == PayloadOneofCase.ItemDiscardResponse) {
            subBuilder.MergeFrom(ItemDiscardResponse);
          }
          input.ReadMessage(subBuilder);
          ItemDiscardResponse = subBuilder;
          break;
        }
        case 2474: {
          global::S2C_ItemDiscardNotification subBuilder = new global::S2C_ItemDiscardNotification();
          if (payloadCase_ == PayloadOneofCase.ItemDiscardNotification) {
            subBuilder.MergeFrom(ItemDiscardNotification);
          }
          input.ReadMessage(subBuilder);
          ItemDiscardNotification = subBuilder;
          break;
        }
        case 2482: {
          global::C2S_ItemDisuseRequest subBuilder = new global::C2S_ItemDisuseRequest();
          if (payloadCase_ == PayloadOneofCase.ItemDisuseRequest) {
            subBuilder.MergeFrom(ItemDisuseRequest);
          }
          input.ReadMessage(subBuilder);
          ItemDisuseRequest = subBuilder;
          break;
        }
        case 2490: {
          global::S2C_ItemDisuseNotification subBuilder = new global::S2C_ItemDisuseNotification();
          if (payloadCase_ == PayloadOneofCase.ItemDisuseNotification) {
            subBuilder.MergeFrom(ItemDisuseNotification);
          }
          input.ReadMessage(subBuilder);
          ItemDisuseNotification = subBuilder;
          break;
        }
        case 2498: {
          global::S2C_ItemDeleteNotification subBuilder = new global::S2C_ItemDeleteNotification();
          if (payloadCase_ == PayloadOneofCase.ItemDeleteNotification) {
            subBuilder.MergeFrom(ItemDeleteNotification);
          }
          input.ReadMessage(subBuilder);
          ItemDeleteNotification = subBuilder;
          break;
        }
        case 2506: {
          global::C2S_ItemPurchaseRequest subBuilder = new global::C2S_ItemPurchaseRequest();
          if (payloadCase_ == PayloadOneofCase.ItemPurchaseRequest) {
            subBuilder.MergeFrom(ItemPurchaseRequest);
          }
          input.ReadMessage(subBuilder);
          ItemPurchaseRequest = subBuilder;
          break;
        }
        case 2514: {
          global::S2C_ItemPurchaseNotification subBuilder = new global::S2C_ItemPurchaseNotification();
          if (payloadCase_ == PayloadOneofCase.ItemPurchaseNotification) {
            subBuilder.MergeFrom(ItemPurchaseNotification);
          }
          input.ReadMessage(subBuilder);
          ItemPurchaseNotification = subBuilder;
          break;
        }
        case 2522: {
          global::S2C_ItemPurchaseResponse subBuilder = new global::S2C_ItemPurchaseResponse();
          if (payloadCase_ == PayloadOneofCase.ItemPurchaseResponse) {
            subBuilder.MergeFrom(ItemPurchaseResponse);
          }
          input.ReadMessage(subBuilder);
          ItemPurchaseResponse = subBuilder;
          break;
        }
        case 2530: {
          global::C2S_ItemCreateRequest subBuilder = new global::C2S_ItemCreateRequest();
          if (payloadCase_ == PayloadOneofCase.ItemCreateRequest) {
            subBuilder.MergeFrom(ItemCreateRequest);
          }
          input.ReadMessage(subBuilder);
          ItemCreateRequest = subBuilder;
          break;
        }
        case 2538: {
          global::S2C_ItemCreateNotification subBuilder = new global::S2C_ItemCreateNotification();
          if (payloadCase_ == PayloadOneofCase.ItemCreateNotification) {
            subBuilder.MergeFrom(ItemCreateNotification);
          }
          input.ReadMessage(subBuilder);
          ItemCreateNotification = subBuilder;
          break;
        }
        case 2802: {
          global::C2S_DoorToggleRequest subBuilder = new global::C2S_DoorToggleRequest();
          if (payloadCase_ == PayloadOneofCase.DoorToggleRequest) {
            subBuilder.MergeFrom(DoorToggleRequest);
          }
          input.ReadMessage(subBuilder);
          DoorToggleRequest = subBuilder;
          break;
        }
        case 2810: {
          global::S2C_DoorToggleNotification subBuilder = new global::S2C_DoorToggleNotification();
          if (payloadCase_ == PayloadOneofCase.DoorToggleNotification) {
            subBuilder.MergeFrom(DoorToggleNotification);
          }
          input.ReadMessage(subBuilder);
          DoorToggleNotification = subBuilder;
          break;
        }
        case 3210: {
          global::C2S_ExtractSoulRequest subBuilder = new global::C2S_ExtractSoulRequest();
          if (payloadCase_ == PayloadOneofCase.ExtractSoulRequest) {
            subBuilder.MergeFrom(ExtractSoulRequest);
          }
          input.ReadMessage(subBuilder);
          ExtractSoulRequest = subBuilder;
          break;
        }
        case 3218: {
          global::S2C_ExtractSoulNotification subBuilder = new global::S2C_ExtractSoulNotification();
          if (payloadCase_ == PayloadOneofCase.ExtractSoulNotification) {
            subBuilder.MergeFrom(ExtractSoulNotification);
          }
          input.ReadMessage(subBuilder);
          ExtractSoulNotification = subBuilder;
          break;
        }
        case 3226: {
          global::S2C_DisconnectPlayerNotification subBuilder = new global::S2C_DisconnectPlayerNotification();
          if (payloadCase_ == PayloadOneofCase.DisconnectPlayerNotification) {
            subBuilder.MergeFrom(DisconnectPlayerNotification);
          }
          input.ReadMessage(subBuilder);
          DisconnectPlayerNotification = subBuilder;
          break;
        }
        case 3234: {
          global::S2C_RemainingTimeNotification subBuilder = new global::S2C_RemainingTimeNotification();
          if (payloadCase_ == PayloadOneofCase.RemainingTimeNotification) {
            subBuilder.MergeFrom(RemainingTimeNotification);
          }
          input.ReadMessage(subBuilder);
          RemainingTimeNotification = subBuilder;
          break;
        }
        case 3242: {
          global::S2C_BlockInteractionNotification subBuilder = new global::S2C_BlockInteractionNotification();
          if (payloadCase_ == PayloadOneofCase.BlockInteractionNotification) {
            subBuilder.MergeFrom(BlockInteractionNotification);
          }
          input.ReadMessage(subBuilder);
          BlockInteractionNotification = subBuilder;
          break;
        }
        case 3250: {
          global::C2S_StartStageRequest subBuilder = new global::C2S_StartStageRequest();
          if (payloadCase_ == PayloadOneofCase.StartStageRequest) {
            subBuilder.MergeFrom(StartStageRequest);
          }
          input.ReadMessage(subBuilder);
          StartStageRequest = subBuilder;
          break;
        }
        case 3258: {
          global::S2C_StartStageNotification subBuilder = new global::S2C_StartStageNotification();
          if (payloadCase_ == PayloadOneofCase.StartStageNotification) {
            subBuilder.MergeFrom(StartStageNotification);
          }
          input.ReadMessage(subBuilder);
          StartStageNotification = subBuilder;
          break;
        }
        case 3266: {
          global::S2C_StageEndNotification subBuilder = new global::S2C_StageEndNotification();
          if (payloadCase_ == PayloadOneofCase.StageEndNotification) {
            subBuilder.MergeFrom(StageEndNotification);
          }
          input.ReadMessage(subBuilder);
          StageEndNotification = subBuilder;
          break;
        }
        case 3274: {
          global::S2C_SubmissionEndNotification subBuilder = new global::S2C_SubmissionEndNotification();
          if (payloadCase_ == PayloadOneofCase.SubmissionEndNotification) {
            subBuilder.MergeFrom(SubmissionEndNotification);
          }
          input.ReadMessage(subBuilder);
          SubmissionEndNotification = subBuilder;
          break;
        }
        case 3282: {
          global::C2S_DifficultySelectRequest subBuilder = new global::C2S_DifficultySelectRequest();
          if (payloadCase_ == PayloadOneofCase.DifficultySelectRequest) {
            subBuilder.MergeFrom(DifficultySelectRequest);
          }
          input.ReadMessage(subBuilder);
          DifficultySelectRequest = subBuilder;
          break;
        }
        case 3290: {
          global::S2C_DifficultySelectNotification subBuilder = new global::S2C_DifficultySelectNotification();
          if (payloadCase_ == PayloadOneofCase.DifficultySelectNotification) {
            subBuilder.MergeFrom(DifficultySelectNotification);
          }
          input.ReadMessage(subBuilder);
          DifficultySelectNotification = subBuilder;
          break;
        }
        case 3298: {
          global::C2S_DisconnectRoomRequest subBuilder = new global::C2S_DisconnectRoomRequest();
          if (payloadCase_ == PayloadOneofCase.DisconnectRoomRequest) {
            subBuilder.MergeFrom(DisconnectRoomRequest);
          }
          input.ReadMessage(subBuilder);
          DisconnectRoomRequest = subBuilder;
          break;
        }
        case 3306: {
          global::S2C_KickRoomNotification subBuilder = new global::S2C_KickRoomNotification();
          if (payloadCase_ == PayloadOneofCase.KickRoomNotification) {
            subBuilder.MergeFrom(KickRoomNotification);
          }
          input.ReadMessage(subBuilder);
          KickRoomNotification = subBuilder;
          break;
        }
        case 4002: {
          global::C2S_RegistAccountRequest subBuilder = new global::C2S_RegistAccountRequest();
          if (payloadCase_ == PayloadOneofCase.RegistAccountRequest) {
            subBuilder.MergeFrom(RegistAccountRequest);
          }
          input.ReadMessage(subBuilder);
          RegistAccountRequest = subBuilder;
          break;
        }
        case 4010: {
          global::S2C_RegistAccountResponse subBuilder = new global::S2C_RegistAccountResponse();
          if (payloadCase_ == PayloadOneofCase.RegistAccountResponse) {
            subBuilder.MergeFrom(RegistAccountResponse);
          }
          input.ReadMessage(subBuilder);
          RegistAccountResponse = subBuilder;
          break;
        }
        case 4018: {
          global::C2S_LoginRequest subBuilder = new global::C2S_LoginRequest();
          if (payloadCase_ == PayloadOneofCase.LoginRequest) {
            subBuilder.MergeFrom(LoginRequest);
          }
          input.ReadMessage(subBuilder);
          LoginRequest = subBuilder;
          break;
        }
        case 4026: {
          global::S2C_LoginResponse subBuilder = new global::S2C_LoginResponse();
          if (payloadCase_ == PayloadOneofCase.LoginResponse) {
            subBuilder.MergeFrom(LoginResponse);
          }
          input.ReadMessage(subBuilder);
          LoginResponse = subBuilder;
          break;
        }
        case 4034: {
          global::C2S_ChangeNicknameRequest subBuilder = new global::C2S_ChangeNicknameRequest();
          if (payloadCase_ == PayloadOneofCase.ChangeNicknameRequest) {
            subBuilder.MergeFrom(ChangeNicknameRequest);
          }
          input.ReadMessage(subBuilder);
          ChangeNicknameRequest = subBuilder;
          break;
        }
        case 4042: {
          global::S2C_ChangeNicknameResponse subBuilder = new global::S2C_ChangeNicknameResponse();
          if (payloadCase_ == PayloadOneofCase.ChangeNicknameResponse) {
            subBuilder.MergeFrom(ChangeNicknameResponse);
          }
          input.ReadMessage(subBuilder);
          ChangeNicknameResponse = subBuilder;
          break;
        }
        case 4050: {
          global::C2S_EnterLobbyRequest subBuilder = new global::C2S_EnterLobbyRequest();
          if (payloadCase_ == PayloadOneofCase.EnterLobbyRequest) {
            subBuilder.MergeFrom(EnterLobbyRequest);
          }
          input.ReadMessage(subBuilder);
          EnterLobbyRequest = subBuilder;
          break;
        }
        case 4058: {
          global::S2C_EnterLobbyResponse subBuilder = new global::S2C_EnterLobbyResponse();
          if (payloadCase_ == PayloadOneofCase.EnterLobbyResponse) {
            subBuilder.MergeFrom(EnterLobbyResponse);
          }
          input.ReadMessage(subBuilder);
          EnterLobbyResponse = subBuilder;
          break;
        }
        case 4066: {
          global::C2S_WaitingRoomListRequest subBuilder = new global::C2S_WaitingRoomListRequest();
          if (payloadCase_ == PayloadOneofCase.WaitingRoomListRequest) {
            subBuilder.MergeFrom(WaitingRoomListRequest);
          }
          input.ReadMessage(subBuilder);
          WaitingRoomListRequest = subBuilder;
          break;
        }
        case 4074: {
          global::S2C_WaitingRoomListResponse subBuilder = new global::S2C_WaitingRoomListResponse();
          if (payloadCase_ == PayloadOneofCase.WaitingRoomListResponse) {
            subBuilder.MergeFrom(WaitingRoomListResponse);
          }
          input.ReadMessage(subBuilder);
          WaitingRoomListResponse = subBuilder;
          break;
        }
        case 4810: {
          global::C2S_CreateRoomRequest subBuilder = new global::C2S_CreateRoomRequest();
          if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) {
            subBuilder.MergeFrom(CreateRoomRequest);
          }
          input.ReadMessage(subBuilder);
          CreateRoomRequest = subBuilder;
          break;
        }
        case 4818: {
          global::S2C_CreateRoomResponse subBuilder = new global::S2C_CreateRoomResponse();
          if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) {
            subBuilder.MergeFrom(CreateRoomResponse);
          }
          input.ReadMessage(subBuilder);
          CreateRoomResponse = subBuilder;
          break;
        }
        case 4826: {
          global::C2S_JoinRoomRequest subBuilder = new global::C2S_JoinRoomRequest();
          if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) {
            subBuilder.MergeFrom(JoinRoomRequest);
          }
          input.ReadMessage(subBuilder);
          JoinRoomRequest = subBuilder;
          break;
        }
        case 4834: {
          global::C2S_JoinRoomByGameSessionIdRequest subBuilder = new global::C2S_JoinRoomByGameSessionIdRequest();
          if (payloadCase_ == PayloadOneofCase.JoinRoomByGameSessionIdRequest) {
            subBuilder.MergeFrom(JoinRoomByGameSessionIdRequest);
          }
          input.ReadMessage(subBuilder);
          JoinRoomByGameSessionIdRequest = subBuilder;
          break;
        }
        case 4842: {
          global::S2C_JoinRoomResponse subBuilder = new global::S2C_JoinRoomResponse();
          if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) {
            subBuilder.MergeFrom(JoinRoomResponse);
          }
          input.ReadMessage(subBuilder);
          JoinRoomResponse = subBuilder;
          break;
        }
        case 4850: {
          global::S2C_JoinRoomNotification subBuilder = new global::S2C_JoinRoomNotification();
          if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) {
            subBuilder.MergeFrom(JoinRoomNotification);
          }
          input.ReadMessage(subBuilder);
          JoinRoomNotification = subBuilder;
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
